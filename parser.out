Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANALYZE
    ARM
    AT
    BREAK
    CATCH
    CONST
    CONTINUE
    COPY
    DEFER
    DELETE
    EXPORT
    FALSE
    FINALLY
    LBRACKET
    MACRO
    MATCH
    MOVE
    OPERATOR
    OVERRIDE
    PRIV
    PUB
    RANGE_INCLUSIVE
    RBRACKET
    REFERENCE
    STATIC
    STRING
    STRUCT
    TRUE
    TRY
    UNSAFE
    USE
    VAR

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     statement -> function_definition
Rule 4     statement -> class_definition
Rule 5     statement -> struct_definition
Rule 6     statement -> enum_definition
Rule 7     statement -> namespace_definition
Rule 8     statement -> variable_declaration SEMI
Rule 9     statement -> interface_definition
Rule 10    statement -> return_statement SEMI
Rule 11    namespace_definition -> NAMESPACE ID LBRACE program RBRACE
Rule 12    namespace_definition -> NAMESPACE ID LBRACE RBRACE
Rule 13    return_statement -> RETURN expression
Rule 14    generics_opt -> LANGLE generics_list RANGLE
Rule 15    generics_opt -> empty
Rule 16    generics_list -> generics_list COMMA ID
Rule 17    generics_list -> ID
Rule 18    class_body -> class_body class_member
Rule 19    class_body -> empty
Rule 20    class_member -> variable_declaration SEMI
Rule 21    class_member -> function_definition
Rule 22    struct_body -> struct_body struct_member
Rule 23    struct_body -> empty
Rule 24    struct_member -> variable_declaration SEMI
Rule 25    struct_member -> function_definition
Rule 26    enum_body -> enum_body enum_member
Rule 27    enum_body -> enum_member
Rule 28    enum_member -> ID
Rule 29    enum_member -> ID ASSIGN NUMBER
Rule 30    extends_opt -> EXTENDS ID generics_opt
Rule 31    extends_opt -> empty
Rule 32    type_specifier -> ID
Rule 33    type_specifier -> POINTER type_specifier
Rule 34    type_specifier -> REF type_specifier
Rule 35    expression -> expression AND expression
Rule 36    expression -> expression OR expression
Rule 37    expression -> expression EQ expression
Rule 38    expression -> expression NEQ expression
Rule 39    expression -> expression LTHEN expression
Rule 40    expression -> expression RTHEN expression
Rule 41    expression -> expression LEQ expression
Rule 42    expression -> expression GEQ expression
Rule 43    statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE
Rule 44    expression -> expression PLUS expression
Rule 45    expression -> expression MINUS expression
Rule 46    expression -> expression TIMES expression
Rule 47    expression -> expression DIVIDE expression
Rule 48    expression -> expression MOD expression
Rule 49    expression -> LPAREN expression RPAREN
Rule 50    expression -> ID LPAREN arg_list_opt RPAREN
Rule 51    arg_list_opt -> arg_list
Rule 52    arg_list_opt -> empty
Rule 53    arg_list -> arg_list COMMA expression
Rule 54    arg_list -> expression
Rule 55    arg_list -> empty
Rule 56    statement -> IF LPAREN expression RPAREN LBRACE program RBRACE
Rule 57    statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
Rule 58    statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE
Rule 59    empty -> <empty>
Rule 60    expression -> NUMBER
Rule 61    expression -> ID
Rule 62    expression -> REF ID
Rule 63    expression -> POINTER expression
Rule 64    parameters_opt -> parameters_list
Rule 65    parameters_opt -> empty
Rule 66    parameters_list -> parameters_list COMMA parameter
Rule 67    parameters_list -> parameter
Rule 68    parameter -> type_specifier ID
Rule 69    return_type_opt -> ARROW type_specifier
Rule 70    return_type_opt -> empty
Rule 71    function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
Rule 72    class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE
Rule 73    statement -> variable_declaration
Rule 74    expression -> error
Rule 75    variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI
Rule 76    variable_declaration -> type_specifier ID SEMI
Rule 77    variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
Rule 78    variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI
Rule 79    variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
Rule 80    interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE
Rule 81    interface_body -> interface_body function_definition
Rule 82    interface_body -> empty
Rule 83    struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE
Rule 84    enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE

Terminals, with rules where they appear

ANALYZE              : 
AND                  : 35
ARM                  : 
ARROW                : 69
ASSIGN               : 29 77 79
AT                   : 
BREAK                : 
CATCH                : 
CLASS                : 72 83
COMMA                : 16 53 66
CONST                : 
CONTINUE             : 
COPY                 : 
DEFER                : 
DELETE               : 
DIVIDE               : 47
ELSE                 : 57
ENUM                 : 84
EQ                   : 37
EXPORT               : 
EXTENDS              : 30
FALSE                : 
FINALLY              : 
FN                   : 71
FOR                  : 43
GEQ                  : 42
ID                   : 11 12 16 17 28 29 30 32 43 50 61 62 68 71 72 75 76 77 78 79 80 83 84
IF                   : 56 57
IN                   : 43
INTERFACE            : 80
LANGLE               : 14
LBRACE               : 11 12 43 56 57 57 58 71 72 78 80 83 84
LBRACKET             : 
LEQ                  : 41
LPAREN               : 49 50 56 57 58 71 75 77 79
LTHEN                : 39
MACRO                : 
MATCH                : 
MINUS                : 45
MOD                  : 48
MOVE                 : 
NAMESPACE            : 11 12
NEQ                  : 38
NEW                  : 79
NUMBER               : 29 60
OPERATOR             : 
OR                   : 36
OVERRIDE             : 
PLUS                 : 44
POINTER              : 33 63
PRIV                 : 
PUB                  : 
RANGE                : 43
RANGE_INCLUSIVE      : 
RANGLE               : 14
RBRACE               : 11 12 43 56 57 57 58 71 72 78 80 83 84
RBRACKET             : 
REF                  : 34 62
REFERENCE            : 
RETURN               : 13
RPAREN               : 49 50 56 57 58 71 75 77 79
RTHEN                : 40
SEMI                 : 8 10 20 24 75 76 77 78 79
STATIC               : 
STRING               : 
STRUCT               : 
TIMES                : 46
TRUE                 : 
TRY                  : 
UNSAFE               : 
USE                  : 
VAR                  : 
WHILE                : 58
error                : 74

Nonterminals, with rules where they appear

arg_list             : 51 53
arg_list_opt         : 50 75 77 78 79
class_body           : 18 72
class_definition     : 4
class_member         : 18
empty                : 15 19 23 31 52 55 65 70 82
enum_body            : 26 84
enum_definition      : 6
enum_member          : 26 27
expression           : 13 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 53 54 56 57 58 63
extends_opt          : 72 83
function_definition  : 3 21 25 81
generics_list        : 14 16
generics_opt         : 30 71 72 80 83 84
interface_body       : 80 81
interface_definition : 9
namespace_definition : 7
parameter            : 66 67
parameters_list      : 64 66
parameters_opt       : 71
program              : 1 11 43 56 57 57 58 71 0
return_statement     : 10
return_type_opt      : 71
statement            : 1 2
struct_body          : 22 83
struct_definition    : 5
struct_member        : 22
type_specifier       : 33 34 68 69 75 76 77 77 78 79 79
variable_declaration : 8 20 24 73

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (43) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (56) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (57) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (58) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (73) statement -> . variable_declaration
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (72) class_definition -> . CLASS ID generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> . CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE
    (84) enum_definition -> . ENUM ID generics_opt LBRACE enum_body RBRACE
    (11) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (12) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (80) interface_definition -> . INTERFACE ID generics_opt LBRACE interface_body RBRACE
    (13) return_statement -> . RETURN expression
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    FOR             shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FN              shift and go to state 15
    CLASS           shift and go to state 16
    ENUM            shift and go to state 17
    NAMESPACE       shift and go to state 18
    INTERFACE       shift and go to state 20
    RETURN          shift and go to state 21
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    program                        shift and go to state 1
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_specifier                 shift and go to state 19

state 1

    (0) S' -> program .
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (43) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (56) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (57) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (58) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (73) statement -> . variable_declaration
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (72) class_definition -> . CLASS ID generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> . CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE
    (84) enum_definition -> . ENUM ID generics_opt LBRACE enum_body RBRACE
    (11) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (12) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (80) interface_definition -> . INTERFACE ID generics_opt LBRACE interface_body RBRACE
    (13) return_statement -> . RETURN expression
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    FOR             shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FN              shift and go to state 15
    CLASS           shift and go to state 16
    ENUM            shift and go to state 17
    NAMESPACE       shift and go to state 18
    INTERFACE       shift and go to state 20
    RETURN          shift and go to state 21
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    statement                      shift and go to state 24
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_specifier                 shift and go to state 19

state 2

    (2) program -> statement .

    FOR             reduce using rule 2 (program -> statement .)
    IF              reduce using rule 2 (program -> statement .)
    WHILE           reduce using rule 2 (program -> statement .)
    FN              reduce using rule 2 (program -> statement .)
    CLASS           reduce using rule 2 (program -> statement .)
    ENUM            reduce using rule 2 (program -> statement .)
    NAMESPACE       reduce using rule 2 (program -> statement .)
    INTERFACE       reduce using rule 2 (program -> statement .)
    RETURN          reduce using rule 2 (program -> statement .)
    ID              reduce using rule 2 (program -> statement .)
    POINTER         reduce using rule 2 (program -> statement .)
    REF             reduce using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)
    RBRACE          reduce using rule 2 (program -> statement .)


state 3

    (3) statement -> function_definition .

    FOR             reduce using rule 3 (statement -> function_definition .)
    IF              reduce using rule 3 (statement -> function_definition .)
    WHILE           reduce using rule 3 (statement -> function_definition .)
    FN              reduce using rule 3 (statement -> function_definition .)
    CLASS           reduce using rule 3 (statement -> function_definition .)
    ENUM            reduce using rule 3 (statement -> function_definition .)
    NAMESPACE       reduce using rule 3 (statement -> function_definition .)
    INTERFACE       reduce using rule 3 (statement -> function_definition .)
    RETURN          reduce using rule 3 (statement -> function_definition .)
    ID              reduce using rule 3 (statement -> function_definition .)
    POINTER         reduce using rule 3 (statement -> function_definition .)
    REF             reduce using rule 3 (statement -> function_definition .)
    $end            reduce using rule 3 (statement -> function_definition .)
    RBRACE          reduce using rule 3 (statement -> function_definition .)


state 4

    (4) statement -> class_definition .

    FOR             reduce using rule 4 (statement -> class_definition .)
    IF              reduce using rule 4 (statement -> class_definition .)
    WHILE           reduce using rule 4 (statement -> class_definition .)
    FN              reduce using rule 4 (statement -> class_definition .)
    CLASS           reduce using rule 4 (statement -> class_definition .)
    ENUM            reduce using rule 4 (statement -> class_definition .)
    NAMESPACE       reduce using rule 4 (statement -> class_definition .)
    INTERFACE       reduce using rule 4 (statement -> class_definition .)
    RETURN          reduce using rule 4 (statement -> class_definition .)
    ID              reduce using rule 4 (statement -> class_definition .)
    POINTER         reduce using rule 4 (statement -> class_definition .)
    REF             reduce using rule 4 (statement -> class_definition .)
    $end            reduce using rule 4 (statement -> class_definition .)
    RBRACE          reduce using rule 4 (statement -> class_definition .)


state 5

    (5) statement -> struct_definition .

    FOR             reduce using rule 5 (statement -> struct_definition .)
    IF              reduce using rule 5 (statement -> struct_definition .)
    WHILE           reduce using rule 5 (statement -> struct_definition .)
    FN              reduce using rule 5 (statement -> struct_definition .)
    CLASS           reduce using rule 5 (statement -> struct_definition .)
    ENUM            reduce using rule 5 (statement -> struct_definition .)
    NAMESPACE       reduce using rule 5 (statement -> struct_definition .)
    INTERFACE       reduce using rule 5 (statement -> struct_definition .)
    RETURN          reduce using rule 5 (statement -> struct_definition .)
    ID              reduce using rule 5 (statement -> struct_definition .)
    POINTER         reduce using rule 5 (statement -> struct_definition .)
    REF             reduce using rule 5 (statement -> struct_definition .)
    $end            reduce using rule 5 (statement -> struct_definition .)
    RBRACE          reduce using rule 5 (statement -> struct_definition .)


state 6

    (6) statement -> enum_definition .

    FOR             reduce using rule 6 (statement -> enum_definition .)
    IF              reduce using rule 6 (statement -> enum_definition .)
    WHILE           reduce using rule 6 (statement -> enum_definition .)
    FN              reduce using rule 6 (statement -> enum_definition .)
    CLASS           reduce using rule 6 (statement -> enum_definition .)
    ENUM            reduce using rule 6 (statement -> enum_definition .)
    NAMESPACE       reduce using rule 6 (statement -> enum_definition .)
    INTERFACE       reduce using rule 6 (statement -> enum_definition .)
    RETURN          reduce using rule 6 (statement -> enum_definition .)
    ID              reduce using rule 6 (statement -> enum_definition .)
    POINTER         reduce using rule 6 (statement -> enum_definition .)
    REF             reduce using rule 6 (statement -> enum_definition .)
    $end            reduce using rule 6 (statement -> enum_definition .)
    RBRACE          reduce using rule 6 (statement -> enum_definition .)


state 7

    (7) statement -> namespace_definition .

    FOR             reduce using rule 7 (statement -> namespace_definition .)
    IF              reduce using rule 7 (statement -> namespace_definition .)
    WHILE           reduce using rule 7 (statement -> namespace_definition .)
    FN              reduce using rule 7 (statement -> namespace_definition .)
    CLASS           reduce using rule 7 (statement -> namespace_definition .)
    ENUM            reduce using rule 7 (statement -> namespace_definition .)
    NAMESPACE       reduce using rule 7 (statement -> namespace_definition .)
    INTERFACE       reduce using rule 7 (statement -> namespace_definition .)
    RETURN          reduce using rule 7 (statement -> namespace_definition .)
    ID              reduce using rule 7 (statement -> namespace_definition .)
    POINTER         reduce using rule 7 (statement -> namespace_definition .)
    REF             reduce using rule 7 (statement -> namespace_definition .)
    $end            reduce using rule 7 (statement -> namespace_definition .)
    RBRACE          reduce using rule 7 (statement -> namespace_definition .)


state 8

    (8) statement -> variable_declaration . SEMI
    (73) statement -> variable_declaration .

    SEMI            shift and go to state 25
    FOR             reduce using rule 73 (statement -> variable_declaration .)
    IF              reduce using rule 73 (statement -> variable_declaration .)
    WHILE           reduce using rule 73 (statement -> variable_declaration .)
    FN              reduce using rule 73 (statement -> variable_declaration .)
    CLASS           reduce using rule 73 (statement -> variable_declaration .)
    ENUM            reduce using rule 73 (statement -> variable_declaration .)
    NAMESPACE       reduce using rule 73 (statement -> variable_declaration .)
    INTERFACE       reduce using rule 73 (statement -> variable_declaration .)
    RETURN          reduce using rule 73 (statement -> variable_declaration .)
    ID              reduce using rule 73 (statement -> variable_declaration .)
    POINTER         reduce using rule 73 (statement -> variable_declaration .)
    REF             reduce using rule 73 (statement -> variable_declaration .)
    $end            reduce using rule 73 (statement -> variable_declaration .)
    RBRACE          reduce using rule 73 (statement -> variable_declaration .)


state 9

    (9) statement -> interface_definition .

    FOR             reduce using rule 9 (statement -> interface_definition .)
    IF              reduce using rule 9 (statement -> interface_definition .)
    WHILE           reduce using rule 9 (statement -> interface_definition .)
    FN              reduce using rule 9 (statement -> interface_definition .)
    CLASS           reduce using rule 9 (statement -> interface_definition .)
    ENUM            reduce using rule 9 (statement -> interface_definition .)
    NAMESPACE       reduce using rule 9 (statement -> interface_definition .)
    INTERFACE       reduce using rule 9 (statement -> interface_definition .)
    RETURN          reduce using rule 9 (statement -> interface_definition .)
    ID              reduce using rule 9 (statement -> interface_definition .)
    POINTER         reduce using rule 9 (statement -> interface_definition .)
    REF             reduce using rule 9 (statement -> interface_definition .)
    $end            reduce using rule 9 (statement -> interface_definition .)
    RBRACE          reduce using rule 9 (statement -> interface_definition .)


state 10

    (10) statement -> return_statement . SEMI

    SEMI            shift and go to state 26


state 11

    (43) statement -> FOR . ID IN expression RANGE expression LBRACE program RBRACE

    ID              shift and go to state 27


state 12

    (32) type_specifier -> ID .

    ID              reduce using rule 32 (type_specifier -> ID .)
    LPAREN          reduce using rule 32 (type_specifier -> ID .)
    LBRACE          reduce using rule 32 (type_specifier -> ID .)


state 13

    (56) statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE
    (57) statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE

    LPAREN          shift and go to state 28


state 14

    (58) statement -> WHILE . LPAREN expression RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 29


state 15

    (71) function_definition -> FN . generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (14) generics_opt -> . LANGLE generics_list RANGLE
    (15) generics_opt -> . empty
    (59) empty -> .

    LANGLE          shift and go to state 31
    ID              reduce using rule 59 (empty -> .)

    generics_opt                   shift and go to state 30
    empty                          shift and go to state 32

state 16

    (72) class_definition -> CLASS . ID generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> CLASS . ID generics_opt extends_opt LBRACE struct_body RBRACE

    ID              shift and go to state 33


state 17

    (84) enum_definition -> ENUM . ID generics_opt LBRACE enum_body RBRACE

    ID              shift and go to state 34


state 18

    (11) namespace_definition -> NAMESPACE . ID LBRACE program RBRACE
    (12) namespace_definition -> NAMESPACE . ID LBRACE RBRACE

    ID              shift and go to state 35


state 19

    (75) variable_declaration -> type_specifier . ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> type_specifier . ID SEMI
    (77) variable_declaration -> type_specifier . ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> type_specifier . ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> type_specifier . ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI

    ID              shift and go to state 36


state 20

    (80) interface_definition -> INTERFACE . ID generics_opt LBRACE interface_body RBRACE

    ID              shift and go to state 37


state 21

    (13) return_statement -> RETURN . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 38

state 22

    (33) type_specifier -> POINTER . type_specifier
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    type_specifier                 shift and go to state 45

state 23

    (34) type_specifier -> REF . type_specifier
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    type_specifier                 shift and go to state 46

state 24

    (1) program -> program statement .

    FOR             reduce using rule 1 (program -> program statement .)
    IF              reduce using rule 1 (program -> program statement .)
    WHILE           reduce using rule 1 (program -> program statement .)
    FN              reduce using rule 1 (program -> program statement .)
    CLASS           reduce using rule 1 (program -> program statement .)
    ENUM            reduce using rule 1 (program -> program statement .)
    NAMESPACE       reduce using rule 1 (program -> program statement .)
    INTERFACE       reduce using rule 1 (program -> program statement .)
    RETURN          reduce using rule 1 (program -> program statement .)
    ID              reduce using rule 1 (program -> program statement .)
    POINTER         reduce using rule 1 (program -> program statement .)
    REF             reduce using rule 1 (program -> program statement .)
    $end            reduce using rule 1 (program -> program statement .)
    RBRACE          reduce using rule 1 (program -> program statement .)


state 25

    (8) statement -> variable_declaration SEMI .

    FOR             reduce using rule 8 (statement -> variable_declaration SEMI .)
    IF              reduce using rule 8 (statement -> variable_declaration SEMI .)
    WHILE           reduce using rule 8 (statement -> variable_declaration SEMI .)
    FN              reduce using rule 8 (statement -> variable_declaration SEMI .)
    CLASS           reduce using rule 8 (statement -> variable_declaration SEMI .)
    ENUM            reduce using rule 8 (statement -> variable_declaration SEMI .)
    NAMESPACE       reduce using rule 8 (statement -> variable_declaration SEMI .)
    INTERFACE       reduce using rule 8 (statement -> variable_declaration SEMI .)
    RETURN          reduce using rule 8 (statement -> variable_declaration SEMI .)
    ID              reduce using rule 8 (statement -> variable_declaration SEMI .)
    POINTER         reduce using rule 8 (statement -> variable_declaration SEMI .)
    REF             reduce using rule 8 (statement -> variable_declaration SEMI .)
    $end            reduce using rule 8 (statement -> variable_declaration SEMI .)
    RBRACE          reduce using rule 8 (statement -> variable_declaration SEMI .)


state 26

    (10) statement -> return_statement SEMI .

    FOR             reduce using rule 10 (statement -> return_statement SEMI .)
    IF              reduce using rule 10 (statement -> return_statement SEMI .)
    WHILE           reduce using rule 10 (statement -> return_statement SEMI .)
    FN              reduce using rule 10 (statement -> return_statement SEMI .)
    CLASS           reduce using rule 10 (statement -> return_statement SEMI .)
    ENUM            reduce using rule 10 (statement -> return_statement SEMI .)
    NAMESPACE       reduce using rule 10 (statement -> return_statement SEMI .)
    INTERFACE       reduce using rule 10 (statement -> return_statement SEMI .)
    RETURN          reduce using rule 10 (statement -> return_statement SEMI .)
    ID              reduce using rule 10 (statement -> return_statement SEMI .)
    POINTER         reduce using rule 10 (statement -> return_statement SEMI .)
    REF             reduce using rule 10 (statement -> return_statement SEMI .)
    $end            reduce using rule 10 (statement -> return_statement SEMI .)
    RBRACE          reduce using rule 10 (statement -> return_statement SEMI .)


state 27

    (43) statement -> FOR ID . IN expression RANGE expression LBRACE program RBRACE

    IN              shift and go to state 47


state 28

    (56) statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE
    (57) statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 48

state 29

    (58) statement -> WHILE LPAREN . expression RPAREN LBRACE program RBRACE
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 49

state 30

    (71) function_definition -> FN generics_opt . ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE

    ID              shift and go to state 50


state 31

    (14) generics_opt -> LANGLE . generics_list RANGLE
    (16) generics_list -> . generics_list COMMA ID
    (17) generics_list -> . ID

    ID              shift and go to state 52

    generics_list                  shift and go to state 51

state 32

    (15) generics_opt -> empty .

    ID              reduce using rule 15 (generics_opt -> empty .)
    EXTENDS         reduce using rule 15 (generics_opt -> empty .)
    LBRACE          reduce using rule 15 (generics_opt -> empty .)


state 33

    (72) class_definition -> CLASS ID . generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> CLASS ID . generics_opt extends_opt LBRACE struct_body RBRACE
    (14) generics_opt -> . LANGLE generics_list RANGLE
    (15) generics_opt -> . empty
    (59) empty -> .

    LANGLE          shift and go to state 31
    EXTENDS         reduce using rule 59 (empty -> .)
    LBRACE          reduce using rule 59 (empty -> .)

    generics_opt                   shift and go to state 53
    empty                          shift and go to state 32

state 34

    (84) enum_definition -> ENUM ID . generics_opt LBRACE enum_body RBRACE
    (14) generics_opt -> . LANGLE generics_list RANGLE
    (15) generics_opt -> . empty
    (59) empty -> .

    LANGLE          shift and go to state 31
    LBRACE          reduce using rule 59 (empty -> .)

    generics_opt                   shift and go to state 54
    empty                          shift and go to state 32

state 35

    (11) namespace_definition -> NAMESPACE ID . LBRACE program RBRACE
    (12) namespace_definition -> NAMESPACE ID . LBRACE RBRACE

    LBRACE          shift and go to state 55


state 36

    (75) variable_declaration -> type_specifier ID . LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> type_specifier ID . SEMI
    (77) variable_declaration -> type_specifier ID . ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> type_specifier ID . LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> type_specifier ID . ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI

    LPAREN          shift and go to state 56
    SEMI            shift and go to state 57
    ASSIGN          shift and go to state 58
    LBRACE          shift and go to state 59


state 37

    (80) interface_definition -> INTERFACE ID . generics_opt LBRACE interface_body RBRACE
    (14) generics_opt -> . LANGLE generics_list RANGLE
    (15) generics_opt -> . empty
    (59) empty -> .

    LANGLE          shift and go to state 31
    LBRACE          reduce using rule 59 (empty -> .)

    generics_opt                   shift and go to state 60
    empty                          shift and go to state 32

state 38

    (13) return_statement -> RETURN expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

    SEMI            reduce using rule 13 (return_statement -> RETURN expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73


state 39

    (49) expression -> LPAREN . expression RPAREN
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 74

state 40

    (50) expression -> ID . LPAREN arg_list_opt RPAREN
    (61) expression -> ID .

    LPAREN          shift and go to state 75
    AND             reduce using rule 61 (expression -> ID .)
    OR              reduce using rule 61 (expression -> ID .)
    EQ              reduce using rule 61 (expression -> ID .)
    NEQ             reduce using rule 61 (expression -> ID .)
    LTHEN           reduce using rule 61 (expression -> ID .)
    RTHEN           reduce using rule 61 (expression -> ID .)
    LEQ             reduce using rule 61 (expression -> ID .)
    GEQ             reduce using rule 61 (expression -> ID .)
    PLUS            reduce using rule 61 (expression -> ID .)
    MINUS           reduce using rule 61 (expression -> ID .)
    TIMES           reduce using rule 61 (expression -> ID .)
    DIVIDE          reduce using rule 61 (expression -> ID .)
    MOD             reduce using rule 61 (expression -> ID .)
    SEMI            reduce using rule 61 (expression -> ID .)
    RPAREN          reduce using rule 61 (expression -> ID .)
    RANGE           reduce using rule 61 (expression -> ID .)
    COMMA           reduce using rule 61 (expression -> ID .)
    RBRACE          reduce using rule 61 (expression -> ID .)
    LBRACE          reduce using rule 61 (expression -> ID .)


state 41

    (60) expression -> NUMBER .

    AND             reduce using rule 60 (expression -> NUMBER .)
    OR              reduce using rule 60 (expression -> NUMBER .)
    EQ              reduce using rule 60 (expression -> NUMBER .)
    NEQ             reduce using rule 60 (expression -> NUMBER .)
    LTHEN           reduce using rule 60 (expression -> NUMBER .)
    RTHEN           reduce using rule 60 (expression -> NUMBER .)
    LEQ             reduce using rule 60 (expression -> NUMBER .)
    GEQ             reduce using rule 60 (expression -> NUMBER .)
    PLUS            reduce using rule 60 (expression -> NUMBER .)
    MINUS           reduce using rule 60 (expression -> NUMBER .)
    TIMES           reduce using rule 60 (expression -> NUMBER .)
    DIVIDE          reduce using rule 60 (expression -> NUMBER .)
    MOD             reduce using rule 60 (expression -> NUMBER .)
    SEMI            reduce using rule 60 (expression -> NUMBER .)
    RPAREN          reduce using rule 60 (expression -> NUMBER .)
    RANGE           reduce using rule 60 (expression -> NUMBER .)
    COMMA           reduce using rule 60 (expression -> NUMBER .)
    RBRACE          reduce using rule 60 (expression -> NUMBER .)
    LBRACE          reduce using rule 60 (expression -> NUMBER .)


state 42

    (62) expression -> REF . ID

    ID              shift and go to state 76


state 43

    (63) expression -> POINTER . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 77

state 44

    (74) expression -> error .

    AND             reduce using rule 74 (expression -> error .)
    OR              reduce using rule 74 (expression -> error .)
    EQ              reduce using rule 74 (expression -> error .)
    NEQ             reduce using rule 74 (expression -> error .)
    LTHEN           reduce using rule 74 (expression -> error .)
    RTHEN           reduce using rule 74 (expression -> error .)
    LEQ             reduce using rule 74 (expression -> error .)
    GEQ             reduce using rule 74 (expression -> error .)
    PLUS            reduce using rule 74 (expression -> error .)
    MINUS           reduce using rule 74 (expression -> error .)
    TIMES           reduce using rule 74 (expression -> error .)
    DIVIDE          reduce using rule 74 (expression -> error .)
    MOD             reduce using rule 74 (expression -> error .)
    SEMI            reduce using rule 74 (expression -> error .)
    RPAREN          reduce using rule 74 (expression -> error .)
    RANGE           reduce using rule 74 (expression -> error .)
    COMMA           reduce using rule 74 (expression -> error .)
    RBRACE          reduce using rule 74 (expression -> error .)
    LBRACE          reduce using rule 74 (expression -> error .)


state 45

    (33) type_specifier -> POINTER type_specifier .

    ID              reduce using rule 33 (type_specifier -> POINTER type_specifier .)
    LPAREN          reduce using rule 33 (type_specifier -> POINTER type_specifier .)
    LBRACE          reduce using rule 33 (type_specifier -> POINTER type_specifier .)


state 46

    (34) type_specifier -> REF type_specifier .

    ID              reduce using rule 34 (type_specifier -> REF type_specifier .)
    LPAREN          reduce using rule 34 (type_specifier -> REF type_specifier .)
    LBRACE          reduce using rule 34 (type_specifier -> REF type_specifier .)


state 47

    (43) statement -> FOR ID IN . expression RANGE expression LBRACE program RBRACE
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 78

state 48

    (56) statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE
    (57) statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

    RPAREN          shift and go to state 79
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73


state 49

    (58) statement -> WHILE LPAREN expression . RPAREN LBRACE program RBRACE
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

    RPAREN          shift and go to state 80
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73


state 50

    (71) function_definition -> FN generics_opt ID . LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE

    LPAREN          shift and go to state 81


state 51

    (14) generics_opt -> LANGLE generics_list . RANGLE
    (16) generics_list -> generics_list . COMMA ID

    RANGLE          shift and go to state 82
    COMMA           shift and go to state 83


state 52

    (17) generics_list -> ID .

    RANGLE          reduce using rule 17 (generics_list -> ID .)
    COMMA           reduce using rule 17 (generics_list -> ID .)


state 53

    (72) class_definition -> CLASS ID generics_opt . extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> CLASS ID generics_opt . extends_opt LBRACE struct_body RBRACE
    (30) extends_opt -> . EXTENDS ID generics_opt
    (31) extends_opt -> . empty
    (59) empty -> .

    EXTENDS         shift and go to state 85
    LBRACE          reduce using rule 59 (empty -> .)

    extends_opt                    shift and go to state 84
    empty                          shift and go to state 86

state 54

    (84) enum_definition -> ENUM ID generics_opt . LBRACE enum_body RBRACE

    LBRACE          shift and go to state 87


state 55

    (11) namespace_definition -> NAMESPACE ID LBRACE . program RBRACE
    (12) namespace_definition -> NAMESPACE ID LBRACE . RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (43) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (56) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (57) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (58) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (73) statement -> . variable_declaration
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (72) class_definition -> . CLASS ID generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> . CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE
    (84) enum_definition -> . ENUM ID generics_opt LBRACE enum_body RBRACE
    (11) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (12) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (80) interface_definition -> . INTERFACE ID generics_opt LBRACE interface_body RBRACE
    (13) return_statement -> . RETURN expression
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    RBRACE          shift and go to state 89
    FOR             shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FN              shift and go to state 15
    CLASS           shift and go to state 16
    ENUM            shift and go to state 17
    NAMESPACE       shift and go to state 18
    INTERFACE       shift and go to state 20
    RETURN          shift and go to state 21
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    program                        shift and go to state 88
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_specifier                 shift and go to state 19

state 56

    (75) variable_declaration -> type_specifier ID LPAREN . arg_list_opt RPAREN SEMI
    (51) arg_list_opt -> . arg_list
    (52) arg_list_opt -> . empty
    (53) arg_list -> . arg_list COMMA expression
    (54) arg_list -> . expression
    (55) arg_list -> . empty
    (59) empty -> .
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    RPAREN          reduce using rule 59 (empty -> .)
    COMMA           reduce using rule 59 (empty -> .)
    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    arg_list_opt                   shift and go to state 90
    arg_list                       shift and go to state 91
    empty                          shift and go to state 92
    expression                     shift and go to state 93

state 57

    (76) variable_declaration -> type_specifier ID SEMI .

    SEMI            reduce using rule 76 (variable_declaration -> type_specifier ID SEMI .)
    FOR             reduce using rule 76 (variable_declaration -> type_specifier ID SEMI .)
    IF              reduce using rule 76 (variable_declaration -> type_specifier ID SEMI .)
    WHILE           reduce using rule 76 (variable_declaration -> type_specifier ID SEMI .)
    FN              reduce using rule 76 (variable_declaration -> type_specifier ID SEMI .)
    CLASS           reduce using rule 76 (variable_declaration -> type_specifier ID SEMI .)
    ENUM            reduce using rule 76 (variable_declaration -> type_specifier ID SEMI .)
    NAMESPACE       reduce using rule 76 (variable_declaration -> type_specifier ID SEMI .)
    INTERFACE       reduce using rule 76 (variable_declaration -> type_specifier ID SEMI .)
    RETURN          reduce using rule 76 (variable_declaration -> type_specifier ID SEMI .)
    ID              reduce using rule 76 (variable_declaration -> type_specifier ID SEMI .)
    POINTER         reduce using rule 76 (variable_declaration -> type_specifier ID SEMI .)
    REF             reduce using rule 76 (variable_declaration -> type_specifier ID SEMI .)
    $end            reduce using rule 76 (variable_declaration -> type_specifier ID SEMI .)
    RBRACE          reduce using rule 76 (variable_declaration -> type_specifier ID SEMI .)


state 58

    (77) variable_declaration -> type_specifier ID ASSIGN . type_specifier LPAREN arg_list_opt RPAREN SEMI
    (79) variable_declaration -> type_specifier ID ASSIGN . NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    NEW             shift and go to state 95
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    type_specifier                 shift and go to state 94

state 59

    (78) variable_declaration -> type_specifier ID LBRACE . arg_list_opt RBRACE SEMI
    (51) arg_list_opt -> . arg_list
    (52) arg_list_opt -> . empty
    (53) arg_list -> . arg_list COMMA expression
    (54) arg_list -> . expression
    (55) arg_list -> . empty
    (59) empty -> .
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    RBRACE          reduce using rule 59 (empty -> .)
    COMMA           reduce using rule 59 (empty -> .)
    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    arg_list_opt                   shift and go to state 96
    arg_list                       shift and go to state 91
    empty                          shift and go to state 92
    expression                     shift and go to state 93

state 60

    (80) interface_definition -> INTERFACE ID generics_opt . LBRACE interface_body RBRACE

    LBRACE          shift and go to state 97


state 61

    (35) expression -> expression AND . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 98

state 62

    (36) expression -> expression OR . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 99

state 63

    (37) expression -> expression EQ . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 100

state 64

    (38) expression -> expression NEQ . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 101

state 65

    (39) expression -> expression LTHEN . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 102

state 66

    (40) expression -> expression RTHEN . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 103

state 67

    (41) expression -> expression LEQ . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 104

state 68

    (42) expression -> expression GEQ . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 105

state 69

    (44) expression -> expression PLUS . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 106

state 70

    (45) expression -> expression MINUS . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 107

state 71

    (46) expression -> expression TIMES . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 108

state 72

    (47) expression -> expression DIVIDE . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 109

state 73

    (48) expression -> expression MOD . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 110

state 74

    (49) expression -> LPAREN expression . RPAREN
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

    RPAREN          shift and go to state 111
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73


state 75

    (50) expression -> ID LPAREN . arg_list_opt RPAREN
    (51) arg_list_opt -> . arg_list
    (52) arg_list_opt -> . empty
    (53) arg_list -> . arg_list COMMA expression
    (54) arg_list -> . expression
    (55) arg_list -> . empty
    (59) empty -> .
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    RPAREN          reduce using rule 59 (empty -> .)
    COMMA           reduce using rule 59 (empty -> .)
    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    arg_list_opt                   shift and go to state 112
    arg_list                       shift and go to state 91
    empty                          shift and go to state 92
    expression                     shift and go to state 93

state 76

    (62) expression -> REF ID .

    AND             reduce using rule 62 (expression -> REF ID .)
    OR              reduce using rule 62 (expression -> REF ID .)
    EQ              reduce using rule 62 (expression -> REF ID .)
    NEQ             reduce using rule 62 (expression -> REF ID .)
    LTHEN           reduce using rule 62 (expression -> REF ID .)
    RTHEN           reduce using rule 62 (expression -> REF ID .)
    LEQ             reduce using rule 62 (expression -> REF ID .)
    GEQ             reduce using rule 62 (expression -> REF ID .)
    PLUS            reduce using rule 62 (expression -> REF ID .)
    MINUS           reduce using rule 62 (expression -> REF ID .)
    TIMES           reduce using rule 62 (expression -> REF ID .)
    DIVIDE          reduce using rule 62 (expression -> REF ID .)
    MOD             reduce using rule 62 (expression -> REF ID .)
    SEMI            reduce using rule 62 (expression -> REF ID .)
    RPAREN          reduce using rule 62 (expression -> REF ID .)
    RANGE           reduce using rule 62 (expression -> REF ID .)
    COMMA           reduce using rule 62 (expression -> REF ID .)
    RBRACE          reduce using rule 62 (expression -> REF ID .)
    LBRACE          reduce using rule 62 (expression -> REF ID .)


state 77

    (63) expression -> POINTER expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 63 (expression -> POINTER expression .)
    RPAREN          reduce using rule 63 (expression -> POINTER expression .)
    RANGE           reduce using rule 63 (expression -> POINTER expression .)
    COMMA           reduce using rule 63 (expression -> POINTER expression .)
    RBRACE          reduce using rule 63 (expression -> POINTER expression .)
    LBRACE          reduce using rule 63 (expression -> POINTER expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! AND             [ reduce using rule 63 (expression -> POINTER expression .) ]
  ! OR              [ reduce using rule 63 (expression -> POINTER expression .) ]
  ! EQ              [ reduce using rule 63 (expression -> POINTER expression .) ]
  ! NEQ             [ reduce using rule 63 (expression -> POINTER expression .) ]
  ! LTHEN           [ reduce using rule 63 (expression -> POINTER expression .) ]
  ! RTHEN           [ reduce using rule 63 (expression -> POINTER expression .) ]
  ! LEQ             [ reduce using rule 63 (expression -> POINTER expression .) ]
  ! GEQ             [ reduce using rule 63 (expression -> POINTER expression .) ]
  ! PLUS            [ reduce using rule 63 (expression -> POINTER expression .) ]
  ! MINUS           [ reduce using rule 63 (expression -> POINTER expression .) ]
  ! TIMES           [ reduce using rule 63 (expression -> POINTER expression .) ]
  ! DIVIDE          [ reduce using rule 63 (expression -> POINTER expression .) ]
  ! MOD             [ reduce using rule 63 (expression -> POINTER expression .) ]


state 78

    (43) statement -> FOR ID IN expression . RANGE expression LBRACE program RBRACE
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

    RANGE           shift and go to state 113
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73


state 79

    (56) statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE
    (57) statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE ELSE LBRACE program RBRACE

    LBRACE          shift and go to state 114


state 80

    (58) statement -> WHILE LPAREN expression RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 115


state 81

    (71) function_definition -> FN generics_opt ID LPAREN . parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (64) parameters_opt -> . parameters_list
    (65) parameters_opt -> . empty
    (66) parameters_list -> . parameters_list COMMA parameter
    (67) parameters_list -> . parameter
    (59) empty -> .
    (68) parameter -> . type_specifier ID
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    RPAREN          reduce using rule 59 (empty -> .)
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    parameters_opt                 shift and go to state 116
    parameters_list                shift and go to state 117
    empty                          shift and go to state 118
    parameter                      shift and go to state 119
    type_specifier                 shift and go to state 120

state 82

    (14) generics_opt -> LANGLE generics_list RANGLE .

    ID              reduce using rule 14 (generics_opt -> LANGLE generics_list RANGLE .)
    EXTENDS         reduce using rule 14 (generics_opt -> LANGLE generics_list RANGLE .)
    LBRACE          reduce using rule 14 (generics_opt -> LANGLE generics_list RANGLE .)


state 83

    (16) generics_list -> generics_list COMMA . ID

    ID              shift and go to state 121


state 84

    (72) class_definition -> CLASS ID generics_opt extends_opt . LBRACE class_body RBRACE
    (83) struct_definition -> CLASS ID generics_opt extends_opt . LBRACE struct_body RBRACE

    LBRACE          shift and go to state 122


state 85

    (30) extends_opt -> EXTENDS . ID generics_opt

    ID              shift and go to state 123


state 86

    (31) extends_opt -> empty .

    LBRACE          reduce using rule 31 (extends_opt -> empty .)


state 87

    (84) enum_definition -> ENUM ID generics_opt LBRACE . enum_body RBRACE
    (26) enum_body -> . enum_body enum_member
    (27) enum_body -> . enum_member
    (28) enum_member -> . ID
    (29) enum_member -> . ID ASSIGN NUMBER

    ID              shift and go to state 124

    enum_body                      shift and go to state 125
    enum_member                    shift and go to state 126

state 88

    (11) namespace_definition -> NAMESPACE ID LBRACE program . RBRACE
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (43) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (56) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (57) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (58) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (73) statement -> . variable_declaration
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (72) class_definition -> . CLASS ID generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> . CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE
    (84) enum_definition -> . ENUM ID generics_opt LBRACE enum_body RBRACE
    (11) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (12) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (80) interface_definition -> . INTERFACE ID generics_opt LBRACE interface_body RBRACE
    (13) return_statement -> . RETURN expression
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    RBRACE          shift and go to state 127
    FOR             shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FN              shift and go to state 15
    CLASS           shift and go to state 16
    ENUM            shift and go to state 17
    NAMESPACE       shift and go to state 18
    INTERFACE       shift and go to state 20
    RETURN          shift and go to state 21
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    statement                      shift and go to state 24
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_specifier                 shift and go to state 19

state 89

    (12) namespace_definition -> NAMESPACE ID LBRACE RBRACE .

    FOR             reduce using rule 12 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    IF              reduce using rule 12 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    WHILE           reduce using rule 12 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    FN              reduce using rule 12 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    CLASS           reduce using rule 12 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    ENUM            reduce using rule 12 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    NAMESPACE       reduce using rule 12 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    INTERFACE       reduce using rule 12 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    RETURN          reduce using rule 12 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    ID              reduce using rule 12 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    POINTER         reduce using rule 12 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    REF             reduce using rule 12 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    $end            reduce using rule 12 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    RBRACE          reduce using rule 12 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)


state 90

    (75) variable_declaration -> type_specifier ID LPAREN arg_list_opt . RPAREN SEMI

    RPAREN          shift and go to state 128


state 91

    (51) arg_list_opt -> arg_list .
    (53) arg_list -> arg_list . COMMA expression

    RPAREN          reduce using rule 51 (arg_list_opt -> arg_list .)
    RBRACE          reduce using rule 51 (arg_list_opt -> arg_list .)
    COMMA           shift and go to state 129


state 92

    (52) arg_list_opt -> empty .
    (55) arg_list -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 52 (arg_list_opt -> empty .)
  ! reduce/reduce conflict for RBRACE resolved using rule 52 (arg_list_opt -> empty .)
    RPAREN          reduce using rule 52 (arg_list_opt -> empty .)
    RBRACE          reduce using rule 52 (arg_list_opt -> empty .)
    COMMA           reduce using rule 55 (arg_list -> empty .)

  ! RPAREN          [ reduce using rule 55 (arg_list -> empty .) ]
  ! RBRACE          [ reduce using rule 55 (arg_list -> empty .) ]


state 93

    (54) arg_list -> expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

    COMMA           reduce using rule 54 (arg_list -> expression .)
    RPAREN          reduce using rule 54 (arg_list -> expression .)
    RBRACE          reduce using rule 54 (arg_list -> expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73


state 94

    (77) variable_declaration -> type_specifier ID ASSIGN type_specifier . LPAREN arg_list_opt RPAREN SEMI

    LPAREN          shift and go to state 130


state 95

    (79) variable_declaration -> type_specifier ID ASSIGN NEW . type_specifier LPAREN arg_list_opt RPAREN SEMI
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    type_specifier                 shift and go to state 131

state 96

    (78) variable_declaration -> type_specifier ID LBRACE arg_list_opt . RBRACE SEMI

    RBRACE          shift and go to state 132


state 97

    (80) interface_definition -> INTERFACE ID generics_opt LBRACE . interface_body RBRACE
    (81) interface_body -> . interface_body function_definition
    (82) interface_body -> . empty
    (59) empty -> .

    RBRACE          reduce using rule 59 (empty -> .)
    FN              reduce using rule 59 (empty -> .)

    interface_body                 shift and go to state 133
    empty                          shift and go to state 134

state 98

    (35) expression -> expression AND expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 35 (expression -> expression AND expression .)
    RPAREN          reduce using rule 35 (expression -> expression AND expression .)
    RANGE           reduce using rule 35 (expression -> expression AND expression .)
    COMMA           reduce using rule 35 (expression -> expression AND expression .)
    RBRACE          reduce using rule 35 (expression -> expression AND expression .)
    LBRACE          reduce using rule 35 (expression -> expression AND expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! AND             [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! LTHEN           [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! RTHEN           [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! LEQ             [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! GEQ             [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 35 (expression -> expression AND expression .) ]


state 99

    (36) expression -> expression OR expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 36 (expression -> expression OR expression .)
    RPAREN          reduce using rule 36 (expression -> expression OR expression .)
    RANGE           reduce using rule 36 (expression -> expression OR expression .)
    COMMA           reduce using rule 36 (expression -> expression OR expression .)
    RBRACE          reduce using rule 36 (expression -> expression OR expression .)
    LBRACE          reduce using rule 36 (expression -> expression OR expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! AND             [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! LTHEN           [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! RTHEN           [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! LEQ             [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! GEQ             [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 36 (expression -> expression OR expression .) ]


state 100

    (37) expression -> expression EQ expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 37 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 37 (expression -> expression EQ expression .)
    RANGE           reduce using rule 37 (expression -> expression EQ expression .)
    COMMA           reduce using rule 37 (expression -> expression EQ expression .)
    RBRACE          reduce using rule 37 (expression -> expression EQ expression .)
    LBRACE          reduce using rule 37 (expression -> expression EQ expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! AND             [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! OR              [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! LTHEN           [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! RTHEN           [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! LEQ             [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! GEQ             [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 37 (expression -> expression EQ expression .) ]


state 101

    (38) expression -> expression NEQ expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 38 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 38 (expression -> expression NEQ expression .)
    RANGE           reduce using rule 38 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 38 (expression -> expression NEQ expression .)
    RBRACE          reduce using rule 38 (expression -> expression NEQ expression .)
    LBRACE          reduce using rule 38 (expression -> expression NEQ expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! AND             [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! OR              [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! LTHEN           [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! RTHEN           [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! LEQ             [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! GEQ             [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! MOD             [ reduce using rule 38 (expression -> expression NEQ expression .) ]


state 102

    (39) expression -> expression LTHEN expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 39 (expression -> expression LTHEN expression .)
    RPAREN          reduce using rule 39 (expression -> expression LTHEN expression .)
    RANGE           reduce using rule 39 (expression -> expression LTHEN expression .)
    COMMA           reduce using rule 39 (expression -> expression LTHEN expression .)
    RBRACE          reduce using rule 39 (expression -> expression LTHEN expression .)
    LBRACE          reduce using rule 39 (expression -> expression LTHEN expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! AND             [ reduce using rule 39 (expression -> expression LTHEN expression .) ]
  ! OR              [ reduce using rule 39 (expression -> expression LTHEN expression .) ]
  ! EQ              [ reduce using rule 39 (expression -> expression LTHEN expression .) ]
  ! NEQ             [ reduce using rule 39 (expression -> expression LTHEN expression .) ]
  ! LTHEN           [ reduce using rule 39 (expression -> expression LTHEN expression .) ]
  ! RTHEN           [ reduce using rule 39 (expression -> expression LTHEN expression .) ]
  ! LEQ             [ reduce using rule 39 (expression -> expression LTHEN expression .) ]
  ! GEQ             [ reduce using rule 39 (expression -> expression LTHEN expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> expression LTHEN expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression LTHEN expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression LTHEN expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression LTHEN expression .) ]
  ! MOD             [ reduce using rule 39 (expression -> expression LTHEN expression .) ]


state 103

    (40) expression -> expression RTHEN expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 40 (expression -> expression RTHEN expression .)
    RPAREN          reduce using rule 40 (expression -> expression RTHEN expression .)
    RANGE           reduce using rule 40 (expression -> expression RTHEN expression .)
    COMMA           reduce using rule 40 (expression -> expression RTHEN expression .)
    RBRACE          reduce using rule 40 (expression -> expression RTHEN expression .)
    LBRACE          reduce using rule 40 (expression -> expression RTHEN expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! AND             [ reduce using rule 40 (expression -> expression RTHEN expression .) ]
  ! OR              [ reduce using rule 40 (expression -> expression RTHEN expression .) ]
  ! EQ              [ reduce using rule 40 (expression -> expression RTHEN expression .) ]
  ! NEQ             [ reduce using rule 40 (expression -> expression RTHEN expression .) ]
  ! LTHEN           [ reduce using rule 40 (expression -> expression RTHEN expression .) ]
  ! RTHEN           [ reduce using rule 40 (expression -> expression RTHEN expression .) ]
  ! LEQ             [ reduce using rule 40 (expression -> expression RTHEN expression .) ]
  ! GEQ             [ reduce using rule 40 (expression -> expression RTHEN expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression RTHEN expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression RTHEN expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression RTHEN expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression RTHEN expression .) ]
  ! MOD             [ reduce using rule 40 (expression -> expression RTHEN expression .) ]


state 104

    (41) expression -> expression LEQ expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 41 (expression -> expression LEQ expression .)
    RPAREN          reduce using rule 41 (expression -> expression LEQ expression .)
    RANGE           reduce using rule 41 (expression -> expression LEQ expression .)
    COMMA           reduce using rule 41 (expression -> expression LEQ expression .)
    RBRACE          reduce using rule 41 (expression -> expression LEQ expression .)
    LBRACE          reduce using rule 41 (expression -> expression LEQ expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! AND             [ reduce using rule 41 (expression -> expression LEQ expression .) ]
  ! OR              [ reduce using rule 41 (expression -> expression LEQ expression .) ]
  ! EQ              [ reduce using rule 41 (expression -> expression LEQ expression .) ]
  ! NEQ             [ reduce using rule 41 (expression -> expression LEQ expression .) ]
  ! LTHEN           [ reduce using rule 41 (expression -> expression LEQ expression .) ]
  ! RTHEN           [ reduce using rule 41 (expression -> expression LEQ expression .) ]
  ! LEQ             [ reduce using rule 41 (expression -> expression LEQ expression .) ]
  ! GEQ             [ reduce using rule 41 (expression -> expression LEQ expression .) ]
  ! PLUS            [ reduce using rule 41 (expression -> expression LEQ expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression LEQ expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression LEQ expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression LEQ expression .) ]
  ! MOD             [ reduce using rule 41 (expression -> expression LEQ expression .) ]


state 105

    (42) expression -> expression GEQ expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 42 (expression -> expression GEQ expression .)
    RPAREN          reduce using rule 42 (expression -> expression GEQ expression .)
    RANGE           reduce using rule 42 (expression -> expression GEQ expression .)
    COMMA           reduce using rule 42 (expression -> expression GEQ expression .)
    RBRACE          reduce using rule 42 (expression -> expression GEQ expression .)
    LBRACE          reduce using rule 42 (expression -> expression GEQ expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! AND             [ reduce using rule 42 (expression -> expression GEQ expression .) ]
  ! OR              [ reduce using rule 42 (expression -> expression GEQ expression .) ]
  ! EQ              [ reduce using rule 42 (expression -> expression GEQ expression .) ]
  ! NEQ             [ reduce using rule 42 (expression -> expression GEQ expression .) ]
  ! LTHEN           [ reduce using rule 42 (expression -> expression GEQ expression .) ]
  ! RTHEN           [ reduce using rule 42 (expression -> expression GEQ expression .) ]
  ! LEQ             [ reduce using rule 42 (expression -> expression GEQ expression .) ]
  ! GEQ             [ reduce using rule 42 (expression -> expression GEQ expression .) ]
  ! PLUS            [ reduce using rule 42 (expression -> expression GEQ expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression GEQ expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression GEQ expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression GEQ expression .) ]
  ! MOD             [ reduce using rule 42 (expression -> expression GEQ expression .) ]


state 106

    (44) expression -> expression PLUS expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 44 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 44 (expression -> expression PLUS expression .)
    RANGE           reduce using rule 44 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 44 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 44 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 44 (expression -> expression PLUS expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! AND             [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! EQ              [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! NEQ             [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! LTHEN           [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! RTHEN           [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! LEQ             [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! GEQ             [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! PLUS            [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 44 (expression -> expression PLUS expression .) ]


state 107

    (45) expression -> expression MINUS expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 45 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 45 (expression -> expression MINUS expression .)
    RANGE           reduce using rule 45 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 45 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 45 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 45 (expression -> expression MINUS expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! AND             [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! EQ              [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! NEQ             [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! LTHEN           [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! RTHEN           [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! LEQ             [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! GEQ             [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 45 (expression -> expression MINUS expression .) ]


state 108

    (46) expression -> expression TIMES expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 46 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 46 (expression -> expression TIMES expression .)
    RANGE           reduce using rule 46 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 46 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 46 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 46 (expression -> expression TIMES expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! AND             [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! EQ              [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! NEQ             [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! LTHEN           [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! RTHEN           [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! LEQ             [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! GEQ             [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! PLUS            [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! MOD             [ reduce using rule 46 (expression -> expression TIMES expression .) ]


state 109

    (47) expression -> expression DIVIDE expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 47 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 47 (expression -> expression DIVIDE expression .)
    RANGE           reduce using rule 47 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 47 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 47 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 47 (expression -> expression DIVIDE expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! AND             [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! EQ              [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! NEQ             [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! LTHEN           [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! RTHEN           [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! LEQ             [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! GEQ             [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! MOD             [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]


state 110

    (48) expression -> expression MOD expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 48 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 48 (expression -> expression MOD expression .)
    RANGE           reduce using rule 48 (expression -> expression MOD expression .)
    COMMA           reduce using rule 48 (expression -> expression MOD expression .)
    RBRACE          reduce using rule 48 (expression -> expression MOD expression .)
    LBRACE          reduce using rule 48 (expression -> expression MOD expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! AND             [ reduce using rule 48 (expression -> expression MOD expression .) ]
  ! OR              [ reduce using rule 48 (expression -> expression MOD expression .) ]
  ! EQ              [ reduce using rule 48 (expression -> expression MOD expression .) ]
  ! NEQ             [ reduce using rule 48 (expression -> expression MOD expression .) ]
  ! LTHEN           [ reduce using rule 48 (expression -> expression MOD expression .) ]
  ! RTHEN           [ reduce using rule 48 (expression -> expression MOD expression .) ]
  ! LEQ             [ reduce using rule 48 (expression -> expression MOD expression .) ]
  ! GEQ             [ reduce using rule 48 (expression -> expression MOD expression .) ]
  ! PLUS            [ reduce using rule 48 (expression -> expression MOD expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression MOD expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> expression MOD expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression MOD expression .) ]
  ! MOD             [ reduce using rule 48 (expression -> expression MOD expression .) ]


state 111

    (49) expression -> LPAREN expression RPAREN .

    AND             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LTHEN           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RTHEN           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RANGE           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)


state 112

    (50) expression -> ID LPAREN arg_list_opt . RPAREN

    RPAREN          shift and go to state 135


state 113

    (43) statement -> FOR ID IN expression RANGE . expression LBRACE program RBRACE
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 136

state 114

    (56) statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE
    (57) statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE ELSE LBRACE program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (43) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (56) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (57) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (58) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (73) statement -> . variable_declaration
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (72) class_definition -> . CLASS ID generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> . CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE
    (84) enum_definition -> . ENUM ID generics_opt LBRACE enum_body RBRACE
    (11) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (12) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (80) interface_definition -> . INTERFACE ID generics_opt LBRACE interface_body RBRACE
    (13) return_statement -> . RETURN expression
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    FOR             shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FN              shift and go to state 15
    CLASS           shift and go to state 16
    ENUM            shift and go to state 17
    NAMESPACE       shift and go to state 18
    INTERFACE       shift and go to state 20
    RETURN          shift and go to state 21
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    program                        shift and go to state 137
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_specifier                 shift and go to state 19

state 115

    (58) statement -> WHILE LPAREN expression RPAREN LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (43) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (56) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (57) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (58) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (73) statement -> . variable_declaration
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (72) class_definition -> . CLASS ID generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> . CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE
    (84) enum_definition -> . ENUM ID generics_opt LBRACE enum_body RBRACE
    (11) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (12) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (80) interface_definition -> . INTERFACE ID generics_opt LBRACE interface_body RBRACE
    (13) return_statement -> . RETURN expression
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    FOR             shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FN              shift and go to state 15
    CLASS           shift and go to state 16
    ENUM            shift and go to state 17
    NAMESPACE       shift and go to state 18
    INTERFACE       shift and go to state 20
    RETURN          shift and go to state 21
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    program                        shift and go to state 138
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_specifier                 shift and go to state 19

state 116

    (71) function_definition -> FN generics_opt ID LPAREN parameters_opt . RPAREN return_type_opt LBRACE program RBRACE

    RPAREN          shift and go to state 139


state 117

    (64) parameters_opt -> parameters_list .
    (66) parameters_list -> parameters_list . COMMA parameter

    RPAREN          reduce using rule 64 (parameters_opt -> parameters_list .)
    COMMA           shift and go to state 140


state 118

    (65) parameters_opt -> empty .

    RPAREN          reduce using rule 65 (parameters_opt -> empty .)


state 119

    (67) parameters_list -> parameter .

    COMMA           reduce using rule 67 (parameters_list -> parameter .)
    RPAREN          reduce using rule 67 (parameters_list -> parameter .)


state 120

    (68) parameter -> type_specifier . ID

    ID              shift and go to state 141


state 121

    (16) generics_list -> generics_list COMMA ID .

    RANGLE          reduce using rule 16 (generics_list -> generics_list COMMA ID .)
    COMMA           reduce using rule 16 (generics_list -> generics_list COMMA ID .)


state 122

    (72) class_definition -> CLASS ID generics_opt extends_opt LBRACE . class_body RBRACE
    (83) struct_definition -> CLASS ID generics_opt extends_opt LBRACE . struct_body RBRACE
    (18) class_body -> . class_body class_member
    (19) class_body -> . empty
    (22) struct_body -> . struct_body struct_member
    (23) struct_body -> . empty
    (59) empty -> .

    RBRACE          reduce using rule 59 (empty -> .)
    FN              reduce using rule 59 (empty -> .)
    ID              reduce using rule 59 (empty -> .)
    POINTER         reduce using rule 59 (empty -> .)
    REF             reduce using rule 59 (empty -> .)

    class_body                     shift and go to state 142
    struct_body                    shift and go to state 143
    empty                          shift and go to state 144

state 123

    (30) extends_opt -> EXTENDS ID . generics_opt
    (14) generics_opt -> . LANGLE generics_list RANGLE
    (15) generics_opt -> . empty
    (59) empty -> .

    LANGLE          shift and go to state 31
    LBRACE          reduce using rule 59 (empty -> .)

    generics_opt                   shift and go to state 145
    empty                          shift and go to state 32

state 124

    (28) enum_member -> ID .
    (29) enum_member -> ID . ASSIGN NUMBER

    RBRACE          reduce using rule 28 (enum_member -> ID .)
    ID              reduce using rule 28 (enum_member -> ID .)
    ASSIGN          shift and go to state 146


state 125

    (84) enum_definition -> ENUM ID generics_opt LBRACE enum_body . RBRACE
    (26) enum_body -> enum_body . enum_member
    (28) enum_member -> . ID
    (29) enum_member -> . ID ASSIGN NUMBER

    RBRACE          shift and go to state 147
    ID              shift and go to state 124

    enum_member                    shift and go to state 148

state 126

    (27) enum_body -> enum_member .

    RBRACE          reduce using rule 27 (enum_body -> enum_member .)
    ID              reduce using rule 27 (enum_body -> enum_member .)


state 127

    (11) namespace_definition -> NAMESPACE ID LBRACE program RBRACE .

    FOR             reduce using rule 11 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    IF              reduce using rule 11 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    WHILE           reduce using rule 11 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    FN              reduce using rule 11 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    CLASS           reduce using rule 11 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    ENUM            reduce using rule 11 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    NAMESPACE       reduce using rule 11 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    INTERFACE       reduce using rule 11 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    RETURN          reduce using rule 11 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    ID              reduce using rule 11 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    POINTER         reduce using rule 11 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    REF             reduce using rule 11 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    $end            reduce using rule 11 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    RBRACE          reduce using rule 11 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)


state 128

    (75) variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN . SEMI

    SEMI            shift and go to state 149


state 129

    (53) arg_list -> arg_list COMMA . expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    expression                     shift and go to state 150

state 130

    (77) variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN . arg_list_opt RPAREN SEMI
    (51) arg_list_opt -> . arg_list
    (52) arg_list_opt -> . empty
    (53) arg_list -> . arg_list COMMA expression
    (54) arg_list -> . expression
    (55) arg_list -> . empty
    (59) empty -> .
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    RPAREN          reduce using rule 59 (empty -> .)
    COMMA           reduce using rule 59 (empty -> .)
    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    arg_list_opt                   shift and go to state 151
    arg_list                       shift and go to state 91
    empty                          shift and go to state 92
    expression                     shift and go to state 93

state 131

    (79) variable_declaration -> type_specifier ID ASSIGN NEW type_specifier . LPAREN arg_list_opt RPAREN SEMI

    LPAREN          shift and go to state 152


state 132

    (78) variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE . SEMI

    SEMI            shift and go to state 153


state 133

    (80) interface_definition -> INTERFACE ID generics_opt LBRACE interface_body . RBRACE
    (81) interface_body -> interface_body . function_definition
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE

    RBRACE          shift and go to state 154
    FN              shift and go to state 15

    function_definition            shift and go to state 155

state 134

    (82) interface_body -> empty .

    RBRACE          reduce using rule 82 (interface_body -> empty .)
    FN              reduce using rule 82 (interface_body -> empty .)


state 135

    (50) expression -> ID LPAREN arg_list_opt RPAREN .

    AND             reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    OR              reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    EQ              reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    NEQ             reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    LTHEN           reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    RTHEN           reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    LEQ             reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    GEQ             reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    PLUS            reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    MINUS           reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    TIMES           reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    DIVIDE          reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    MOD             reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    SEMI            reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    RPAREN          reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    RANGE           reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    COMMA           reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    RBRACE          reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)
    LBRACE          reduce using rule 50 (expression -> ID LPAREN arg_list_opt RPAREN .)


state 136

    (43) statement -> FOR ID IN expression RANGE expression . LBRACE program RBRACE
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

    LBRACE          shift and go to state 156
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73


state 137

    (56) statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE
    (57) statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE ELSE LBRACE program RBRACE
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (43) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (56) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (57) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (58) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (73) statement -> . variable_declaration
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (72) class_definition -> . CLASS ID generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> . CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE
    (84) enum_definition -> . ENUM ID generics_opt LBRACE enum_body RBRACE
    (11) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (12) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (80) interface_definition -> . INTERFACE ID generics_opt LBRACE interface_body RBRACE
    (13) return_statement -> . RETURN expression
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    RBRACE          shift and go to state 157
    FOR             shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FN              shift and go to state 15
    CLASS           shift and go to state 16
    ENUM            shift and go to state 17
    NAMESPACE       shift and go to state 18
    INTERFACE       shift and go to state 20
    RETURN          shift and go to state 21
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    statement                      shift and go to state 24
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_specifier                 shift and go to state 19

state 138

    (58) statement -> WHILE LPAREN expression RPAREN LBRACE program . RBRACE
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (43) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (56) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (57) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (58) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (73) statement -> . variable_declaration
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (72) class_definition -> . CLASS ID generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> . CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE
    (84) enum_definition -> . ENUM ID generics_opt LBRACE enum_body RBRACE
    (11) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (12) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (80) interface_definition -> . INTERFACE ID generics_opt LBRACE interface_body RBRACE
    (13) return_statement -> . RETURN expression
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    RBRACE          shift and go to state 158
    FOR             shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FN              shift and go to state 15
    CLASS           shift and go to state 16
    ENUM            shift and go to state 17
    NAMESPACE       shift and go to state 18
    INTERFACE       shift and go to state 20
    RETURN          shift and go to state 21
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    statement                      shift and go to state 24
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_specifier                 shift and go to state 19

state 139

    (71) function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN . return_type_opt LBRACE program RBRACE
    (69) return_type_opt -> . ARROW type_specifier
    (70) return_type_opt -> . empty
    (59) empty -> .

    ARROW           shift and go to state 160
    LBRACE          reduce using rule 59 (empty -> .)

    return_type_opt                shift and go to state 159
    empty                          shift and go to state 161

state 140

    (66) parameters_list -> parameters_list COMMA . parameter
    (68) parameter -> . type_specifier ID
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    parameter                      shift and go to state 162
    type_specifier                 shift and go to state 120

state 141

    (68) parameter -> type_specifier ID .

    COMMA           reduce using rule 68 (parameter -> type_specifier ID .)
    RPAREN          reduce using rule 68 (parameter -> type_specifier ID .)


state 142

    (72) class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body . RBRACE
    (18) class_body -> class_body . class_member
    (20) class_member -> . variable_declaration SEMI
    (21) class_member -> . function_definition
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    RBRACE          shift and go to state 163
    FN              shift and go to state 15
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    class_member                   shift and go to state 164
    variable_declaration           shift and go to state 165
    function_definition            shift and go to state 166
    type_specifier                 shift and go to state 19

state 143

    (83) struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body . RBRACE
    (22) struct_body -> struct_body . struct_member
    (24) struct_member -> . variable_declaration SEMI
    (25) struct_member -> . function_definition
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    RBRACE          shift and go to state 167
    FN              shift and go to state 15
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    struct_member                  shift and go to state 168
    variable_declaration           shift and go to state 169
    function_definition            shift and go to state 170
    type_specifier                 shift and go to state 19

state 144

    (19) class_body -> empty .
    (23) struct_body -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 19 (class_body -> empty .)
  ! reduce/reduce conflict for FN resolved using rule 19 (class_body -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 19 (class_body -> empty .)
  ! reduce/reduce conflict for POINTER resolved using rule 19 (class_body -> empty .)
  ! reduce/reduce conflict for REF resolved using rule 19 (class_body -> empty .)
    RBRACE          reduce using rule 19 (class_body -> empty .)
    FN              reduce using rule 19 (class_body -> empty .)
    ID              reduce using rule 19 (class_body -> empty .)
    POINTER         reduce using rule 19 (class_body -> empty .)
    REF             reduce using rule 19 (class_body -> empty .)

  ! RBRACE          [ reduce using rule 23 (struct_body -> empty .) ]
  ! FN              [ reduce using rule 23 (struct_body -> empty .) ]
  ! ID              [ reduce using rule 23 (struct_body -> empty .) ]
  ! POINTER         [ reduce using rule 23 (struct_body -> empty .) ]
  ! REF             [ reduce using rule 23 (struct_body -> empty .) ]


state 145

    (30) extends_opt -> EXTENDS ID generics_opt .

    LBRACE          reduce using rule 30 (extends_opt -> EXTENDS ID generics_opt .)


state 146

    (29) enum_member -> ID ASSIGN . NUMBER

    NUMBER          shift and go to state 171


state 147

    (84) enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE .

    FOR             reduce using rule 84 (enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE .)
    IF              reduce using rule 84 (enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE .)
    WHILE           reduce using rule 84 (enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE .)
    FN              reduce using rule 84 (enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE .)
    CLASS           reduce using rule 84 (enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE .)
    ENUM            reduce using rule 84 (enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE .)
    NAMESPACE       reduce using rule 84 (enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE .)
    INTERFACE       reduce using rule 84 (enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE .)
    RETURN          reduce using rule 84 (enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE .)
    ID              reduce using rule 84 (enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE .)
    POINTER         reduce using rule 84 (enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE .)
    REF             reduce using rule 84 (enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE .)
    $end            reduce using rule 84 (enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE .)
    RBRACE          reduce using rule 84 (enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE .)


state 148

    (26) enum_body -> enum_body enum_member .

    RBRACE          reduce using rule 26 (enum_body -> enum_body enum_member .)
    ID              reduce using rule 26 (enum_body -> enum_body enum_member .)


state 149

    (75) variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .

    SEMI            reduce using rule 75 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    FOR             reduce using rule 75 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    IF              reduce using rule 75 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    WHILE           reduce using rule 75 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    FN              reduce using rule 75 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    CLASS           reduce using rule 75 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    ENUM            reduce using rule 75 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    NAMESPACE       reduce using rule 75 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 75 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    RETURN          reduce using rule 75 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    ID              reduce using rule 75 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    POINTER         reduce using rule 75 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    REF             reduce using rule 75 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    $end            reduce using rule 75 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    RBRACE          reduce using rule 75 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)


state 150

    (53) arg_list -> arg_list COMMA expression .
    (35) expression -> expression . AND expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . LTHEN expression
    (40) expression -> expression . RTHEN expression
    (41) expression -> expression . LEQ expression
    (42) expression -> expression . GEQ expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression
    (48) expression -> expression . MOD expression

    COMMA           reduce using rule 53 (arg_list -> arg_list COMMA expression .)
    RPAREN          reduce using rule 53 (arg_list -> arg_list COMMA expression .)
    RBRACE          reduce using rule 53 (arg_list -> arg_list COMMA expression .)
    AND             shift and go to state 61
    OR              shift and go to state 62
    EQ              shift and go to state 63
    NEQ             shift and go to state 64
    LTHEN           shift and go to state 65
    RTHEN           shift and go to state 66
    LEQ             shift and go to state 67
    GEQ             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73


state 151

    (77) variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt . RPAREN SEMI

    RPAREN          shift and go to state 172


state 152

    (79) variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN . arg_list_opt RPAREN SEMI
    (51) arg_list_opt -> . arg_list
    (52) arg_list_opt -> . empty
    (53) arg_list -> . arg_list COMMA expression
    (54) arg_list -> . expression
    (55) arg_list -> . empty
    (59) empty -> .
    (35) expression -> . expression AND expression
    (36) expression -> . expression OR expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression LTHEN expression
    (40) expression -> . expression RTHEN expression
    (41) expression -> . expression LEQ expression
    (42) expression -> . expression GEQ expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . expression MOD expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . ID LPAREN arg_list_opt RPAREN
    (60) expression -> . NUMBER
    (61) expression -> . ID
    (62) expression -> . REF ID
    (63) expression -> . POINTER expression
    (74) expression -> . error

    RPAREN          reduce using rule 59 (empty -> .)
    COMMA           reduce using rule 59 (empty -> .)
    LPAREN          shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    REF             shift and go to state 42
    POINTER         shift and go to state 43
    error           shift and go to state 44

    arg_list_opt                   shift and go to state 173
    arg_list                       shift and go to state 91
    empty                          shift and go to state 92
    expression                     shift and go to state 93

state 153

    (78) variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .

    SEMI            reduce using rule 78 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    FOR             reduce using rule 78 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    IF              reduce using rule 78 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    WHILE           reduce using rule 78 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    FN              reduce using rule 78 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    CLASS           reduce using rule 78 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    ENUM            reduce using rule 78 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    NAMESPACE       reduce using rule 78 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    INTERFACE       reduce using rule 78 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    RETURN          reduce using rule 78 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    ID              reduce using rule 78 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    POINTER         reduce using rule 78 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    REF             reduce using rule 78 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    $end            reduce using rule 78 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    RBRACE          reduce using rule 78 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)


state 154

    (80) interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE .

    FOR             reduce using rule 80 (interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE .)
    IF              reduce using rule 80 (interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE .)
    WHILE           reduce using rule 80 (interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE .)
    FN              reduce using rule 80 (interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE .)
    CLASS           reduce using rule 80 (interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE .)
    ENUM            reduce using rule 80 (interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE .)
    NAMESPACE       reduce using rule 80 (interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE .)
    INTERFACE       reduce using rule 80 (interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE .)
    RETURN          reduce using rule 80 (interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE .)
    ID              reduce using rule 80 (interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE .)
    POINTER         reduce using rule 80 (interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE .)
    REF             reduce using rule 80 (interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE .)
    $end            reduce using rule 80 (interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE .)
    RBRACE          reduce using rule 80 (interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE .)


state 155

    (81) interface_body -> interface_body function_definition .

    RBRACE          reduce using rule 81 (interface_body -> interface_body function_definition .)
    FN              reduce using rule 81 (interface_body -> interface_body function_definition .)


state 156

    (43) statement -> FOR ID IN expression RANGE expression LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (43) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (56) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (57) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (58) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (73) statement -> . variable_declaration
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (72) class_definition -> . CLASS ID generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> . CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE
    (84) enum_definition -> . ENUM ID generics_opt LBRACE enum_body RBRACE
    (11) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (12) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (80) interface_definition -> . INTERFACE ID generics_opt LBRACE interface_body RBRACE
    (13) return_statement -> . RETURN expression
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    FOR             shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FN              shift and go to state 15
    CLASS           shift and go to state 16
    ENUM            shift and go to state 17
    NAMESPACE       shift and go to state 18
    INTERFACE       shift and go to state 20
    RETURN          shift and go to state 21
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    program                        shift and go to state 174
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_specifier                 shift and go to state 19

state 157

    (56) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .
    (57) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE . ELSE LBRACE program RBRACE

    FOR             reduce using rule 56 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 56 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 56 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    FN              reduce using rule 56 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    CLASS           reduce using rule 56 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ENUM            reduce using rule 56 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    NAMESPACE       reduce using rule 56 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    INTERFACE       reduce using rule 56 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 56 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ID              reduce using rule 56 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    POINTER         reduce using rule 56 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    REF             reduce using rule 56 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 56 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 56 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ELSE            shift and go to state 175


state 158

    (58) statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .

    FOR             reduce using rule 58 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 58 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 58 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    FN              reduce using rule 58 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    CLASS           reduce using rule 58 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    ENUM            reduce using rule 58 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    NAMESPACE       reduce using rule 58 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    INTERFACE       reduce using rule 58 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 58 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    ID              reduce using rule 58 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    POINTER         reduce using rule 58 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    REF             reduce using rule 58 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 58 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 58 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)


state 159

    (71) function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt . LBRACE program RBRACE

    LBRACE          shift and go to state 176


state 160

    (69) return_type_opt -> ARROW . type_specifier
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    type_specifier                 shift and go to state 177

state 161

    (70) return_type_opt -> empty .

    LBRACE          reduce using rule 70 (return_type_opt -> empty .)


state 162

    (66) parameters_list -> parameters_list COMMA parameter .

    COMMA           reduce using rule 66 (parameters_list -> parameters_list COMMA parameter .)
    RPAREN          reduce using rule 66 (parameters_list -> parameters_list COMMA parameter .)


state 163

    (72) class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE .

    FOR             reduce using rule 72 (class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE .)
    IF              reduce using rule 72 (class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE .)
    WHILE           reduce using rule 72 (class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE .)
    FN              reduce using rule 72 (class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE .)
    CLASS           reduce using rule 72 (class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE .)
    ENUM            reduce using rule 72 (class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE .)
    NAMESPACE       reduce using rule 72 (class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE .)
    INTERFACE       reduce using rule 72 (class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE .)
    RETURN          reduce using rule 72 (class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE .)
    ID              reduce using rule 72 (class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE .)
    POINTER         reduce using rule 72 (class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE .)
    REF             reduce using rule 72 (class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE .)
    $end            reduce using rule 72 (class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE .)
    RBRACE          reduce using rule 72 (class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE .)


state 164

    (18) class_body -> class_body class_member .

    RBRACE          reduce using rule 18 (class_body -> class_body class_member .)
    FN              reduce using rule 18 (class_body -> class_body class_member .)
    ID              reduce using rule 18 (class_body -> class_body class_member .)
    POINTER         reduce using rule 18 (class_body -> class_body class_member .)
    REF             reduce using rule 18 (class_body -> class_body class_member .)


state 165

    (20) class_member -> variable_declaration . SEMI

    SEMI            shift and go to state 178


state 166

    (21) class_member -> function_definition .

    RBRACE          reduce using rule 21 (class_member -> function_definition .)
    FN              reduce using rule 21 (class_member -> function_definition .)
    ID              reduce using rule 21 (class_member -> function_definition .)
    POINTER         reduce using rule 21 (class_member -> function_definition .)
    REF             reduce using rule 21 (class_member -> function_definition .)


state 167

    (83) struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE .

    FOR             reduce using rule 83 (struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE .)
    IF              reduce using rule 83 (struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE .)
    WHILE           reduce using rule 83 (struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE .)
    FN              reduce using rule 83 (struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE .)
    CLASS           reduce using rule 83 (struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE .)
    ENUM            reduce using rule 83 (struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE .)
    NAMESPACE       reduce using rule 83 (struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE .)
    INTERFACE       reduce using rule 83 (struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE .)
    RETURN          reduce using rule 83 (struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE .)
    ID              reduce using rule 83 (struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE .)
    POINTER         reduce using rule 83 (struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE .)
    REF             reduce using rule 83 (struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE .)
    $end            reduce using rule 83 (struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE .)
    RBRACE          reduce using rule 83 (struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE .)


state 168

    (22) struct_body -> struct_body struct_member .

    RBRACE          reduce using rule 22 (struct_body -> struct_body struct_member .)
    FN              reduce using rule 22 (struct_body -> struct_body struct_member .)
    ID              reduce using rule 22 (struct_body -> struct_body struct_member .)
    POINTER         reduce using rule 22 (struct_body -> struct_body struct_member .)
    REF             reduce using rule 22 (struct_body -> struct_body struct_member .)


state 169

    (24) struct_member -> variable_declaration . SEMI

    SEMI            shift and go to state 179


state 170

    (25) struct_member -> function_definition .

    RBRACE          reduce using rule 25 (struct_member -> function_definition .)
    FN              reduce using rule 25 (struct_member -> function_definition .)
    ID              reduce using rule 25 (struct_member -> function_definition .)
    POINTER         reduce using rule 25 (struct_member -> function_definition .)
    REF             reduce using rule 25 (struct_member -> function_definition .)


state 171

    (29) enum_member -> ID ASSIGN NUMBER .

    RBRACE          reduce using rule 29 (enum_member -> ID ASSIGN NUMBER .)
    ID              reduce using rule 29 (enum_member -> ID ASSIGN NUMBER .)


state 172

    (77) variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN . SEMI

    SEMI            shift and go to state 180


state 173

    (79) variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt . RPAREN SEMI

    RPAREN          shift and go to state 181


state 174

    (43) statement -> FOR ID IN expression RANGE expression LBRACE program . RBRACE
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (43) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (56) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (57) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (58) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (73) statement -> . variable_declaration
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (72) class_definition -> . CLASS ID generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> . CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE
    (84) enum_definition -> . ENUM ID generics_opt LBRACE enum_body RBRACE
    (11) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (12) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (80) interface_definition -> . INTERFACE ID generics_opt LBRACE interface_body RBRACE
    (13) return_statement -> . RETURN expression
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    RBRACE          shift and go to state 182
    FOR             shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FN              shift and go to state 15
    CLASS           shift and go to state 16
    ENUM            shift and go to state 17
    NAMESPACE       shift and go to state 18
    INTERFACE       shift and go to state 20
    RETURN          shift and go to state 21
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    statement                      shift and go to state 24
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_specifier                 shift and go to state 19

state 175

    (57) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE . LBRACE program RBRACE

    LBRACE          shift and go to state 183


state 176

    (71) function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (43) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (56) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (57) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (58) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (73) statement -> . variable_declaration
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (72) class_definition -> . CLASS ID generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> . CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE
    (84) enum_definition -> . ENUM ID generics_opt LBRACE enum_body RBRACE
    (11) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (12) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (80) interface_definition -> . INTERFACE ID generics_opt LBRACE interface_body RBRACE
    (13) return_statement -> . RETURN expression
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    FOR             shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FN              shift and go to state 15
    CLASS           shift and go to state 16
    ENUM            shift and go to state 17
    NAMESPACE       shift and go to state 18
    INTERFACE       shift and go to state 20
    RETURN          shift and go to state 21
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    program                        shift and go to state 184
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_specifier                 shift and go to state 19

state 177

    (69) return_type_opt -> ARROW type_specifier .

    LBRACE          reduce using rule 69 (return_type_opt -> ARROW type_specifier .)


state 178

    (20) class_member -> variable_declaration SEMI .

    RBRACE          reduce using rule 20 (class_member -> variable_declaration SEMI .)
    FN              reduce using rule 20 (class_member -> variable_declaration SEMI .)
    ID              reduce using rule 20 (class_member -> variable_declaration SEMI .)
    POINTER         reduce using rule 20 (class_member -> variable_declaration SEMI .)
    REF             reduce using rule 20 (class_member -> variable_declaration SEMI .)


state 179

    (24) struct_member -> variable_declaration SEMI .

    RBRACE          reduce using rule 24 (struct_member -> variable_declaration SEMI .)
    FN              reduce using rule 24 (struct_member -> variable_declaration SEMI .)
    ID              reduce using rule 24 (struct_member -> variable_declaration SEMI .)
    POINTER         reduce using rule 24 (struct_member -> variable_declaration SEMI .)
    REF             reduce using rule 24 (struct_member -> variable_declaration SEMI .)


state 180

    (77) variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .

    SEMI            reduce using rule 77 (variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    FOR             reduce using rule 77 (variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    IF              reduce using rule 77 (variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    WHILE           reduce using rule 77 (variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    FN              reduce using rule 77 (variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    CLASS           reduce using rule 77 (variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    ENUM            reduce using rule 77 (variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    NAMESPACE       reduce using rule 77 (variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 77 (variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    RETURN          reduce using rule 77 (variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    ID              reduce using rule 77 (variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    POINTER         reduce using rule 77 (variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    REF             reduce using rule 77 (variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    $end            reduce using rule 77 (variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    RBRACE          reduce using rule 77 (variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI .)


state 181

    (79) variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN . SEMI

    SEMI            shift and go to state 185


state 182

    (43) statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .

    FOR             reduce using rule 43 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    IF              reduce using rule 43 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    WHILE           reduce using rule 43 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    FN              reduce using rule 43 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    CLASS           reduce using rule 43 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    ENUM            reduce using rule 43 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    NAMESPACE       reduce using rule 43 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    INTERFACE       reduce using rule 43 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    RETURN          reduce using rule 43 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    ID              reduce using rule 43 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    POINTER         reduce using rule 43 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    REF             reduce using rule 43 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    $end            reduce using rule 43 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    RBRACE          reduce using rule 43 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)


state 183

    (57) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (43) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (56) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (57) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (58) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (73) statement -> . variable_declaration
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (72) class_definition -> . CLASS ID generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> . CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE
    (84) enum_definition -> . ENUM ID generics_opt LBRACE enum_body RBRACE
    (11) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (12) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (80) interface_definition -> . INTERFACE ID generics_opt LBRACE interface_body RBRACE
    (13) return_statement -> . RETURN expression
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    FOR             shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FN              shift and go to state 15
    CLASS           shift and go to state 16
    ENUM            shift and go to state 17
    NAMESPACE       shift and go to state 18
    INTERFACE       shift and go to state 20
    RETURN          shift and go to state 21
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    program                        shift and go to state 186
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_specifier                 shift and go to state 19

state 184

    (71) function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program . RBRACE
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (43) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (56) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (57) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (58) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (73) statement -> . variable_declaration
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (72) class_definition -> . CLASS ID generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> . CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE
    (84) enum_definition -> . ENUM ID generics_opt LBRACE enum_body RBRACE
    (11) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (12) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (80) interface_definition -> . INTERFACE ID generics_opt LBRACE interface_body RBRACE
    (13) return_statement -> . RETURN expression
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    RBRACE          shift and go to state 187
    FOR             shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FN              shift and go to state 15
    CLASS           shift and go to state 16
    ENUM            shift and go to state 17
    NAMESPACE       shift and go to state 18
    INTERFACE       shift and go to state 20
    RETURN          shift and go to state 21
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    statement                      shift and go to state 24
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_specifier                 shift and go to state 19

state 185

    (79) variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .

    SEMI            reduce using rule 79 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    FOR             reduce using rule 79 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    IF              reduce using rule 79 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    WHILE           reduce using rule 79 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    FN              reduce using rule 79 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    CLASS           reduce using rule 79 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    ENUM            reduce using rule 79 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    NAMESPACE       reduce using rule 79 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 79 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    RETURN          reduce using rule 79 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    ID              reduce using rule 79 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    POINTER         reduce using rule 79 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    REF             reduce using rule 79 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    $end            reduce using rule 79 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    RBRACE          reduce using rule 79 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)


state 186

    (57) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program . RBRACE
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (43) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (56) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (57) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (58) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (73) statement -> . variable_declaration
    (71) function_definition -> . FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (72) class_definition -> . CLASS ID generics_opt extends_opt LBRACE class_body RBRACE
    (83) struct_definition -> . CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE
    (84) enum_definition -> . ENUM ID generics_opt LBRACE enum_body RBRACE
    (11) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (12) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (75) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (76) variable_declaration -> . type_specifier ID SEMI
    (77) variable_declaration -> . type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI
    (78) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (79) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (80) interface_definition -> . INTERFACE ID generics_opt LBRACE interface_body RBRACE
    (13) return_statement -> . RETURN expression
    (32) type_specifier -> . ID
    (33) type_specifier -> . POINTER type_specifier
    (34) type_specifier -> . REF type_specifier

    RBRACE          shift and go to state 188
    FOR             shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    FN              shift and go to state 15
    CLASS           shift and go to state 16
    ENUM            shift and go to state 17
    NAMESPACE       shift and go to state 18
    INTERFACE       shift and go to state 20
    RETURN          shift and go to state 21
    ID              shift and go to state 12
    POINTER         shift and go to state 22
    REF             shift and go to state 23

    statement                      shift and go to state 24
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_specifier                 shift and go to state 19

state 187

    (71) function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .

    FOR             reduce using rule 71 (function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    IF              reduce using rule 71 (function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    WHILE           reduce using rule 71 (function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    FN              reduce using rule 71 (function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    CLASS           reduce using rule 71 (function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    ENUM            reduce using rule 71 (function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    NAMESPACE       reduce using rule 71 (function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    INTERFACE       reduce using rule 71 (function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    RETURN          reduce using rule 71 (function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    ID              reduce using rule 71 (function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    POINTER         reduce using rule 71 (function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    REF             reduce using rule 71 (function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    $end            reduce using rule 71 (function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    RBRACE          reduce using rule 71 (function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)


state 188

    (57) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .

    FOR             reduce using rule 57 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    IF              reduce using rule 57 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    WHILE           reduce using rule 57 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    FN              reduce using rule 57 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    CLASS           reduce using rule 57 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    ENUM            reduce using rule 57 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    NAMESPACE       reduce using rule 57 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    INTERFACE       reduce using rule 57 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RETURN          reduce using rule 57 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    ID              reduce using rule 57 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    POINTER         reduce using rule 57 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    REF             reduce using rule 57 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    $end            reduce using rule 57 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RBRACE          reduce using rule 57 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for OR in state 77 resolved as shift
WARNING: shift/reduce conflict for EQ in state 77 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 77 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 77 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 77 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 77 resolved as shift
WARNING: shift/reduce conflict for MOD in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 98 resolved as shift
WARNING: shift/reduce conflict for OR in state 98 resolved as shift
WARNING: shift/reduce conflict for EQ in state 98 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 98 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 98 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 98 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 98 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 98 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 98 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 98 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 98 resolved as shift
WARNING: shift/reduce conflict for MOD in state 98 resolved as shift
WARNING: shift/reduce conflict for AND in state 99 resolved as shift
WARNING: shift/reduce conflict for OR in state 99 resolved as shift
WARNING: shift/reduce conflict for EQ in state 99 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 99 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 99 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 99 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 99 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 99 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 99 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 99 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 99 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 99 resolved as shift
WARNING: shift/reduce conflict for MOD in state 99 resolved as shift
WARNING: shift/reduce conflict for AND in state 100 resolved as shift
WARNING: shift/reduce conflict for OR in state 100 resolved as shift
WARNING: shift/reduce conflict for EQ in state 100 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 100 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 100 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 100 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 100 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 100 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 100 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 100 resolved as shift
WARNING: shift/reduce conflict for MOD in state 100 resolved as shift
WARNING: shift/reduce conflict for AND in state 101 resolved as shift
WARNING: shift/reduce conflict for OR in state 101 resolved as shift
WARNING: shift/reduce conflict for EQ in state 101 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 101 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 101 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 101 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 101 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 101 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 101 resolved as shift
WARNING: shift/reduce conflict for MOD in state 101 resolved as shift
WARNING: shift/reduce conflict for AND in state 102 resolved as shift
WARNING: shift/reduce conflict for OR in state 102 resolved as shift
WARNING: shift/reduce conflict for EQ in state 102 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 102 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 102 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 102 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 102 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 102 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 102 resolved as shift
WARNING: shift/reduce conflict for MOD in state 102 resolved as shift
WARNING: shift/reduce conflict for AND in state 103 resolved as shift
WARNING: shift/reduce conflict for OR in state 103 resolved as shift
WARNING: shift/reduce conflict for EQ in state 103 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 103 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 103 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 103 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 103 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 103 resolved as shift
WARNING: shift/reduce conflict for MOD in state 103 resolved as shift
WARNING: shift/reduce conflict for AND in state 104 resolved as shift
WARNING: shift/reduce conflict for OR in state 104 resolved as shift
WARNING: shift/reduce conflict for EQ in state 104 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 104 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 104 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 104 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 104 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 104 resolved as shift
WARNING: shift/reduce conflict for MOD in state 104 resolved as shift
WARNING: shift/reduce conflict for AND in state 105 resolved as shift
WARNING: shift/reduce conflict for OR in state 105 resolved as shift
WARNING: shift/reduce conflict for EQ in state 105 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 105 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 105 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 105 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 105 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 105 resolved as shift
WARNING: shift/reduce conflict for MOD in state 105 resolved as shift
WARNING: shift/reduce conflict for AND in state 106 resolved as shift
WARNING: shift/reduce conflict for OR in state 106 resolved as shift
WARNING: shift/reduce conflict for EQ in state 106 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 106 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 106 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 106 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 106 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 106 resolved as shift
WARNING: shift/reduce conflict for MOD in state 106 resolved as shift
WARNING: shift/reduce conflict for AND in state 107 resolved as shift
WARNING: shift/reduce conflict for OR in state 107 resolved as shift
WARNING: shift/reduce conflict for EQ in state 107 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 107 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 107 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 107 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 107 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 107 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 107 resolved as shift
WARNING: shift/reduce conflict for MOD in state 107 resolved as shift
WARNING: shift/reduce conflict for AND in state 108 resolved as shift
WARNING: shift/reduce conflict for OR in state 108 resolved as shift
WARNING: shift/reduce conflict for EQ in state 108 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 108 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 108 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 108 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 108 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 108 resolved as shift
WARNING: shift/reduce conflict for MOD in state 108 resolved as shift
WARNING: shift/reduce conflict for AND in state 109 resolved as shift
WARNING: shift/reduce conflict for OR in state 109 resolved as shift
WARNING: shift/reduce conflict for EQ in state 109 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 109 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 109 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 109 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 109 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 109 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 109 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 109 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 109 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 109 resolved as shift
WARNING: shift/reduce conflict for MOD in state 109 resolved as shift
WARNING: shift/reduce conflict for AND in state 110 resolved as shift
WARNING: shift/reduce conflict for OR in state 110 resolved as shift
WARNING: shift/reduce conflict for EQ in state 110 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 110 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 110 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 110 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 110 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 110 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 110 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 110 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 110 resolved as shift
WARNING: shift/reduce conflict for MOD in state 110 resolved as shift
WARNING: reduce/reduce conflict in state 92 resolved using rule (arg_list_opt -> empty)
WARNING: rejected rule (arg_list -> empty) in state 92
WARNING: reduce/reduce conflict in state 144 resolved using rule (class_body -> empty)
WARNING: rejected rule (struct_body -> empty) in state 144
WARNING: Rule (struct_body -> empty) is never reduced
