Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALL
    ANALYZE
    AT
    BREAK
    CATCH
    CONST
    CONTINUE
    COPY
    DEFER
    DELETE
    EXPORT
    FINALLY
    LBRACKET
    MACRO
    MOVE
    OPERATOR
    OVERRIDE
    PRIV
    PUB
    RANGE_INCLUSIVE
    RBRACKET
    REFERENCE
    STATIC
    STRUCT
    TRY
    UNSAFE
    VAR

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     statement -> function_definition
Rule 4     statement -> class_definition
Rule 5     statement -> struct_definition
Rule 6     statement -> enum_definition
Rule 7     statement -> namespace_definition
Rule 8     statement -> variable_declaration SEMI
Rule 9     statement -> interface_definition
Rule 10    statement -> return_statement SEMI
Rule 11    expression -> TRUE
Rule 12    expression -> FALSE
Rule 13    namespace_definition -> NAMESPACE ID LBRACE program RBRACE
Rule 14    namespace_definition -> NAMESPACE ID LBRACE RBRACE
Rule 15    return_statement -> RETURN expression
Rule 16    block -> LBRACE program RBRACE
Rule 17    type_with_generics -> ID LANGLE type_list RANGLE
Rule 18    type_with_generics -> ID empty
Rule 19    type_list -> type_list COMMA type_specifier
Rule 20    type_list -> type_specifier
Rule 21    class_body -> class_body class_member
Rule 22    class_body -> empty
Rule 23    class_member -> variable_declaration SEMI
Rule 24    class_member -> function_definition
Rule 25    struct_body -> struct_body struct_member
Rule 26    struct_body -> empty
Rule 27    struct_member -> variable_declaration SEMI
Rule 28    struct_member -> function_definition
Rule 29    enum_body -> enum_body enum_member
Rule 30    enum_body -> enum_member
Rule 31    enum_member -> ID
Rule 32    enum_member -> ID ASSIGN NUMBER
Rule 33    extends_opt -> EXTENDS type_with_generics
Rule 34    extends_opt -> empty
Rule 35    type_specifier -> ID
Rule 36    type_specifier -> type_with_generics
Rule 37    type_specifier -> POINTER type_specifier
Rule 38    type_specifier -> REF type_specifier
Rule 39    expression -> expression AND expression
Rule 40    expression -> expression OR expression
Rule 41    expression -> expression EQ expression
Rule 42    expression -> expression NEQ expression
Rule 43    expression -> expression LTHEN expression
Rule 44    expression -> expression RTHEN expression
Rule 45    expression -> expression LEQ expression
Rule 46    expression -> expression GEQ expression
Rule 47    expression -> NOT expression
Rule 48    statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE
Rule 49    expression -> expression PLUS expression
Rule 50    expression -> expression MINUS expression
Rule 51    expression -> expression TIMES expression
Rule 52    expression -> expression DIVIDE expression
Rule 53    expression -> expression MOD expression
Rule 54    expression -> LPAREN expression RPAREN
Rule 55    expression -> ID LPAREN arg_list_opt RPAREN
Rule 56    arg_list_opt -> arg_list
Rule 57    arg_list_opt -> empty
Rule 58    arg_list -> arg_list COMMA expression
Rule 59    arg_list -> expression
Rule 60    arg_list -> empty
Rule 61    statement -> IF LPAREN expression RPAREN LBRACE program RBRACE
Rule 62    statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
Rule 63    statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
Rule 64    match_cases -> match_cases match_case
Rule 65    match_cases -> match_case
Rule 66    match_case -> pattern ARM program SEMI
Rule 67    pattern -> simple_pattern
Rule 68    pattern -> tuple_pattern
Rule 69    simple_pattern -> ID
Rule 70    simple_pattern -> NUMBER
Rule 71    simple_pattern -> STRING
Rule 72    simple_pattern -> UNDERSCORE
Rule 73    tuple_pattern -> LPAREN pattern_list RPAREN
Rule 74    pattern_list -> pattern_list COMMA pattern
Rule 75    pattern_list -> pattern
Rule 76    qualified_name -> qualified_name DOUBLE_COLON ID
Rule 77    qualified_name -> ID
Rule 78    use_statement -> USE qualified_name SEMI
Rule 79    function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
Rule 80    expression -> AWAIT expression
Rule 81    statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE
Rule 82    empty -> <empty>
Rule 83    expression -> NUMBER
Rule 84    expression -> ID
Rule 85    expression -> REF ID
Rule 86    expression -> POINTER expression
Rule 87    parameters_opt -> parameters_list
Rule 88    parameters_opt -> empty
Rule 89    parameters_list -> parameters_list COMMA parameter
Rule 90    parameters_list -> parameter
Rule 91    parameter -> type_specifier ID
Rule 92    return_type_opt -> ARROW type_specifier
Rule 93    return_type_opt -> empty
Rule 94    function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
Rule 95    function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
Rule 96    class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE
Rule 97    statement -> variable_declaration
Rule 98    statement -> ID ASSIGN expression
Rule 99    statement -> expression
Rule 100   expression -> error
Rule 101   variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI
Rule 102   variable_declaration -> type_specifier ID SEMI
Rule 103   variable_declaration -> type_specifier ID ASSIGN expression SEMI
Rule 104   variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI
Rule 105   variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
Rule 106   interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE
Rule 107   interface_body -> interface_body function_definition
Rule 108   interface_body -> empty
Rule 109   struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
Rule 110   enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE

Terminals, with rules where they appear

ALL                  : 
ANALYZE              : 
AND                  : 39
ARM                  : 66
ARROW                : 92
ASSIGN               : 32 98 103 105
ASYNC                : 79
AT                   : 
AWAIT                : 80
BREAK                : 
CATCH                : 
CLASS                : 96 109
COMMA                : 19 58 74 89
CONST                : 
CONTINUE             : 
COPY                 : 
DEFER                : 
DELETE               : 
DIVIDE               : 52
DOUBLE_COLON         : 76
ELSE                 : 62
ENUM                 : 110
EQ                   : 41
EXPORT               : 
EXTENDS              : 33
FALSE                : 12
FINALLY              : 
FN                   : 79 94 95
FOR                  : 48
GEQ                  : 46
ID                   : 13 14 17 18 31 32 35 48 55 69 76 77 79 84 85 91 98 101 102 103 104 105
IF                   : 61 62
IN                   : 48
INTERFACE            : 106
LANGLE               : 17
LBRACE               : 13 14 16 48 61 62 62 63 79 81 94 95 96 104 106 109 110
LBRACKET             : 
LEQ                  : 45
LPAREN               : 54 55 61 62 63 73 79 81 94 95 101 105
LTHEN                : 43
MACRO                : 
MATCH                : 63
MINUS                : 50
MOD                  : 53
MOVE                 : 
NAMESPACE            : 13 14
NEQ                  : 42
NEW                  : 105
NOT                  : 47
NUMBER               : 32 70 83
OPERATOR             : 
OR                   : 40
OVERRIDE             : 
PLUS                 : 49
POINTER              : 37 86
PRIV                 : 
PUB                  : 
RANGE                : 48
RANGE_INCLUSIVE      : 
RANGLE               : 17
RBRACE               : 13 14 16 48 61 62 62 63 79 81 94 95 96 104 106 109 110
RBRACKET             : 
REF                  : 38 85
REFERENCE            : 
RETURN               : 15
RPAREN               : 54 55 61 62 63 73 79 81 94 95 101 105
RTHEN                : 44
SEMI                 : 8 10 23 27 66 78 101 102 103 104 105
STATIC               : 
STRING               : 71
STRUCT               : 
TIMES                : 51
TRUE                 : 11
TRY                  : 
UNDERSCORE           : 72
UNSAFE               : 
USE                  : 78
VAR                  : 
WHILE                : 81
error                : 100

Nonterminals, with rules where they appear

arg_list             : 56 58
arg_list_opt         : 55 101 104 105
block                : 
class_body           : 21 96
class_definition     : 4
class_member         : 21
empty                : 18 22 26 34 57 60 88 93 108
enum_body            : 29 110
enum_definition      : 6
enum_member          : 29 30
expression           : 15 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 48 48 49 49 50 50 51 51 52 52 53 53 54 58 59 61 62 63 80 81 86 98 99 103
extends_opt          : 96 109
function_definition  : 3 24 28 107
interface_body       : 106 107
interface_definition : 9
match_case           : 64 65
match_cases          : 63 64
namespace_definition : 7
parameter            : 89 90
parameters_list      : 87 89
parameters_opt       : 79 94 95
pattern              : 66 74 75
pattern_list         : 73 74
program              : 1 13 16 48 61 62 62 66 79 81 94 0
qualified_name       : 76 78
return_statement     : 10
return_type_opt      : 79 94 95
simple_pattern       : 67
statement            : 1 2
struct_body          : 25 109
struct_definition    : 5
struct_member        : 25
tuple_pattern        : 68
type_list            : 17 19
type_specifier       : 19 20 37 38 91 92 101 102 103 104 105 105
type_with_generics   : 33 36 94 95 96 106 109 110
use_statement        : 
variable_declaration : 8 23 27 97

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    program                        shift and go to state 1
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    expression                     shift and go to state 13
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 1

    (0) S' -> program .
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    statement                      shift and go to state 35
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    expression                     shift and go to state 13
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 2

    (2) program -> statement .

    FOR             reduce using rule 2 (program -> statement .)
    IF              reduce using rule 2 (program -> statement .)
    MATCH           reduce using rule 2 (program -> statement .)
    WHILE           reduce using rule 2 (program -> statement .)
    ID              reduce using rule 2 (program -> statement .)
    ASYNC           reduce using rule 2 (program -> statement .)
    FN              reduce using rule 2 (program -> statement .)
    CLASS           reduce using rule 2 (program -> statement .)
    ENUM            reduce using rule 2 (program -> statement .)
    NAMESPACE       reduce using rule 2 (program -> statement .)
    INTERFACE       reduce using rule 2 (program -> statement .)
    RETURN          reduce using rule 2 (program -> statement .)
    TRUE            reduce using rule 2 (program -> statement .)
    FALSE           reduce using rule 2 (program -> statement .)
    NOT             reduce using rule 2 (program -> statement .)
    LPAREN          reduce using rule 2 (program -> statement .)
    AWAIT           reduce using rule 2 (program -> statement .)
    NUMBER          reduce using rule 2 (program -> statement .)
    REF             reduce using rule 2 (program -> statement .)
    POINTER         reduce using rule 2 (program -> statement .)
    error           reduce using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)
    RBRACE          reduce using rule 2 (program -> statement .)
    SEMI            reduce using rule 2 (program -> statement .)


state 3

    (3) statement -> function_definition .

    FOR             reduce using rule 3 (statement -> function_definition .)
    IF              reduce using rule 3 (statement -> function_definition .)
    MATCH           reduce using rule 3 (statement -> function_definition .)
    WHILE           reduce using rule 3 (statement -> function_definition .)
    ID              reduce using rule 3 (statement -> function_definition .)
    ASYNC           reduce using rule 3 (statement -> function_definition .)
    FN              reduce using rule 3 (statement -> function_definition .)
    CLASS           reduce using rule 3 (statement -> function_definition .)
    ENUM            reduce using rule 3 (statement -> function_definition .)
    NAMESPACE       reduce using rule 3 (statement -> function_definition .)
    INTERFACE       reduce using rule 3 (statement -> function_definition .)
    RETURN          reduce using rule 3 (statement -> function_definition .)
    TRUE            reduce using rule 3 (statement -> function_definition .)
    FALSE           reduce using rule 3 (statement -> function_definition .)
    NOT             reduce using rule 3 (statement -> function_definition .)
    LPAREN          reduce using rule 3 (statement -> function_definition .)
    AWAIT           reduce using rule 3 (statement -> function_definition .)
    NUMBER          reduce using rule 3 (statement -> function_definition .)
    REF             reduce using rule 3 (statement -> function_definition .)
    POINTER         reduce using rule 3 (statement -> function_definition .)
    error           reduce using rule 3 (statement -> function_definition .)
    $end            reduce using rule 3 (statement -> function_definition .)
    RBRACE          reduce using rule 3 (statement -> function_definition .)
    SEMI            reduce using rule 3 (statement -> function_definition .)


state 4

    (4) statement -> class_definition .

    FOR             reduce using rule 4 (statement -> class_definition .)
    IF              reduce using rule 4 (statement -> class_definition .)
    MATCH           reduce using rule 4 (statement -> class_definition .)
    WHILE           reduce using rule 4 (statement -> class_definition .)
    ID              reduce using rule 4 (statement -> class_definition .)
    ASYNC           reduce using rule 4 (statement -> class_definition .)
    FN              reduce using rule 4 (statement -> class_definition .)
    CLASS           reduce using rule 4 (statement -> class_definition .)
    ENUM            reduce using rule 4 (statement -> class_definition .)
    NAMESPACE       reduce using rule 4 (statement -> class_definition .)
    INTERFACE       reduce using rule 4 (statement -> class_definition .)
    RETURN          reduce using rule 4 (statement -> class_definition .)
    TRUE            reduce using rule 4 (statement -> class_definition .)
    FALSE           reduce using rule 4 (statement -> class_definition .)
    NOT             reduce using rule 4 (statement -> class_definition .)
    LPAREN          reduce using rule 4 (statement -> class_definition .)
    AWAIT           reduce using rule 4 (statement -> class_definition .)
    NUMBER          reduce using rule 4 (statement -> class_definition .)
    REF             reduce using rule 4 (statement -> class_definition .)
    POINTER         reduce using rule 4 (statement -> class_definition .)
    error           reduce using rule 4 (statement -> class_definition .)
    $end            reduce using rule 4 (statement -> class_definition .)
    RBRACE          reduce using rule 4 (statement -> class_definition .)
    SEMI            reduce using rule 4 (statement -> class_definition .)


state 5

    (5) statement -> struct_definition .

    FOR             reduce using rule 5 (statement -> struct_definition .)
    IF              reduce using rule 5 (statement -> struct_definition .)
    MATCH           reduce using rule 5 (statement -> struct_definition .)
    WHILE           reduce using rule 5 (statement -> struct_definition .)
    ID              reduce using rule 5 (statement -> struct_definition .)
    ASYNC           reduce using rule 5 (statement -> struct_definition .)
    FN              reduce using rule 5 (statement -> struct_definition .)
    CLASS           reduce using rule 5 (statement -> struct_definition .)
    ENUM            reduce using rule 5 (statement -> struct_definition .)
    NAMESPACE       reduce using rule 5 (statement -> struct_definition .)
    INTERFACE       reduce using rule 5 (statement -> struct_definition .)
    RETURN          reduce using rule 5 (statement -> struct_definition .)
    TRUE            reduce using rule 5 (statement -> struct_definition .)
    FALSE           reduce using rule 5 (statement -> struct_definition .)
    NOT             reduce using rule 5 (statement -> struct_definition .)
    LPAREN          reduce using rule 5 (statement -> struct_definition .)
    AWAIT           reduce using rule 5 (statement -> struct_definition .)
    NUMBER          reduce using rule 5 (statement -> struct_definition .)
    REF             reduce using rule 5 (statement -> struct_definition .)
    POINTER         reduce using rule 5 (statement -> struct_definition .)
    error           reduce using rule 5 (statement -> struct_definition .)
    $end            reduce using rule 5 (statement -> struct_definition .)
    RBRACE          reduce using rule 5 (statement -> struct_definition .)
    SEMI            reduce using rule 5 (statement -> struct_definition .)


state 6

    (6) statement -> enum_definition .

    FOR             reduce using rule 6 (statement -> enum_definition .)
    IF              reduce using rule 6 (statement -> enum_definition .)
    MATCH           reduce using rule 6 (statement -> enum_definition .)
    WHILE           reduce using rule 6 (statement -> enum_definition .)
    ID              reduce using rule 6 (statement -> enum_definition .)
    ASYNC           reduce using rule 6 (statement -> enum_definition .)
    FN              reduce using rule 6 (statement -> enum_definition .)
    CLASS           reduce using rule 6 (statement -> enum_definition .)
    ENUM            reduce using rule 6 (statement -> enum_definition .)
    NAMESPACE       reduce using rule 6 (statement -> enum_definition .)
    INTERFACE       reduce using rule 6 (statement -> enum_definition .)
    RETURN          reduce using rule 6 (statement -> enum_definition .)
    TRUE            reduce using rule 6 (statement -> enum_definition .)
    FALSE           reduce using rule 6 (statement -> enum_definition .)
    NOT             reduce using rule 6 (statement -> enum_definition .)
    LPAREN          reduce using rule 6 (statement -> enum_definition .)
    AWAIT           reduce using rule 6 (statement -> enum_definition .)
    NUMBER          reduce using rule 6 (statement -> enum_definition .)
    REF             reduce using rule 6 (statement -> enum_definition .)
    POINTER         reduce using rule 6 (statement -> enum_definition .)
    error           reduce using rule 6 (statement -> enum_definition .)
    $end            reduce using rule 6 (statement -> enum_definition .)
    RBRACE          reduce using rule 6 (statement -> enum_definition .)
    SEMI            reduce using rule 6 (statement -> enum_definition .)


state 7

    (7) statement -> namespace_definition .

    FOR             reduce using rule 7 (statement -> namespace_definition .)
    IF              reduce using rule 7 (statement -> namespace_definition .)
    MATCH           reduce using rule 7 (statement -> namespace_definition .)
    WHILE           reduce using rule 7 (statement -> namespace_definition .)
    ID              reduce using rule 7 (statement -> namespace_definition .)
    ASYNC           reduce using rule 7 (statement -> namespace_definition .)
    FN              reduce using rule 7 (statement -> namespace_definition .)
    CLASS           reduce using rule 7 (statement -> namespace_definition .)
    ENUM            reduce using rule 7 (statement -> namespace_definition .)
    NAMESPACE       reduce using rule 7 (statement -> namespace_definition .)
    INTERFACE       reduce using rule 7 (statement -> namespace_definition .)
    RETURN          reduce using rule 7 (statement -> namespace_definition .)
    TRUE            reduce using rule 7 (statement -> namespace_definition .)
    FALSE           reduce using rule 7 (statement -> namespace_definition .)
    NOT             reduce using rule 7 (statement -> namespace_definition .)
    LPAREN          reduce using rule 7 (statement -> namespace_definition .)
    AWAIT           reduce using rule 7 (statement -> namespace_definition .)
    NUMBER          reduce using rule 7 (statement -> namespace_definition .)
    REF             reduce using rule 7 (statement -> namespace_definition .)
    POINTER         reduce using rule 7 (statement -> namespace_definition .)
    error           reduce using rule 7 (statement -> namespace_definition .)
    $end            reduce using rule 7 (statement -> namespace_definition .)
    RBRACE          reduce using rule 7 (statement -> namespace_definition .)
    SEMI            reduce using rule 7 (statement -> namespace_definition .)


state 8

    (8) statement -> variable_declaration . SEMI
    (97) statement -> variable_declaration .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 36
    FOR             reduce using rule 97 (statement -> variable_declaration .)
    IF              reduce using rule 97 (statement -> variable_declaration .)
    MATCH           reduce using rule 97 (statement -> variable_declaration .)
    WHILE           reduce using rule 97 (statement -> variable_declaration .)
    ID              reduce using rule 97 (statement -> variable_declaration .)
    ASYNC           reduce using rule 97 (statement -> variable_declaration .)
    FN              reduce using rule 97 (statement -> variable_declaration .)
    CLASS           reduce using rule 97 (statement -> variable_declaration .)
    ENUM            reduce using rule 97 (statement -> variable_declaration .)
    NAMESPACE       reduce using rule 97 (statement -> variable_declaration .)
    INTERFACE       reduce using rule 97 (statement -> variable_declaration .)
    RETURN          reduce using rule 97 (statement -> variable_declaration .)
    TRUE            reduce using rule 97 (statement -> variable_declaration .)
    FALSE           reduce using rule 97 (statement -> variable_declaration .)
    NOT             reduce using rule 97 (statement -> variable_declaration .)
    LPAREN          reduce using rule 97 (statement -> variable_declaration .)
    AWAIT           reduce using rule 97 (statement -> variable_declaration .)
    NUMBER          reduce using rule 97 (statement -> variable_declaration .)
    REF             reduce using rule 97 (statement -> variable_declaration .)
    POINTER         reduce using rule 97 (statement -> variable_declaration .)
    error           reduce using rule 97 (statement -> variable_declaration .)
    $end            reduce using rule 97 (statement -> variable_declaration .)
    RBRACE          reduce using rule 97 (statement -> variable_declaration .)

  ! SEMI            [ reduce using rule 97 (statement -> variable_declaration .) ]


state 9

    (9) statement -> interface_definition .

    FOR             reduce using rule 9 (statement -> interface_definition .)
    IF              reduce using rule 9 (statement -> interface_definition .)
    MATCH           reduce using rule 9 (statement -> interface_definition .)
    WHILE           reduce using rule 9 (statement -> interface_definition .)
    ID              reduce using rule 9 (statement -> interface_definition .)
    ASYNC           reduce using rule 9 (statement -> interface_definition .)
    FN              reduce using rule 9 (statement -> interface_definition .)
    CLASS           reduce using rule 9 (statement -> interface_definition .)
    ENUM            reduce using rule 9 (statement -> interface_definition .)
    NAMESPACE       reduce using rule 9 (statement -> interface_definition .)
    INTERFACE       reduce using rule 9 (statement -> interface_definition .)
    RETURN          reduce using rule 9 (statement -> interface_definition .)
    TRUE            reduce using rule 9 (statement -> interface_definition .)
    FALSE           reduce using rule 9 (statement -> interface_definition .)
    NOT             reduce using rule 9 (statement -> interface_definition .)
    LPAREN          reduce using rule 9 (statement -> interface_definition .)
    AWAIT           reduce using rule 9 (statement -> interface_definition .)
    NUMBER          reduce using rule 9 (statement -> interface_definition .)
    REF             reduce using rule 9 (statement -> interface_definition .)
    POINTER         reduce using rule 9 (statement -> interface_definition .)
    error           reduce using rule 9 (statement -> interface_definition .)
    $end            reduce using rule 9 (statement -> interface_definition .)
    RBRACE          reduce using rule 9 (statement -> interface_definition .)
    SEMI            reduce using rule 9 (statement -> interface_definition .)


state 10

    (10) statement -> return_statement . SEMI

    SEMI            shift and go to state 37


state 11

    (48) statement -> FOR . ID IN expression RANGE expression LBRACE program RBRACE

    ID              shift and go to state 38


state 12

    (98) statement -> ID . ASSIGN expression
    (55) expression -> ID . LPAREN arg_list_opt RPAREN
    (84) expression -> ID .
    (35) type_specifier -> ID .
    (17) type_with_generics -> ID . LANGLE type_list RANGLE
    (18) type_with_generics -> ID . empty
    (82) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 35 (type_specifier -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 35 (type_specifier -> ID .)
    ASSIGN          shift and go to state 39
    LPAREN          shift and go to state 40
    AND             reduce using rule 84 (expression -> ID .)
    OR              reduce using rule 84 (expression -> ID .)
    EQ              reduce using rule 84 (expression -> ID .)
    NEQ             reduce using rule 84 (expression -> ID .)
    LTHEN           reduce using rule 84 (expression -> ID .)
    RTHEN           reduce using rule 84 (expression -> ID .)
    LEQ             reduce using rule 84 (expression -> ID .)
    GEQ             reduce using rule 84 (expression -> ID .)
    PLUS            reduce using rule 84 (expression -> ID .)
    MINUS           reduce using rule 84 (expression -> ID .)
    TIMES           reduce using rule 84 (expression -> ID .)
    DIVIDE          reduce using rule 84 (expression -> ID .)
    MOD             reduce using rule 84 (expression -> ID .)
    FOR             reduce using rule 84 (expression -> ID .)
    IF              reduce using rule 84 (expression -> ID .)
    MATCH           reduce using rule 84 (expression -> ID .)
    WHILE           reduce using rule 84 (expression -> ID .)
    ASYNC           reduce using rule 84 (expression -> ID .)
    FN              reduce using rule 84 (expression -> ID .)
    CLASS           reduce using rule 84 (expression -> ID .)
    ENUM            reduce using rule 84 (expression -> ID .)
    NAMESPACE       reduce using rule 84 (expression -> ID .)
    INTERFACE       reduce using rule 84 (expression -> ID .)
    RETURN          reduce using rule 84 (expression -> ID .)
    TRUE            reduce using rule 84 (expression -> ID .)
    FALSE           reduce using rule 84 (expression -> ID .)
    NOT             reduce using rule 84 (expression -> ID .)
    AWAIT           reduce using rule 84 (expression -> ID .)
    NUMBER          reduce using rule 84 (expression -> ID .)
    REF             reduce using rule 84 (expression -> ID .)
    POINTER         reduce using rule 84 (expression -> ID .)
    error           reduce using rule 84 (expression -> ID .)
    $end            reduce using rule 84 (expression -> ID .)
    RBRACE          reduce using rule 84 (expression -> ID .)
    SEMI            reduce using rule 84 (expression -> ID .)
    ID              reduce using rule 35 (type_specifier -> ID .)
    LANGLE          shift and go to state 41

  ! ID              [ reduce using rule 84 (expression -> ID .) ]
  ! LPAREN          [ reduce using rule 84 (expression -> ID .) ]
  ! ID              [ reduce using rule 82 (empty -> .) ]

    empty                          shift and go to state 42

state 13

    (99) statement -> expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    FOR             reduce using rule 99 (statement -> expression .)
    IF              reduce using rule 99 (statement -> expression .)
    MATCH           reduce using rule 99 (statement -> expression .)
    WHILE           reduce using rule 99 (statement -> expression .)
    ID              reduce using rule 99 (statement -> expression .)
    ASYNC           reduce using rule 99 (statement -> expression .)
    FN              reduce using rule 99 (statement -> expression .)
    CLASS           reduce using rule 99 (statement -> expression .)
    ENUM            reduce using rule 99 (statement -> expression .)
    NAMESPACE       reduce using rule 99 (statement -> expression .)
    INTERFACE       reduce using rule 99 (statement -> expression .)
    RETURN          reduce using rule 99 (statement -> expression .)
    TRUE            reduce using rule 99 (statement -> expression .)
    FALSE           reduce using rule 99 (statement -> expression .)
    NOT             reduce using rule 99 (statement -> expression .)
    LPAREN          reduce using rule 99 (statement -> expression .)
    AWAIT           reduce using rule 99 (statement -> expression .)
    NUMBER          reduce using rule 99 (statement -> expression .)
    REF             reduce using rule 99 (statement -> expression .)
    POINTER         reduce using rule 99 (statement -> expression .)
    error           reduce using rule 99 (statement -> expression .)
    $end            reduce using rule 99 (statement -> expression .)
    RBRACE          reduce using rule 99 (statement -> expression .)
    SEMI            reduce using rule 99 (statement -> expression .)
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55


state 14

    (61) statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> IF . LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE

    LPAREN          shift and go to state 56


state 15

    (54) expression -> LPAREN . expression RPAREN
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 57

state 16

    (63) statement -> MATCH . LPAREN expression RPAREN LBRACE match_cases RBRACE

    LPAREN          shift and go to state 61


state 17

    (81) statement -> WHILE . LPAREN expression RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 62


state 18

    (79) function_definition -> ASYNC . FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE

    FN              shift and go to state 63


state 19

    (94) function_definition -> FN . type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> FN . type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    ID              shift and go to state 65

    type_with_generics             shift and go to state 64

state 20

    (36) type_specifier -> type_with_generics .

    ID              reduce using rule 36 (type_specifier -> type_with_generics .)
    RANGLE          reduce using rule 36 (type_specifier -> type_with_generics .)
    COMMA           reduce using rule 36 (type_specifier -> type_with_generics .)
    LPAREN          reduce using rule 36 (type_specifier -> type_with_generics .)
    LBRACE          reduce using rule 36 (type_specifier -> type_with_generics .)


state 21

    (96) class_definition -> CLASS . type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> CLASS . type_with_generics extends_opt LBRACE struct_body RBRACE
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    ID              shift and go to state 65

    type_with_generics             shift and go to state 66

state 22

    (110) enum_definition -> ENUM . type_with_generics LBRACE enum_body RBRACE
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    ID              shift and go to state 65

    type_with_generics             shift and go to state 67

state 23

    (13) namespace_definition -> NAMESPACE . ID LBRACE program RBRACE
    (14) namespace_definition -> NAMESPACE . ID LBRACE RBRACE

    ID              shift and go to state 68


state 24

    (101) variable_declaration -> type_specifier . ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> type_specifier . ID SEMI
    (103) variable_declaration -> type_specifier . ID ASSIGN expression SEMI
    (104) variable_declaration -> type_specifier . ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> type_specifier . ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI

    ID              shift and go to state 69


state 25

    (106) interface_definition -> INTERFACE . type_with_generics LBRACE interface_body RBRACE
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    ID              shift and go to state 65

    type_with_generics             shift and go to state 70

state 26

    (15) return_statement -> RETURN . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 71

state 27

    (11) expression -> TRUE .

    AND             reduce using rule 11 (expression -> TRUE .)
    OR              reduce using rule 11 (expression -> TRUE .)
    EQ              reduce using rule 11 (expression -> TRUE .)
    NEQ             reduce using rule 11 (expression -> TRUE .)
    LTHEN           reduce using rule 11 (expression -> TRUE .)
    RTHEN           reduce using rule 11 (expression -> TRUE .)
    LEQ             reduce using rule 11 (expression -> TRUE .)
    GEQ             reduce using rule 11 (expression -> TRUE .)
    PLUS            reduce using rule 11 (expression -> TRUE .)
    MINUS           reduce using rule 11 (expression -> TRUE .)
    TIMES           reduce using rule 11 (expression -> TRUE .)
    DIVIDE          reduce using rule 11 (expression -> TRUE .)
    MOD             reduce using rule 11 (expression -> TRUE .)
    FOR             reduce using rule 11 (expression -> TRUE .)
    IF              reduce using rule 11 (expression -> TRUE .)
    MATCH           reduce using rule 11 (expression -> TRUE .)
    WHILE           reduce using rule 11 (expression -> TRUE .)
    ID              reduce using rule 11 (expression -> TRUE .)
    ASYNC           reduce using rule 11 (expression -> TRUE .)
    FN              reduce using rule 11 (expression -> TRUE .)
    CLASS           reduce using rule 11 (expression -> TRUE .)
    ENUM            reduce using rule 11 (expression -> TRUE .)
    NAMESPACE       reduce using rule 11 (expression -> TRUE .)
    INTERFACE       reduce using rule 11 (expression -> TRUE .)
    RETURN          reduce using rule 11 (expression -> TRUE .)
    TRUE            reduce using rule 11 (expression -> TRUE .)
    FALSE           reduce using rule 11 (expression -> TRUE .)
    NOT             reduce using rule 11 (expression -> TRUE .)
    LPAREN          reduce using rule 11 (expression -> TRUE .)
    AWAIT           reduce using rule 11 (expression -> TRUE .)
    NUMBER          reduce using rule 11 (expression -> TRUE .)
    REF             reduce using rule 11 (expression -> TRUE .)
    POINTER         reduce using rule 11 (expression -> TRUE .)
    error           reduce using rule 11 (expression -> TRUE .)
    $end            reduce using rule 11 (expression -> TRUE .)
    RPAREN          reduce using rule 11 (expression -> TRUE .)
    SEMI            reduce using rule 11 (expression -> TRUE .)
    RBRACE          reduce using rule 11 (expression -> TRUE .)
    COMMA           reduce using rule 11 (expression -> TRUE .)
    RANGE           reduce using rule 11 (expression -> TRUE .)
    LBRACE          reduce using rule 11 (expression -> TRUE .)


state 28

    (12) expression -> FALSE .

    AND             reduce using rule 12 (expression -> FALSE .)
    OR              reduce using rule 12 (expression -> FALSE .)
    EQ              reduce using rule 12 (expression -> FALSE .)
    NEQ             reduce using rule 12 (expression -> FALSE .)
    LTHEN           reduce using rule 12 (expression -> FALSE .)
    RTHEN           reduce using rule 12 (expression -> FALSE .)
    LEQ             reduce using rule 12 (expression -> FALSE .)
    GEQ             reduce using rule 12 (expression -> FALSE .)
    PLUS            reduce using rule 12 (expression -> FALSE .)
    MINUS           reduce using rule 12 (expression -> FALSE .)
    TIMES           reduce using rule 12 (expression -> FALSE .)
    DIVIDE          reduce using rule 12 (expression -> FALSE .)
    MOD             reduce using rule 12 (expression -> FALSE .)
    FOR             reduce using rule 12 (expression -> FALSE .)
    IF              reduce using rule 12 (expression -> FALSE .)
    MATCH           reduce using rule 12 (expression -> FALSE .)
    WHILE           reduce using rule 12 (expression -> FALSE .)
    ID              reduce using rule 12 (expression -> FALSE .)
    ASYNC           reduce using rule 12 (expression -> FALSE .)
    FN              reduce using rule 12 (expression -> FALSE .)
    CLASS           reduce using rule 12 (expression -> FALSE .)
    ENUM            reduce using rule 12 (expression -> FALSE .)
    NAMESPACE       reduce using rule 12 (expression -> FALSE .)
    INTERFACE       reduce using rule 12 (expression -> FALSE .)
    RETURN          reduce using rule 12 (expression -> FALSE .)
    TRUE            reduce using rule 12 (expression -> FALSE .)
    FALSE           reduce using rule 12 (expression -> FALSE .)
    NOT             reduce using rule 12 (expression -> FALSE .)
    LPAREN          reduce using rule 12 (expression -> FALSE .)
    AWAIT           reduce using rule 12 (expression -> FALSE .)
    NUMBER          reduce using rule 12 (expression -> FALSE .)
    REF             reduce using rule 12 (expression -> FALSE .)
    POINTER         reduce using rule 12 (expression -> FALSE .)
    error           reduce using rule 12 (expression -> FALSE .)
    $end            reduce using rule 12 (expression -> FALSE .)
    RPAREN          reduce using rule 12 (expression -> FALSE .)
    SEMI            reduce using rule 12 (expression -> FALSE .)
    RBRACE          reduce using rule 12 (expression -> FALSE .)
    COMMA           reduce using rule 12 (expression -> FALSE .)
    RANGE           reduce using rule 12 (expression -> FALSE .)
    LBRACE          reduce using rule 12 (expression -> FALSE .)


state 29

    (47) expression -> NOT . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 72

state 30

    (80) expression -> AWAIT . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 73

state 31

    (83) expression -> NUMBER .

    AND             reduce using rule 83 (expression -> NUMBER .)
    OR              reduce using rule 83 (expression -> NUMBER .)
    EQ              reduce using rule 83 (expression -> NUMBER .)
    NEQ             reduce using rule 83 (expression -> NUMBER .)
    LTHEN           reduce using rule 83 (expression -> NUMBER .)
    RTHEN           reduce using rule 83 (expression -> NUMBER .)
    LEQ             reduce using rule 83 (expression -> NUMBER .)
    GEQ             reduce using rule 83 (expression -> NUMBER .)
    PLUS            reduce using rule 83 (expression -> NUMBER .)
    MINUS           reduce using rule 83 (expression -> NUMBER .)
    TIMES           reduce using rule 83 (expression -> NUMBER .)
    DIVIDE          reduce using rule 83 (expression -> NUMBER .)
    MOD             reduce using rule 83 (expression -> NUMBER .)
    FOR             reduce using rule 83 (expression -> NUMBER .)
    IF              reduce using rule 83 (expression -> NUMBER .)
    MATCH           reduce using rule 83 (expression -> NUMBER .)
    WHILE           reduce using rule 83 (expression -> NUMBER .)
    ID              reduce using rule 83 (expression -> NUMBER .)
    ASYNC           reduce using rule 83 (expression -> NUMBER .)
    FN              reduce using rule 83 (expression -> NUMBER .)
    CLASS           reduce using rule 83 (expression -> NUMBER .)
    ENUM            reduce using rule 83 (expression -> NUMBER .)
    NAMESPACE       reduce using rule 83 (expression -> NUMBER .)
    INTERFACE       reduce using rule 83 (expression -> NUMBER .)
    RETURN          reduce using rule 83 (expression -> NUMBER .)
    TRUE            reduce using rule 83 (expression -> NUMBER .)
    FALSE           reduce using rule 83 (expression -> NUMBER .)
    NOT             reduce using rule 83 (expression -> NUMBER .)
    LPAREN          reduce using rule 83 (expression -> NUMBER .)
    AWAIT           reduce using rule 83 (expression -> NUMBER .)
    NUMBER          reduce using rule 83 (expression -> NUMBER .)
    REF             reduce using rule 83 (expression -> NUMBER .)
    POINTER         reduce using rule 83 (expression -> NUMBER .)
    error           reduce using rule 83 (expression -> NUMBER .)
    $end            reduce using rule 83 (expression -> NUMBER .)
    RPAREN          reduce using rule 83 (expression -> NUMBER .)
    SEMI            reduce using rule 83 (expression -> NUMBER .)
    RBRACE          reduce using rule 83 (expression -> NUMBER .)
    COMMA           reduce using rule 83 (expression -> NUMBER .)
    RANGE           reduce using rule 83 (expression -> NUMBER .)
    LBRACE          reduce using rule 83 (expression -> NUMBER .)


state 32

    (85) expression -> REF . ID
    (38) type_specifier -> REF . type_specifier
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    ID              shift and go to state 75
    POINTER         shift and go to state 77
    REF             shift and go to state 74

    type_specifier                 shift and go to state 76
    type_with_generics             shift and go to state 20

state 33

    (86) expression -> POINTER . expression
    (37) type_specifier -> POINTER . type_specifier
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 80
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    expression                     shift and go to state 78
    type_specifier                 shift and go to state 79
    type_with_generics             shift and go to state 20

state 34

    (100) expression -> error .

    AND             reduce using rule 100 (expression -> error .)
    OR              reduce using rule 100 (expression -> error .)
    EQ              reduce using rule 100 (expression -> error .)
    NEQ             reduce using rule 100 (expression -> error .)
    LTHEN           reduce using rule 100 (expression -> error .)
    RTHEN           reduce using rule 100 (expression -> error .)
    LEQ             reduce using rule 100 (expression -> error .)
    GEQ             reduce using rule 100 (expression -> error .)
    PLUS            reduce using rule 100 (expression -> error .)
    MINUS           reduce using rule 100 (expression -> error .)
    TIMES           reduce using rule 100 (expression -> error .)
    DIVIDE          reduce using rule 100 (expression -> error .)
    MOD             reduce using rule 100 (expression -> error .)
    FOR             reduce using rule 100 (expression -> error .)
    IF              reduce using rule 100 (expression -> error .)
    MATCH           reduce using rule 100 (expression -> error .)
    WHILE           reduce using rule 100 (expression -> error .)
    ID              reduce using rule 100 (expression -> error .)
    ASYNC           reduce using rule 100 (expression -> error .)
    FN              reduce using rule 100 (expression -> error .)
    CLASS           reduce using rule 100 (expression -> error .)
    ENUM            reduce using rule 100 (expression -> error .)
    NAMESPACE       reduce using rule 100 (expression -> error .)
    INTERFACE       reduce using rule 100 (expression -> error .)
    RETURN          reduce using rule 100 (expression -> error .)
    TRUE            reduce using rule 100 (expression -> error .)
    FALSE           reduce using rule 100 (expression -> error .)
    NOT             reduce using rule 100 (expression -> error .)
    LPAREN          reduce using rule 100 (expression -> error .)
    AWAIT           reduce using rule 100 (expression -> error .)
    NUMBER          reduce using rule 100 (expression -> error .)
    REF             reduce using rule 100 (expression -> error .)
    POINTER         reduce using rule 100 (expression -> error .)
    error           reduce using rule 100 (expression -> error .)
    $end            reduce using rule 100 (expression -> error .)
    RPAREN          reduce using rule 100 (expression -> error .)
    SEMI            reduce using rule 100 (expression -> error .)
    RBRACE          reduce using rule 100 (expression -> error .)
    COMMA           reduce using rule 100 (expression -> error .)
    RANGE           reduce using rule 100 (expression -> error .)
    LBRACE          reduce using rule 100 (expression -> error .)


state 35

    (1) program -> program statement .

    FOR             reduce using rule 1 (program -> program statement .)
    IF              reduce using rule 1 (program -> program statement .)
    MATCH           reduce using rule 1 (program -> program statement .)
    WHILE           reduce using rule 1 (program -> program statement .)
    ID              reduce using rule 1 (program -> program statement .)
    ASYNC           reduce using rule 1 (program -> program statement .)
    FN              reduce using rule 1 (program -> program statement .)
    CLASS           reduce using rule 1 (program -> program statement .)
    ENUM            reduce using rule 1 (program -> program statement .)
    NAMESPACE       reduce using rule 1 (program -> program statement .)
    INTERFACE       reduce using rule 1 (program -> program statement .)
    RETURN          reduce using rule 1 (program -> program statement .)
    TRUE            reduce using rule 1 (program -> program statement .)
    FALSE           reduce using rule 1 (program -> program statement .)
    NOT             reduce using rule 1 (program -> program statement .)
    LPAREN          reduce using rule 1 (program -> program statement .)
    AWAIT           reduce using rule 1 (program -> program statement .)
    NUMBER          reduce using rule 1 (program -> program statement .)
    REF             reduce using rule 1 (program -> program statement .)
    POINTER         reduce using rule 1 (program -> program statement .)
    error           reduce using rule 1 (program -> program statement .)
    $end            reduce using rule 1 (program -> program statement .)
    RBRACE          reduce using rule 1 (program -> program statement .)
    SEMI            reduce using rule 1 (program -> program statement .)


state 36

    (8) statement -> variable_declaration SEMI .

    FOR             reduce using rule 8 (statement -> variable_declaration SEMI .)
    IF              reduce using rule 8 (statement -> variable_declaration SEMI .)
    MATCH           reduce using rule 8 (statement -> variable_declaration SEMI .)
    WHILE           reduce using rule 8 (statement -> variable_declaration SEMI .)
    ID              reduce using rule 8 (statement -> variable_declaration SEMI .)
    ASYNC           reduce using rule 8 (statement -> variable_declaration SEMI .)
    FN              reduce using rule 8 (statement -> variable_declaration SEMI .)
    CLASS           reduce using rule 8 (statement -> variable_declaration SEMI .)
    ENUM            reduce using rule 8 (statement -> variable_declaration SEMI .)
    NAMESPACE       reduce using rule 8 (statement -> variable_declaration SEMI .)
    INTERFACE       reduce using rule 8 (statement -> variable_declaration SEMI .)
    RETURN          reduce using rule 8 (statement -> variable_declaration SEMI .)
    TRUE            reduce using rule 8 (statement -> variable_declaration SEMI .)
    FALSE           reduce using rule 8 (statement -> variable_declaration SEMI .)
    NOT             reduce using rule 8 (statement -> variable_declaration SEMI .)
    LPAREN          reduce using rule 8 (statement -> variable_declaration SEMI .)
    AWAIT           reduce using rule 8 (statement -> variable_declaration SEMI .)
    NUMBER          reduce using rule 8 (statement -> variable_declaration SEMI .)
    REF             reduce using rule 8 (statement -> variable_declaration SEMI .)
    POINTER         reduce using rule 8 (statement -> variable_declaration SEMI .)
    error           reduce using rule 8 (statement -> variable_declaration SEMI .)
    $end            reduce using rule 8 (statement -> variable_declaration SEMI .)
    RBRACE          reduce using rule 8 (statement -> variable_declaration SEMI .)
    SEMI            reduce using rule 8 (statement -> variable_declaration SEMI .)


state 37

    (10) statement -> return_statement SEMI .

    FOR             reduce using rule 10 (statement -> return_statement SEMI .)
    IF              reduce using rule 10 (statement -> return_statement SEMI .)
    MATCH           reduce using rule 10 (statement -> return_statement SEMI .)
    WHILE           reduce using rule 10 (statement -> return_statement SEMI .)
    ID              reduce using rule 10 (statement -> return_statement SEMI .)
    ASYNC           reduce using rule 10 (statement -> return_statement SEMI .)
    FN              reduce using rule 10 (statement -> return_statement SEMI .)
    CLASS           reduce using rule 10 (statement -> return_statement SEMI .)
    ENUM            reduce using rule 10 (statement -> return_statement SEMI .)
    NAMESPACE       reduce using rule 10 (statement -> return_statement SEMI .)
    INTERFACE       reduce using rule 10 (statement -> return_statement SEMI .)
    RETURN          reduce using rule 10 (statement -> return_statement SEMI .)
    TRUE            reduce using rule 10 (statement -> return_statement SEMI .)
    FALSE           reduce using rule 10 (statement -> return_statement SEMI .)
    NOT             reduce using rule 10 (statement -> return_statement SEMI .)
    LPAREN          reduce using rule 10 (statement -> return_statement SEMI .)
    AWAIT           reduce using rule 10 (statement -> return_statement SEMI .)
    NUMBER          reduce using rule 10 (statement -> return_statement SEMI .)
    REF             reduce using rule 10 (statement -> return_statement SEMI .)
    POINTER         reduce using rule 10 (statement -> return_statement SEMI .)
    error           reduce using rule 10 (statement -> return_statement SEMI .)
    $end            reduce using rule 10 (statement -> return_statement SEMI .)
    RBRACE          reduce using rule 10 (statement -> return_statement SEMI .)
    SEMI            reduce using rule 10 (statement -> return_statement SEMI .)


state 38

    (48) statement -> FOR ID . IN expression RANGE expression LBRACE program RBRACE

    IN              shift and go to state 81


state 39

    (98) statement -> ID ASSIGN . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 82

state 40

    (55) expression -> ID LPAREN . arg_list_opt RPAREN
    (56) arg_list_opt -> . arg_list
    (57) arg_list_opt -> . empty
    (58) arg_list -> . arg_list COMMA expression
    (59) arg_list -> . expression
    (60) arg_list -> . empty
    (82) empty -> .
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    RPAREN          reduce using rule 82 (empty -> .)
    COMMA           reduce using rule 82 (empty -> .)
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    arg_list_opt                   shift and go to state 83
    arg_list                       shift and go to state 84
    empty                          shift and go to state 85
    expression                     shift and go to state 86

state 41

    (17) type_with_generics -> ID LANGLE . type_list RANGLE
    (19) type_list -> . type_list COMMA type_specifier
    (20) type_list -> . type_specifier
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    ID              shift and go to state 87
    POINTER         shift and go to state 77
    REF             shift and go to state 74

    type_list                      shift and go to state 88
    type_specifier                 shift and go to state 89
    type_with_generics             shift and go to state 20

state 42

    (18) type_with_generics -> ID empty .

    ID              reduce using rule 18 (type_with_generics -> ID empty .)
    LPAREN          reduce using rule 18 (type_with_generics -> ID empty .)
    EXTENDS         reduce using rule 18 (type_with_generics -> ID empty .)
    LBRACE          reduce using rule 18 (type_with_generics -> ID empty .)
    RANGLE          reduce using rule 18 (type_with_generics -> ID empty .)
    COMMA           reduce using rule 18 (type_with_generics -> ID empty .)


state 43

    (39) expression -> expression AND . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 90

state 44

    (40) expression -> expression OR . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 91

state 45

    (41) expression -> expression EQ . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 92

state 46

    (42) expression -> expression NEQ . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 93

state 47

    (43) expression -> expression LTHEN . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 94

state 48

    (44) expression -> expression RTHEN . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 95

state 49

    (45) expression -> expression LEQ . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 96

state 50

    (46) expression -> expression GEQ . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 97

state 51

    (49) expression -> expression PLUS . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 98

state 52

    (50) expression -> expression MINUS . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 99

state 53

    (51) expression -> expression TIMES . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 100

state 54

    (52) expression -> expression DIVIDE . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 101

state 55

    (53) expression -> expression MOD . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 102

state 56

    (61) statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE
    (62) statement -> IF LPAREN . expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 103

state 57

    (54) expression -> LPAREN expression . RPAREN
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    RPAREN          shift and go to state 104
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55


state 58

    (55) expression -> ID . LPAREN arg_list_opt RPAREN
    (84) expression -> ID .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 40
    RPAREN          reduce using rule 84 (expression -> ID .)
    AND             reduce using rule 84 (expression -> ID .)
    OR              reduce using rule 84 (expression -> ID .)
    EQ              reduce using rule 84 (expression -> ID .)
    NEQ             reduce using rule 84 (expression -> ID .)
    LTHEN           reduce using rule 84 (expression -> ID .)
    RTHEN           reduce using rule 84 (expression -> ID .)
    LEQ             reduce using rule 84 (expression -> ID .)
    GEQ             reduce using rule 84 (expression -> ID .)
    PLUS            reduce using rule 84 (expression -> ID .)
    MINUS           reduce using rule 84 (expression -> ID .)
    TIMES           reduce using rule 84 (expression -> ID .)
    DIVIDE          reduce using rule 84 (expression -> ID .)
    MOD             reduce using rule 84 (expression -> ID .)
    SEMI            reduce using rule 84 (expression -> ID .)
    FOR             reduce using rule 84 (expression -> ID .)
    IF              reduce using rule 84 (expression -> ID .)
    MATCH           reduce using rule 84 (expression -> ID .)
    WHILE           reduce using rule 84 (expression -> ID .)
    ID              reduce using rule 84 (expression -> ID .)
    ASYNC           reduce using rule 84 (expression -> ID .)
    FN              reduce using rule 84 (expression -> ID .)
    CLASS           reduce using rule 84 (expression -> ID .)
    ENUM            reduce using rule 84 (expression -> ID .)
    NAMESPACE       reduce using rule 84 (expression -> ID .)
    INTERFACE       reduce using rule 84 (expression -> ID .)
    RETURN          reduce using rule 84 (expression -> ID .)
    TRUE            reduce using rule 84 (expression -> ID .)
    FALSE           reduce using rule 84 (expression -> ID .)
    NOT             reduce using rule 84 (expression -> ID .)
    AWAIT           reduce using rule 84 (expression -> ID .)
    NUMBER          reduce using rule 84 (expression -> ID .)
    REF             reduce using rule 84 (expression -> ID .)
    POINTER         reduce using rule 84 (expression -> ID .)
    error           reduce using rule 84 (expression -> ID .)
    $end            reduce using rule 84 (expression -> ID .)
    RBRACE          reduce using rule 84 (expression -> ID .)
    COMMA           reduce using rule 84 (expression -> ID .)
    RANGE           reduce using rule 84 (expression -> ID .)
    LBRACE          reduce using rule 84 (expression -> ID .)

  ! LPAREN          [ reduce using rule 84 (expression -> ID .) ]


state 59

    (85) expression -> REF . ID

    ID              shift and go to state 105


state 60

    (86) expression -> POINTER . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 78

state 61

    (63) statement -> MATCH LPAREN . expression RPAREN LBRACE match_cases RBRACE
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 106

state 62

    (81) statement -> WHILE LPAREN . expression RPAREN LBRACE program RBRACE
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 107

state 63

    (79) function_definition -> ASYNC FN . ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE

    ID              shift and go to state 108


state 64

    (94) function_definition -> FN type_with_generics . LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> FN type_with_generics . LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE

    LPAREN          shift and go to state 109


state 65

    (17) type_with_generics -> ID . LANGLE type_list RANGLE
    (18) type_with_generics -> ID . empty
    (82) empty -> .

    LANGLE          shift and go to state 41
    LPAREN          reduce using rule 82 (empty -> .)
    EXTENDS         reduce using rule 82 (empty -> .)
    LBRACE          reduce using rule 82 (empty -> .)

    empty                          shift and go to state 42

state 66

    (96) class_definition -> CLASS type_with_generics . extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> CLASS type_with_generics . extends_opt LBRACE struct_body RBRACE
    (33) extends_opt -> . EXTENDS type_with_generics
    (34) extends_opt -> . empty
    (82) empty -> .

    EXTENDS         shift and go to state 111
    LBRACE          reduce using rule 82 (empty -> .)

    extends_opt                    shift and go to state 110
    empty                          shift and go to state 112

state 67

    (110) enum_definition -> ENUM type_with_generics . LBRACE enum_body RBRACE

    LBRACE          shift and go to state 113


state 68

    (13) namespace_definition -> NAMESPACE ID . LBRACE program RBRACE
    (14) namespace_definition -> NAMESPACE ID . LBRACE RBRACE

    LBRACE          shift and go to state 114


state 69

    (101) variable_declaration -> type_specifier ID . LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> type_specifier ID . SEMI
    (103) variable_declaration -> type_specifier ID . ASSIGN expression SEMI
    (104) variable_declaration -> type_specifier ID . LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> type_specifier ID . ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI

    LPAREN          shift and go to state 115
    SEMI            shift and go to state 116
    ASSIGN          shift and go to state 117
    LBRACE          shift and go to state 118


state 70

    (106) interface_definition -> INTERFACE type_with_generics . LBRACE interface_body RBRACE

    LBRACE          shift and go to state 119


state 71

    (15) return_statement -> RETURN expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    SEMI            reduce using rule 15 (return_statement -> RETURN expression .)
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55


state 72

    (47) expression -> NOT expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    FOR             reduce using rule 47 (expression -> NOT expression .)
    IF              reduce using rule 47 (expression -> NOT expression .)
    MATCH           reduce using rule 47 (expression -> NOT expression .)
    WHILE           reduce using rule 47 (expression -> NOT expression .)
    ID              reduce using rule 47 (expression -> NOT expression .)
    ASYNC           reduce using rule 47 (expression -> NOT expression .)
    FN              reduce using rule 47 (expression -> NOT expression .)
    CLASS           reduce using rule 47 (expression -> NOT expression .)
    ENUM            reduce using rule 47 (expression -> NOT expression .)
    NAMESPACE       reduce using rule 47 (expression -> NOT expression .)
    INTERFACE       reduce using rule 47 (expression -> NOT expression .)
    RETURN          reduce using rule 47 (expression -> NOT expression .)
    TRUE            reduce using rule 47 (expression -> NOT expression .)
    FALSE           reduce using rule 47 (expression -> NOT expression .)
    NOT             reduce using rule 47 (expression -> NOT expression .)
    LPAREN          reduce using rule 47 (expression -> NOT expression .)
    AWAIT           reduce using rule 47 (expression -> NOT expression .)
    NUMBER          reduce using rule 47 (expression -> NOT expression .)
    REF             reduce using rule 47 (expression -> NOT expression .)
    POINTER         reduce using rule 47 (expression -> NOT expression .)
    error           reduce using rule 47 (expression -> NOT expression .)
    $end            reduce using rule 47 (expression -> NOT expression .)
    RPAREN          reduce using rule 47 (expression -> NOT expression .)
    SEMI            reduce using rule 47 (expression -> NOT expression .)
    RBRACE          reduce using rule 47 (expression -> NOT expression .)
    COMMA           reduce using rule 47 (expression -> NOT expression .)
    RANGE           reduce using rule 47 (expression -> NOT expression .)
    LBRACE          reduce using rule 47 (expression -> NOT expression .)
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55

  ! AND             [ reduce using rule 47 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 47 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 47 (expression -> NOT expression .) ]
  ! NEQ             [ reduce using rule 47 (expression -> NOT expression .) ]
  ! LTHEN           [ reduce using rule 47 (expression -> NOT expression .) ]
  ! RTHEN           [ reduce using rule 47 (expression -> NOT expression .) ]
  ! LEQ             [ reduce using rule 47 (expression -> NOT expression .) ]
  ! GEQ             [ reduce using rule 47 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 47 (expression -> NOT expression .) ]


state 73

    (80) expression -> AWAIT expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    FOR             reduce using rule 80 (expression -> AWAIT expression .)
    IF              reduce using rule 80 (expression -> AWAIT expression .)
    MATCH           reduce using rule 80 (expression -> AWAIT expression .)
    WHILE           reduce using rule 80 (expression -> AWAIT expression .)
    ID              reduce using rule 80 (expression -> AWAIT expression .)
    ASYNC           reduce using rule 80 (expression -> AWAIT expression .)
    FN              reduce using rule 80 (expression -> AWAIT expression .)
    CLASS           reduce using rule 80 (expression -> AWAIT expression .)
    ENUM            reduce using rule 80 (expression -> AWAIT expression .)
    NAMESPACE       reduce using rule 80 (expression -> AWAIT expression .)
    INTERFACE       reduce using rule 80 (expression -> AWAIT expression .)
    RETURN          reduce using rule 80 (expression -> AWAIT expression .)
    TRUE            reduce using rule 80 (expression -> AWAIT expression .)
    FALSE           reduce using rule 80 (expression -> AWAIT expression .)
    NOT             reduce using rule 80 (expression -> AWAIT expression .)
    LPAREN          reduce using rule 80 (expression -> AWAIT expression .)
    AWAIT           reduce using rule 80 (expression -> AWAIT expression .)
    NUMBER          reduce using rule 80 (expression -> AWAIT expression .)
    REF             reduce using rule 80 (expression -> AWAIT expression .)
    POINTER         reduce using rule 80 (expression -> AWAIT expression .)
    error           reduce using rule 80 (expression -> AWAIT expression .)
    $end            reduce using rule 80 (expression -> AWAIT expression .)
    RPAREN          reduce using rule 80 (expression -> AWAIT expression .)
    SEMI            reduce using rule 80 (expression -> AWAIT expression .)
    RBRACE          reduce using rule 80 (expression -> AWAIT expression .)
    COMMA           reduce using rule 80 (expression -> AWAIT expression .)
    RANGE           reduce using rule 80 (expression -> AWAIT expression .)
    LBRACE          reduce using rule 80 (expression -> AWAIT expression .)
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55

  ! AND             [ reduce using rule 80 (expression -> AWAIT expression .) ]
  ! OR              [ reduce using rule 80 (expression -> AWAIT expression .) ]
  ! EQ              [ reduce using rule 80 (expression -> AWAIT expression .) ]
  ! NEQ             [ reduce using rule 80 (expression -> AWAIT expression .) ]
  ! LTHEN           [ reduce using rule 80 (expression -> AWAIT expression .) ]
  ! RTHEN           [ reduce using rule 80 (expression -> AWAIT expression .) ]
  ! LEQ             [ reduce using rule 80 (expression -> AWAIT expression .) ]
  ! GEQ             [ reduce using rule 80 (expression -> AWAIT expression .) ]
  ! PLUS            [ reduce using rule 80 (expression -> AWAIT expression .) ]
  ! MINUS           [ reduce using rule 80 (expression -> AWAIT expression .) ]
  ! TIMES           [ reduce using rule 80 (expression -> AWAIT expression .) ]
  ! DIVIDE          [ reduce using rule 80 (expression -> AWAIT expression .) ]
  ! MOD             [ reduce using rule 80 (expression -> AWAIT expression .) ]


state 74

    (38) type_specifier -> REF . type_specifier
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    ID              shift and go to state 87
    POINTER         shift and go to state 77
    REF             shift and go to state 74

    type_specifier                 shift and go to state 76
    type_with_generics             shift and go to state 20

state 75

    (85) expression -> REF ID .
    (35) type_specifier -> ID .
    (17) type_with_generics -> ID . LANGLE type_list RANGLE
    (18) type_with_generics -> ID . empty
    (82) empty -> .

  ! reduce/reduce conflict for ID resolved using rule 35 (type_specifier -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 35 (type_specifier -> ID .)
    AND             reduce using rule 85 (expression -> REF ID .)
    OR              reduce using rule 85 (expression -> REF ID .)
    EQ              reduce using rule 85 (expression -> REF ID .)
    NEQ             reduce using rule 85 (expression -> REF ID .)
    LTHEN           reduce using rule 85 (expression -> REF ID .)
    RTHEN           reduce using rule 85 (expression -> REF ID .)
    LEQ             reduce using rule 85 (expression -> REF ID .)
    GEQ             reduce using rule 85 (expression -> REF ID .)
    PLUS            reduce using rule 85 (expression -> REF ID .)
    MINUS           reduce using rule 85 (expression -> REF ID .)
    TIMES           reduce using rule 85 (expression -> REF ID .)
    DIVIDE          reduce using rule 85 (expression -> REF ID .)
    MOD             reduce using rule 85 (expression -> REF ID .)
    FOR             reduce using rule 85 (expression -> REF ID .)
    IF              reduce using rule 85 (expression -> REF ID .)
    MATCH           reduce using rule 85 (expression -> REF ID .)
    WHILE           reduce using rule 85 (expression -> REF ID .)
    ASYNC           reduce using rule 85 (expression -> REF ID .)
    FN              reduce using rule 85 (expression -> REF ID .)
    CLASS           reduce using rule 85 (expression -> REF ID .)
    ENUM            reduce using rule 85 (expression -> REF ID .)
    NAMESPACE       reduce using rule 85 (expression -> REF ID .)
    INTERFACE       reduce using rule 85 (expression -> REF ID .)
    RETURN          reduce using rule 85 (expression -> REF ID .)
    TRUE            reduce using rule 85 (expression -> REF ID .)
    FALSE           reduce using rule 85 (expression -> REF ID .)
    NOT             reduce using rule 85 (expression -> REF ID .)
    LPAREN          reduce using rule 85 (expression -> REF ID .)
    AWAIT           reduce using rule 85 (expression -> REF ID .)
    NUMBER          reduce using rule 85 (expression -> REF ID .)
    REF             reduce using rule 85 (expression -> REF ID .)
    POINTER         reduce using rule 85 (expression -> REF ID .)
    error           reduce using rule 85 (expression -> REF ID .)
    $end            reduce using rule 85 (expression -> REF ID .)
    RBRACE          reduce using rule 85 (expression -> REF ID .)
    SEMI            reduce using rule 85 (expression -> REF ID .)
    ID              reduce using rule 35 (type_specifier -> ID .)
    LANGLE          shift and go to state 41

  ! ID              [ reduce using rule 85 (expression -> REF ID .) ]
  ! ID              [ reduce using rule 82 (empty -> .) ]

    empty                          shift and go to state 42

state 76

    (38) type_specifier -> REF type_specifier .

    ID              reduce using rule 38 (type_specifier -> REF type_specifier .)
    RANGLE          reduce using rule 38 (type_specifier -> REF type_specifier .)
    COMMA           reduce using rule 38 (type_specifier -> REF type_specifier .)
    LPAREN          reduce using rule 38 (type_specifier -> REF type_specifier .)
    LBRACE          reduce using rule 38 (type_specifier -> REF type_specifier .)


state 77

    (37) type_specifier -> POINTER . type_specifier
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    ID              shift and go to state 87
    POINTER         shift and go to state 77
    REF             shift and go to state 74

    type_specifier                 shift and go to state 79
    type_with_generics             shift and go to state 20

state 78

    (86) expression -> POINTER expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    FOR             reduce using rule 86 (expression -> POINTER expression .)
    IF              reduce using rule 86 (expression -> POINTER expression .)
    MATCH           reduce using rule 86 (expression -> POINTER expression .)
    WHILE           reduce using rule 86 (expression -> POINTER expression .)
    ID              reduce using rule 86 (expression -> POINTER expression .)
    ASYNC           reduce using rule 86 (expression -> POINTER expression .)
    FN              reduce using rule 86 (expression -> POINTER expression .)
    CLASS           reduce using rule 86 (expression -> POINTER expression .)
    ENUM            reduce using rule 86 (expression -> POINTER expression .)
    NAMESPACE       reduce using rule 86 (expression -> POINTER expression .)
    INTERFACE       reduce using rule 86 (expression -> POINTER expression .)
    RETURN          reduce using rule 86 (expression -> POINTER expression .)
    TRUE            reduce using rule 86 (expression -> POINTER expression .)
    FALSE           reduce using rule 86 (expression -> POINTER expression .)
    NOT             reduce using rule 86 (expression -> POINTER expression .)
    LPAREN          reduce using rule 86 (expression -> POINTER expression .)
    AWAIT           reduce using rule 86 (expression -> POINTER expression .)
    NUMBER          reduce using rule 86 (expression -> POINTER expression .)
    REF             reduce using rule 86 (expression -> POINTER expression .)
    POINTER         reduce using rule 86 (expression -> POINTER expression .)
    error           reduce using rule 86 (expression -> POINTER expression .)
    $end            reduce using rule 86 (expression -> POINTER expression .)
    RPAREN          reduce using rule 86 (expression -> POINTER expression .)
    SEMI            reduce using rule 86 (expression -> POINTER expression .)
    RBRACE          reduce using rule 86 (expression -> POINTER expression .)
    COMMA           reduce using rule 86 (expression -> POINTER expression .)
    RANGE           reduce using rule 86 (expression -> POINTER expression .)
    LBRACE          reduce using rule 86 (expression -> POINTER expression .)
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55

  ! AND             [ reduce using rule 86 (expression -> POINTER expression .) ]
  ! OR              [ reduce using rule 86 (expression -> POINTER expression .) ]
  ! EQ              [ reduce using rule 86 (expression -> POINTER expression .) ]
  ! NEQ             [ reduce using rule 86 (expression -> POINTER expression .) ]
  ! LTHEN           [ reduce using rule 86 (expression -> POINTER expression .) ]
  ! RTHEN           [ reduce using rule 86 (expression -> POINTER expression .) ]
  ! LEQ             [ reduce using rule 86 (expression -> POINTER expression .) ]
  ! GEQ             [ reduce using rule 86 (expression -> POINTER expression .) ]
  ! PLUS            [ reduce using rule 86 (expression -> POINTER expression .) ]
  ! MINUS           [ reduce using rule 86 (expression -> POINTER expression .) ]
  ! TIMES           [ reduce using rule 86 (expression -> POINTER expression .) ]
  ! DIVIDE          [ reduce using rule 86 (expression -> POINTER expression .) ]
  ! MOD             [ reduce using rule 86 (expression -> POINTER expression .) ]


state 79

    (37) type_specifier -> POINTER type_specifier .

    ID              reduce using rule 37 (type_specifier -> POINTER type_specifier .)
    RANGLE          reduce using rule 37 (type_specifier -> POINTER type_specifier .)
    COMMA           reduce using rule 37 (type_specifier -> POINTER type_specifier .)
    LPAREN          reduce using rule 37 (type_specifier -> POINTER type_specifier .)
    LBRACE          reduce using rule 37 (type_specifier -> POINTER type_specifier .)


state 80

    (55) expression -> ID . LPAREN arg_list_opt RPAREN
    (84) expression -> ID .
    (35) type_specifier -> ID .
    (17) type_with_generics -> ID . LANGLE type_list RANGLE
    (18) type_with_generics -> ID . empty
    (82) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 35 (type_specifier -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 35 (type_specifier -> ID .)
    LPAREN          shift and go to state 40
    AND             reduce using rule 84 (expression -> ID .)
    OR              reduce using rule 84 (expression -> ID .)
    EQ              reduce using rule 84 (expression -> ID .)
    NEQ             reduce using rule 84 (expression -> ID .)
    LTHEN           reduce using rule 84 (expression -> ID .)
    RTHEN           reduce using rule 84 (expression -> ID .)
    LEQ             reduce using rule 84 (expression -> ID .)
    GEQ             reduce using rule 84 (expression -> ID .)
    PLUS            reduce using rule 84 (expression -> ID .)
    MINUS           reduce using rule 84 (expression -> ID .)
    TIMES           reduce using rule 84 (expression -> ID .)
    DIVIDE          reduce using rule 84 (expression -> ID .)
    MOD             reduce using rule 84 (expression -> ID .)
    FOR             reduce using rule 84 (expression -> ID .)
    IF              reduce using rule 84 (expression -> ID .)
    MATCH           reduce using rule 84 (expression -> ID .)
    WHILE           reduce using rule 84 (expression -> ID .)
    ASYNC           reduce using rule 84 (expression -> ID .)
    FN              reduce using rule 84 (expression -> ID .)
    CLASS           reduce using rule 84 (expression -> ID .)
    ENUM            reduce using rule 84 (expression -> ID .)
    NAMESPACE       reduce using rule 84 (expression -> ID .)
    INTERFACE       reduce using rule 84 (expression -> ID .)
    RETURN          reduce using rule 84 (expression -> ID .)
    TRUE            reduce using rule 84 (expression -> ID .)
    FALSE           reduce using rule 84 (expression -> ID .)
    NOT             reduce using rule 84 (expression -> ID .)
    AWAIT           reduce using rule 84 (expression -> ID .)
    NUMBER          reduce using rule 84 (expression -> ID .)
    REF             reduce using rule 84 (expression -> ID .)
    POINTER         reduce using rule 84 (expression -> ID .)
    error           reduce using rule 84 (expression -> ID .)
    $end            reduce using rule 84 (expression -> ID .)
    RBRACE          reduce using rule 84 (expression -> ID .)
    SEMI            reduce using rule 84 (expression -> ID .)
    ID              reduce using rule 35 (type_specifier -> ID .)
    LANGLE          shift and go to state 41

  ! ID              [ reduce using rule 84 (expression -> ID .) ]
  ! LPAREN          [ reduce using rule 84 (expression -> ID .) ]
  ! ID              [ reduce using rule 82 (empty -> .) ]

    empty                          shift and go to state 42

state 81

    (48) statement -> FOR ID IN . expression RANGE expression LBRACE program RBRACE
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 120

state 82

    (98) statement -> ID ASSIGN expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    FOR             reduce using rule 98 (statement -> ID ASSIGN expression .)
    IF              reduce using rule 98 (statement -> ID ASSIGN expression .)
    MATCH           reduce using rule 98 (statement -> ID ASSIGN expression .)
    WHILE           reduce using rule 98 (statement -> ID ASSIGN expression .)
    ID              reduce using rule 98 (statement -> ID ASSIGN expression .)
    ASYNC           reduce using rule 98 (statement -> ID ASSIGN expression .)
    FN              reduce using rule 98 (statement -> ID ASSIGN expression .)
    CLASS           reduce using rule 98 (statement -> ID ASSIGN expression .)
    ENUM            reduce using rule 98 (statement -> ID ASSIGN expression .)
    NAMESPACE       reduce using rule 98 (statement -> ID ASSIGN expression .)
    INTERFACE       reduce using rule 98 (statement -> ID ASSIGN expression .)
    RETURN          reduce using rule 98 (statement -> ID ASSIGN expression .)
    TRUE            reduce using rule 98 (statement -> ID ASSIGN expression .)
    FALSE           reduce using rule 98 (statement -> ID ASSIGN expression .)
    NOT             reduce using rule 98 (statement -> ID ASSIGN expression .)
    LPAREN          reduce using rule 98 (statement -> ID ASSIGN expression .)
    AWAIT           reduce using rule 98 (statement -> ID ASSIGN expression .)
    NUMBER          reduce using rule 98 (statement -> ID ASSIGN expression .)
    REF             reduce using rule 98 (statement -> ID ASSIGN expression .)
    POINTER         reduce using rule 98 (statement -> ID ASSIGN expression .)
    error           reduce using rule 98 (statement -> ID ASSIGN expression .)
    $end            reduce using rule 98 (statement -> ID ASSIGN expression .)
    RBRACE          reduce using rule 98 (statement -> ID ASSIGN expression .)
    SEMI            reduce using rule 98 (statement -> ID ASSIGN expression .)
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55


state 83

    (55) expression -> ID LPAREN arg_list_opt . RPAREN

    RPAREN          shift and go to state 121


state 84

    (56) arg_list_opt -> arg_list .
    (58) arg_list -> arg_list . COMMA expression

    RPAREN          reduce using rule 56 (arg_list_opt -> arg_list .)
    RBRACE          reduce using rule 56 (arg_list_opt -> arg_list .)
    COMMA           shift and go to state 122


state 85

    (57) arg_list_opt -> empty .
    (60) arg_list -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 57 (arg_list_opt -> empty .)
  ! reduce/reduce conflict for RBRACE resolved using rule 57 (arg_list_opt -> empty .)
    RPAREN          reduce using rule 57 (arg_list_opt -> empty .)
    RBRACE          reduce using rule 57 (arg_list_opt -> empty .)
    COMMA           reduce using rule 60 (arg_list -> empty .)

  ! RPAREN          [ reduce using rule 60 (arg_list -> empty .) ]
  ! RBRACE          [ reduce using rule 60 (arg_list -> empty .) ]


state 86

    (59) arg_list -> expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    COMMA           reduce using rule 59 (arg_list -> expression .)
    RPAREN          reduce using rule 59 (arg_list -> expression .)
    RBRACE          reduce using rule 59 (arg_list -> expression .)
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55


state 87

    (35) type_specifier -> ID .
    (17) type_with_generics -> ID . LANGLE type_list RANGLE
    (18) type_with_generics -> ID . empty
    (82) empty -> .

  ! reduce/reduce conflict for RANGLE resolved using rule 35 (type_specifier -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 35 (type_specifier -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 35 (type_specifier -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 35 (type_specifier -> ID .)
  ! reduce/reduce conflict for LBRACE resolved using rule 35 (type_specifier -> ID .)
    RANGLE          reduce using rule 35 (type_specifier -> ID .)
    COMMA           reduce using rule 35 (type_specifier -> ID .)
    ID              reduce using rule 35 (type_specifier -> ID .)
    LPAREN          reduce using rule 35 (type_specifier -> ID .)
    LBRACE          reduce using rule 35 (type_specifier -> ID .)
    LANGLE          shift and go to state 41

  ! RANGLE          [ reduce using rule 82 (empty -> .) ]
  ! COMMA           [ reduce using rule 82 (empty -> .) ]
  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! LPAREN          [ reduce using rule 82 (empty -> .) ]
  ! LBRACE          [ reduce using rule 82 (empty -> .) ]

    empty                          shift and go to state 42

state 88

    (17) type_with_generics -> ID LANGLE type_list . RANGLE
    (19) type_list -> type_list . COMMA type_specifier

    RANGLE          shift and go to state 123
    COMMA           shift and go to state 124


state 89

    (20) type_list -> type_specifier .

    RANGLE          reduce using rule 20 (type_list -> type_specifier .)
    COMMA           reduce using rule 20 (type_list -> type_specifier .)


state 90

    (39) expression -> expression AND expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    AND             reduce using rule 39 (expression -> expression AND expression .)
    OR              reduce using rule 39 (expression -> expression AND expression .)
    MOD             reduce using rule 39 (expression -> expression AND expression .)
    FOR             reduce using rule 39 (expression -> expression AND expression .)
    IF              reduce using rule 39 (expression -> expression AND expression .)
    MATCH           reduce using rule 39 (expression -> expression AND expression .)
    WHILE           reduce using rule 39 (expression -> expression AND expression .)
    ID              reduce using rule 39 (expression -> expression AND expression .)
    ASYNC           reduce using rule 39 (expression -> expression AND expression .)
    FN              reduce using rule 39 (expression -> expression AND expression .)
    CLASS           reduce using rule 39 (expression -> expression AND expression .)
    ENUM            reduce using rule 39 (expression -> expression AND expression .)
    NAMESPACE       reduce using rule 39 (expression -> expression AND expression .)
    INTERFACE       reduce using rule 39 (expression -> expression AND expression .)
    RETURN          reduce using rule 39 (expression -> expression AND expression .)
    TRUE            reduce using rule 39 (expression -> expression AND expression .)
    FALSE           reduce using rule 39 (expression -> expression AND expression .)
    NOT             reduce using rule 39 (expression -> expression AND expression .)
    LPAREN          reduce using rule 39 (expression -> expression AND expression .)
    AWAIT           reduce using rule 39 (expression -> expression AND expression .)
    NUMBER          reduce using rule 39 (expression -> expression AND expression .)
    REF             reduce using rule 39 (expression -> expression AND expression .)
    POINTER         reduce using rule 39 (expression -> expression AND expression .)
    error           reduce using rule 39 (expression -> expression AND expression .)
    $end            reduce using rule 39 (expression -> expression AND expression .)
    RPAREN          reduce using rule 39 (expression -> expression AND expression .)
    SEMI            reduce using rule 39 (expression -> expression AND expression .)
    RBRACE          reduce using rule 39 (expression -> expression AND expression .)
    COMMA           reduce using rule 39 (expression -> expression AND expression .)
    RANGE           reduce using rule 39 (expression -> expression AND expression .)
    LBRACE          reduce using rule 39 (expression -> expression AND expression .)
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54

  ! EQ              [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! LTHEN           [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! RTHEN           [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! LEQ             [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! GEQ             [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! MOD             [ shift and go to state 55 ]


state 91

    (40) expression -> expression OR expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    OR              reduce using rule 40 (expression -> expression OR expression .)
    MOD             reduce using rule 40 (expression -> expression OR expression .)
    FOR             reduce using rule 40 (expression -> expression OR expression .)
    IF              reduce using rule 40 (expression -> expression OR expression .)
    MATCH           reduce using rule 40 (expression -> expression OR expression .)
    WHILE           reduce using rule 40 (expression -> expression OR expression .)
    ID              reduce using rule 40 (expression -> expression OR expression .)
    ASYNC           reduce using rule 40 (expression -> expression OR expression .)
    FN              reduce using rule 40 (expression -> expression OR expression .)
    CLASS           reduce using rule 40 (expression -> expression OR expression .)
    ENUM            reduce using rule 40 (expression -> expression OR expression .)
    NAMESPACE       reduce using rule 40 (expression -> expression OR expression .)
    INTERFACE       reduce using rule 40 (expression -> expression OR expression .)
    RETURN          reduce using rule 40 (expression -> expression OR expression .)
    TRUE            reduce using rule 40 (expression -> expression OR expression .)
    FALSE           reduce using rule 40 (expression -> expression OR expression .)
    NOT             reduce using rule 40 (expression -> expression OR expression .)
    LPAREN          reduce using rule 40 (expression -> expression OR expression .)
    AWAIT           reduce using rule 40 (expression -> expression OR expression .)
    NUMBER          reduce using rule 40 (expression -> expression OR expression .)
    REF             reduce using rule 40 (expression -> expression OR expression .)
    POINTER         reduce using rule 40 (expression -> expression OR expression .)
    error           reduce using rule 40 (expression -> expression OR expression .)
    $end            reduce using rule 40 (expression -> expression OR expression .)
    RPAREN          reduce using rule 40 (expression -> expression OR expression .)
    SEMI            reduce using rule 40 (expression -> expression OR expression .)
    RBRACE          reduce using rule 40 (expression -> expression OR expression .)
    COMMA           reduce using rule 40 (expression -> expression OR expression .)
    RANGE           reduce using rule 40 (expression -> expression OR expression .)
    LBRACE          reduce using rule 40 (expression -> expression OR expression .)
    AND             shift and go to state 43
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54

  ! AND             [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! LTHEN           [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! RTHEN           [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! LEQ             [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! GEQ             [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 44 ]
  ! MOD             [ shift and go to state 55 ]


state 92

    (41) expression -> expression EQ expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    AND             reduce using rule 41 (expression -> expression EQ expression .)
    OR              reduce using rule 41 (expression -> expression EQ expression .)
    EQ              reduce using rule 41 (expression -> expression EQ expression .)
    NEQ             reduce using rule 41 (expression -> expression EQ expression .)
    MOD             reduce using rule 41 (expression -> expression EQ expression .)
    FOR             reduce using rule 41 (expression -> expression EQ expression .)
    IF              reduce using rule 41 (expression -> expression EQ expression .)
    MATCH           reduce using rule 41 (expression -> expression EQ expression .)
    WHILE           reduce using rule 41 (expression -> expression EQ expression .)
    ID              reduce using rule 41 (expression -> expression EQ expression .)
    ASYNC           reduce using rule 41 (expression -> expression EQ expression .)
    FN              reduce using rule 41 (expression -> expression EQ expression .)
    CLASS           reduce using rule 41 (expression -> expression EQ expression .)
    ENUM            reduce using rule 41 (expression -> expression EQ expression .)
    NAMESPACE       reduce using rule 41 (expression -> expression EQ expression .)
    INTERFACE       reduce using rule 41 (expression -> expression EQ expression .)
    RETURN          reduce using rule 41 (expression -> expression EQ expression .)
    TRUE            reduce using rule 41 (expression -> expression EQ expression .)
    FALSE           reduce using rule 41 (expression -> expression EQ expression .)
    NOT             reduce using rule 41 (expression -> expression EQ expression .)
    LPAREN          reduce using rule 41 (expression -> expression EQ expression .)
    AWAIT           reduce using rule 41 (expression -> expression EQ expression .)
    NUMBER          reduce using rule 41 (expression -> expression EQ expression .)
    REF             reduce using rule 41 (expression -> expression EQ expression .)
    POINTER         reduce using rule 41 (expression -> expression EQ expression .)
    error           reduce using rule 41 (expression -> expression EQ expression .)
    $end            reduce using rule 41 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 41 (expression -> expression EQ expression .)
    SEMI            reduce using rule 41 (expression -> expression EQ expression .)
    RBRACE          reduce using rule 41 (expression -> expression EQ expression .)
    COMMA           reduce using rule 41 (expression -> expression EQ expression .)
    RANGE           reduce using rule 41 (expression -> expression EQ expression .)
    LBRACE          reduce using rule 41 (expression -> expression EQ expression .)
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54

  ! LTHEN           [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! RTHEN           [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! LEQ             [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! GEQ             [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! PLUS            [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 45 ]
  ! NEQ             [ shift and go to state 46 ]
  ! MOD             [ shift and go to state 55 ]


state 93

    (42) expression -> expression NEQ expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    AND             reduce using rule 42 (expression -> expression NEQ expression .)
    OR              reduce using rule 42 (expression -> expression NEQ expression .)
    EQ              reduce using rule 42 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 42 (expression -> expression NEQ expression .)
    MOD             reduce using rule 42 (expression -> expression NEQ expression .)
    FOR             reduce using rule 42 (expression -> expression NEQ expression .)
    IF              reduce using rule 42 (expression -> expression NEQ expression .)
    MATCH           reduce using rule 42 (expression -> expression NEQ expression .)
    WHILE           reduce using rule 42 (expression -> expression NEQ expression .)
    ID              reduce using rule 42 (expression -> expression NEQ expression .)
    ASYNC           reduce using rule 42 (expression -> expression NEQ expression .)
    FN              reduce using rule 42 (expression -> expression NEQ expression .)
    CLASS           reduce using rule 42 (expression -> expression NEQ expression .)
    ENUM            reduce using rule 42 (expression -> expression NEQ expression .)
    NAMESPACE       reduce using rule 42 (expression -> expression NEQ expression .)
    INTERFACE       reduce using rule 42 (expression -> expression NEQ expression .)
    RETURN          reduce using rule 42 (expression -> expression NEQ expression .)
    TRUE            reduce using rule 42 (expression -> expression NEQ expression .)
    FALSE           reduce using rule 42 (expression -> expression NEQ expression .)
    NOT             reduce using rule 42 (expression -> expression NEQ expression .)
    LPAREN          reduce using rule 42 (expression -> expression NEQ expression .)
    AWAIT           reduce using rule 42 (expression -> expression NEQ expression .)
    NUMBER          reduce using rule 42 (expression -> expression NEQ expression .)
    REF             reduce using rule 42 (expression -> expression NEQ expression .)
    POINTER         reduce using rule 42 (expression -> expression NEQ expression .)
    error           reduce using rule 42 (expression -> expression NEQ expression .)
    $end            reduce using rule 42 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 42 (expression -> expression NEQ expression .)
    SEMI            reduce using rule 42 (expression -> expression NEQ expression .)
    RBRACE          reduce using rule 42 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 42 (expression -> expression NEQ expression .)
    RANGE           reduce using rule 42 (expression -> expression NEQ expression .)
    LBRACE          reduce using rule 42 (expression -> expression NEQ expression .)
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54

  ! LTHEN           [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! RTHEN           [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! LEQ             [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! GEQ             [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! PLUS            [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 45 ]
  ! NEQ             [ shift and go to state 46 ]
  ! MOD             [ shift and go to state 55 ]


state 94

    (43) expression -> expression LTHEN expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    AND             reduce using rule 43 (expression -> expression LTHEN expression .)
    OR              reduce using rule 43 (expression -> expression LTHEN expression .)
    EQ              reduce using rule 43 (expression -> expression LTHEN expression .)
    NEQ             reduce using rule 43 (expression -> expression LTHEN expression .)
    LTHEN           reduce using rule 43 (expression -> expression LTHEN expression .)
    RTHEN           reduce using rule 43 (expression -> expression LTHEN expression .)
    LEQ             reduce using rule 43 (expression -> expression LTHEN expression .)
    GEQ             reduce using rule 43 (expression -> expression LTHEN expression .)
    MOD             reduce using rule 43 (expression -> expression LTHEN expression .)
    FOR             reduce using rule 43 (expression -> expression LTHEN expression .)
    IF              reduce using rule 43 (expression -> expression LTHEN expression .)
    MATCH           reduce using rule 43 (expression -> expression LTHEN expression .)
    WHILE           reduce using rule 43 (expression -> expression LTHEN expression .)
    ID              reduce using rule 43 (expression -> expression LTHEN expression .)
    ASYNC           reduce using rule 43 (expression -> expression LTHEN expression .)
    FN              reduce using rule 43 (expression -> expression LTHEN expression .)
    CLASS           reduce using rule 43 (expression -> expression LTHEN expression .)
    ENUM            reduce using rule 43 (expression -> expression LTHEN expression .)
    NAMESPACE       reduce using rule 43 (expression -> expression LTHEN expression .)
    INTERFACE       reduce using rule 43 (expression -> expression LTHEN expression .)
    RETURN          reduce using rule 43 (expression -> expression LTHEN expression .)
    TRUE            reduce using rule 43 (expression -> expression LTHEN expression .)
    FALSE           reduce using rule 43 (expression -> expression LTHEN expression .)
    NOT             reduce using rule 43 (expression -> expression LTHEN expression .)
    LPAREN          reduce using rule 43 (expression -> expression LTHEN expression .)
    AWAIT           reduce using rule 43 (expression -> expression LTHEN expression .)
    NUMBER          reduce using rule 43 (expression -> expression LTHEN expression .)
    REF             reduce using rule 43 (expression -> expression LTHEN expression .)
    POINTER         reduce using rule 43 (expression -> expression LTHEN expression .)
    error           reduce using rule 43 (expression -> expression LTHEN expression .)
    $end            reduce using rule 43 (expression -> expression LTHEN expression .)
    RPAREN          reduce using rule 43 (expression -> expression LTHEN expression .)
    SEMI            reduce using rule 43 (expression -> expression LTHEN expression .)
    RBRACE          reduce using rule 43 (expression -> expression LTHEN expression .)
    COMMA           reduce using rule 43 (expression -> expression LTHEN expression .)
    RANGE           reduce using rule 43 (expression -> expression LTHEN expression .)
    LBRACE          reduce using rule 43 (expression -> expression LTHEN expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54

  ! PLUS            [ reduce using rule 43 (expression -> expression LTHEN expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression LTHEN expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression LTHEN expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression LTHEN expression .) ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 45 ]
  ! NEQ             [ shift and go to state 46 ]
  ! LTHEN           [ shift and go to state 47 ]
  ! RTHEN           [ shift and go to state 48 ]
  ! LEQ             [ shift and go to state 49 ]
  ! GEQ             [ shift and go to state 50 ]
  ! MOD             [ shift and go to state 55 ]


state 95

    (44) expression -> expression RTHEN expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    AND             reduce using rule 44 (expression -> expression RTHEN expression .)
    OR              reduce using rule 44 (expression -> expression RTHEN expression .)
    EQ              reduce using rule 44 (expression -> expression RTHEN expression .)
    NEQ             reduce using rule 44 (expression -> expression RTHEN expression .)
    LTHEN           reduce using rule 44 (expression -> expression RTHEN expression .)
    RTHEN           reduce using rule 44 (expression -> expression RTHEN expression .)
    LEQ             reduce using rule 44 (expression -> expression RTHEN expression .)
    GEQ             reduce using rule 44 (expression -> expression RTHEN expression .)
    MOD             reduce using rule 44 (expression -> expression RTHEN expression .)
    FOR             reduce using rule 44 (expression -> expression RTHEN expression .)
    IF              reduce using rule 44 (expression -> expression RTHEN expression .)
    MATCH           reduce using rule 44 (expression -> expression RTHEN expression .)
    WHILE           reduce using rule 44 (expression -> expression RTHEN expression .)
    ID              reduce using rule 44 (expression -> expression RTHEN expression .)
    ASYNC           reduce using rule 44 (expression -> expression RTHEN expression .)
    FN              reduce using rule 44 (expression -> expression RTHEN expression .)
    CLASS           reduce using rule 44 (expression -> expression RTHEN expression .)
    ENUM            reduce using rule 44 (expression -> expression RTHEN expression .)
    NAMESPACE       reduce using rule 44 (expression -> expression RTHEN expression .)
    INTERFACE       reduce using rule 44 (expression -> expression RTHEN expression .)
    RETURN          reduce using rule 44 (expression -> expression RTHEN expression .)
    TRUE            reduce using rule 44 (expression -> expression RTHEN expression .)
    FALSE           reduce using rule 44 (expression -> expression RTHEN expression .)
    NOT             reduce using rule 44 (expression -> expression RTHEN expression .)
    LPAREN          reduce using rule 44 (expression -> expression RTHEN expression .)
    AWAIT           reduce using rule 44 (expression -> expression RTHEN expression .)
    NUMBER          reduce using rule 44 (expression -> expression RTHEN expression .)
    REF             reduce using rule 44 (expression -> expression RTHEN expression .)
    POINTER         reduce using rule 44 (expression -> expression RTHEN expression .)
    error           reduce using rule 44 (expression -> expression RTHEN expression .)
    $end            reduce using rule 44 (expression -> expression RTHEN expression .)
    RPAREN          reduce using rule 44 (expression -> expression RTHEN expression .)
    SEMI            reduce using rule 44 (expression -> expression RTHEN expression .)
    RBRACE          reduce using rule 44 (expression -> expression RTHEN expression .)
    COMMA           reduce using rule 44 (expression -> expression RTHEN expression .)
    RANGE           reduce using rule 44 (expression -> expression RTHEN expression .)
    LBRACE          reduce using rule 44 (expression -> expression RTHEN expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54

  ! PLUS            [ reduce using rule 44 (expression -> expression RTHEN expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression RTHEN expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression RTHEN expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression RTHEN expression .) ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 45 ]
  ! NEQ             [ shift and go to state 46 ]
  ! LTHEN           [ shift and go to state 47 ]
  ! RTHEN           [ shift and go to state 48 ]
  ! LEQ             [ shift and go to state 49 ]
  ! GEQ             [ shift and go to state 50 ]
  ! MOD             [ shift and go to state 55 ]


state 96

    (45) expression -> expression LEQ expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    AND             reduce using rule 45 (expression -> expression LEQ expression .)
    OR              reduce using rule 45 (expression -> expression LEQ expression .)
    EQ              reduce using rule 45 (expression -> expression LEQ expression .)
    NEQ             reduce using rule 45 (expression -> expression LEQ expression .)
    LTHEN           reduce using rule 45 (expression -> expression LEQ expression .)
    RTHEN           reduce using rule 45 (expression -> expression LEQ expression .)
    LEQ             reduce using rule 45 (expression -> expression LEQ expression .)
    GEQ             reduce using rule 45 (expression -> expression LEQ expression .)
    MOD             reduce using rule 45 (expression -> expression LEQ expression .)
    FOR             reduce using rule 45 (expression -> expression LEQ expression .)
    IF              reduce using rule 45 (expression -> expression LEQ expression .)
    MATCH           reduce using rule 45 (expression -> expression LEQ expression .)
    WHILE           reduce using rule 45 (expression -> expression LEQ expression .)
    ID              reduce using rule 45 (expression -> expression LEQ expression .)
    ASYNC           reduce using rule 45 (expression -> expression LEQ expression .)
    FN              reduce using rule 45 (expression -> expression LEQ expression .)
    CLASS           reduce using rule 45 (expression -> expression LEQ expression .)
    ENUM            reduce using rule 45 (expression -> expression LEQ expression .)
    NAMESPACE       reduce using rule 45 (expression -> expression LEQ expression .)
    INTERFACE       reduce using rule 45 (expression -> expression LEQ expression .)
    RETURN          reduce using rule 45 (expression -> expression LEQ expression .)
    TRUE            reduce using rule 45 (expression -> expression LEQ expression .)
    FALSE           reduce using rule 45 (expression -> expression LEQ expression .)
    NOT             reduce using rule 45 (expression -> expression LEQ expression .)
    LPAREN          reduce using rule 45 (expression -> expression LEQ expression .)
    AWAIT           reduce using rule 45 (expression -> expression LEQ expression .)
    NUMBER          reduce using rule 45 (expression -> expression LEQ expression .)
    REF             reduce using rule 45 (expression -> expression LEQ expression .)
    POINTER         reduce using rule 45 (expression -> expression LEQ expression .)
    error           reduce using rule 45 (expression -> expression LEQ expression .)
    $end            reduce using rule 45 (expression -> expression LEQ expression .)
    RPAREN          reduce using rule 45 (expression -> expression LEQ expression .)
    SEMI            reduce using rule 45 (expression -> expression LEQ expression .)
    RBRACE          reduce using rule 45 (expression -> expression LEQ expression .)
    COMMA           reduce using rule 45 (expression -> expression LEQ expression .)
    RANGE           reduce using rule 45 (expression -> expression LEQ expression .)
    LBRACE          reduce using rule 45 (expression -> expression LEQ expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54

  ! PLUS            [ reduce using rule 45 (expression -> expression LEQ expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression LEQ expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression LEQ expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression LEQ expression .) ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 45 ]
  ! NEQ             [ shift and go to state 46 ]
  ! LTHEN           [ shift and go to state 47 ]
  ! RTHEN           [ shift and go to state 48 ]
  ! LEQ             [ shift and go to state 49 ]
  ! GEQ             [ shift and go to state 50 ]
  ! MOD             [ shift and go to state 55 ]


state 97

    (46) expression -> expression GEQ expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    AND             reduce using rule 46 (expression -> expression GEQ expression .)
    OR              reduce using rule 46 (expression -> expression GEQ expression .)
    EQ              reduce using rule 46 (expression -> expression GEQ expression .)
    NEQ             reduce using rule 46 (expression -> expression GEQ expression .)
    LTHEN           reduce using rule 46 (expression -> expression GEQ expression .)
    RTHEN           reduce using rule 46 (expression -> expression GEQ expression .)
    LEQ             reduce using rule 46 (expression -> expression GEQ expression .)
    GEQ             reduce using rule 46 (expression -> expression GEQ expression .)
    MOD             reduce using rule 46 (expression -> expression GEQ expression .)
    FOR             reduce using rule 46 (expression -> expression GEQ expression .)
    IF              reduce using rule 46 (expression -> expression GEQ expression .)
    MATCH           reduce using rule 46 (expression -> expression GEQ expression .)
    WHILE           reduce using rule 46 (expression -> expression GEQ expression .)
    ID              reduce using rule 46 (expression -> expression GEQ expression .)
    ASYNC           reduce using rule 46 (expression -> expression GEQ expression .)
    FN              reduce using rule 46 (expression -> expression GEQ expression .)
    CLASS           reduce using rule 46 (expression -> expression GEQ expression .)
    ENUM            reduce using rule 46 (expression -> expression GEQ expression .)
    NAMESPACE       reduce using rule 46 (expression -> expression GEQ expression .)
    INTERFACE       reduce using rule 46 (expression -> expression GEQ expression .)
    RETURN          reduce using rule 46 (expression -> expression GEQ expression .)
    TRUE            reduce using rule 46 (expression -> expression GEQ expression .)
    FALSE           reduce using rule 46 (expression -> expression GEQ expression .)
    NOT             reduce using rule 46 (expression -> expression GEQ expression .)
    LPAREN          reduce using rule 46 (expression -> expression GEQ expression .)
    AWAIT           reduce using rule 46 (expression -> expression GEQ expression .)
    NUMBER          reduce using rule 46 (expression -> expression GEQ expression .)
    REF             reduce using rule 46 (expression -> expression GEQ expression .)
    POINTER         reduce using rule 46 (expression -> expression GEQ expression .)
    error           reduce using rule 46 (expression -> expression GEQ expression .)
    $end            reduce using rule 46 (expression -> expression GEQ expression .)
    RPAREN          reduce using rule 46 (expression -> expression GEQ expression .)
    SEMI            reduce using rule 46 (expression -> expression GEQ expression .)
    RBRACE          reduce using rule 46 (expression -> expression GEQ expression .)
    COMMA           reduce using rule 46 (expression -> expression GEQ expression .)
    RANGE           reduce using rule 46 (expression -> expression GEQ expression .)
    LBRACE          reduce using rule 46 (expression -> expression GEQ expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54

  ! PLUS            [ reduce using rule 46 (expression -> expression GEQ expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression GEQ expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression GEQ expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression GEQ expression .) ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 45 ]
  ! NEQ             [ shift and go to state 46 ]
  ! LTHEN           [ shift and go to state 47 ]
  ! RTHEN           [ shift and go to state 48 ]
  ! LEQ             [ shift and go to state 49 ]
  ! GEQ             [ shift and go to state 50 ]
  ! MOD             [ shift and go to state 55 ]


state 98

    (49) expression -> expression PLUS expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    AND             reduce using rule 49 (expression -> expression PLUS expression .)
    OR              reduce using rule 49 (expression -> expression PLUS expression .)
    EQ              reduce using rule 49 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 49 (expression -> expression PLUS expression .)
    LTHEN           reduce using rule 49 (expression -> expression PLUS expression .)
    RTHEN           reduce using rule 49 (expression -> expression PLUS expression .)
    LEQ             reduce using rule 49 (expression -> expression PLUS expression .)
    GEQ             reduce using rule 49 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 49 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 49 (expression -> expression PLUS expression .)
    MOD             reduce using rule 49 (expression -> expression PLUS expression .)
    FOR             reduce using rule 49 (expression -> expression PLUS expression .)
    IF              reduce using rule 49 (expression -> expression PLUS expression .)
    MATCH           reduce using rule 49 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 49 (expression -> expression PLUS expression .)
    ID              reduce using rule 49 (expression -> expression PLUS expression .)
    ASYNC           reduce using rule 49 (expression -> expression PLUS expression .)
    FN              reduce using rule 49 (expression -> expression PLUS expression .)
    CLASS           reduce using rule 49 (expression -> expression PLUS expression .)
    ENUM            reduce using rule 49 (expression -> expression PLUS expression .)
    NAMESPACE       reduce using rule 49 (expression -> expression PLUS expression .)
    INTERFACE       reduce using rule 49 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 49 (expression -> expression PLUS expression .)
    TRUE            reduce using rule 49 (expression -> expression PLUS expression .)
    FALSE           reduce using rule 49 (expression -> expression PLUS expression .)
    NOT             reduce using rule 49 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 49 (expression -> expression PLUS expression .)
    AWAIT           reduce using rule 49 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 49 (expression -> expression PLUS expression .)
    REF             reduce using rule 49 (expression -> expression PLUS expression .)
    POINTER         reduce using rule 49 (expression -> expression PLUS expression .)
    error           reduce using rule 49 (expression -> expression PLUS expression .)
    $end            reduce using rule 49 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 49 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 49 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 49 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 49 (expression -> expression PLUS expression .)
    RANGE           reduce using rule 49 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 49 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54

  ! TIMES           [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 45 ]
  ! NEQ             [ shift and go to state 46 ]
  ! LTHEN           [ shift and go to state 47 ]
  ! RTHEN           [ shift and go to state 48 ]
  ! LEQ             [ shift and go to state 49 ]
  ! GEQ             [ shift and go to state 50 ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! MOD             [ shift and go to state 55 ]


state 99

    (50) expression -> expression MINUS expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    AND             reduce using rule 50 (expression -> expression MINUS expression .)
    OR              reduce using rule 50 (expression -> expression MINUS expression .)
    EQ              reduce using rule 50 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 50 (expression -> expression MINUS expression .)
    LTHEN           reduce using rule 50 (expression -> expression MINUS expression .)
    RTHEN           reduce using rule 50 (expression -> expression MINUS expression .)
    LEQ             reduce using rule 50 (expression -> expression MINUS expression .)
    GEQ             reduce using rule 50 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 50 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 50 (expression -> expression MINUS expression .)
    MOD             reduce using rule 50 (expression -> expression MINUS expression .)
    FOR             reduce using rule 50 (expression -> expression MINUS expression .)
    IF              reduce using rule 50 (expression -> expression MINUS expression .)
    MATCH           reduce using rule 50 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 50 (expression -> expression MINUS expression .)
    ID              reduce using rule 50 (expression -> expression MINUS expression .)
    ASYNC           reduce using rule 50 (expression -> expression MINUS expression .)
    FN              reduce using rule 50 (expression -> expression MINUS expression .)
    CLASS           reduce using rule 50 (expression -> expression MINUS expression .)
    ENUM            reduce using rule 50 (expression -> expression MINUS expression .)
    NAMESPACE       reduce using rule 50 (expression -> expression MINUS expression .)
    INTERFACE       reduce using rule 50 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 50 (expression -> expression MINUS expression .)
    TRUE            reduce using rule 50 (expression -> expression MINUS expression .)
    FALSE           reduce using rule 50 (expression -> expression MINUS expression .)
    NOT             reduce using rule 50 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 50 (expression -> expression MINUS expression .)
    AWAIT           reduce using rule 50 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 50 (expression -> expression MINUS expression .)
    REF             reduce using rule 50 (expression -> expression MINUS expression .)
    POINTER         reduce using rule 50 (expression -> expression MINUS expression .)
    error           reduce using rule 50 (expression -> expression MINUS expression .)
    $end            reduce using rule 50 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 50 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 50 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 50 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 50 (expression -> expression MINUS expression .)
    RANGE           reduce using rule 50 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 50 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54

  ! TIMES           [ reduce using rule 50 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> expression MINUS expression .) ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 45 ]
  ! NEQ             [ shift and go to state 46 ]
  ! LTHEN           [ shift and go to state 47 ]
  ! RTHEN           [ shift and go to state 48 ]
  ! LEQ             [ shift and go to state 49 ]
  ! GEQ             [ shift and go to state 50 ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! MOD             [ shift and go to state 55 ]


state 100

    (51) expression -> expression TIMES expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    AND             reduce using rule 51 (expression -> expression TIMES expression .)
    OR              reduce using rule 51 (expression -> expression TIMES expression .)
    EQ              reduce using rule 51 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 51 (expression -> expression TIMES expression .)
    LTHEN           reduce using rule 51 (expression -> expression TIMES expression .)
    RTHEN           reduce using rule 51 (expression -> expression TIMES expression .)
    LEQ             reduce using rule 51 (expression -> expression TIMES expression .)
    GEQ             reduce using rule 51 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 51 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 51 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 51 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 51 (expression -> expression TIMES expression .)
    MOD             reduce using rule 51 (expression -> expression TIMES expression .)
    FOR             reduce using rule 51 (expression -> expression TIMES expression .)
    IF              reduce using rule 51 (expression -> expression TIMES expression .)
    MATCH           reduce using rule 51 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 51 (expression -> expression TIMES expression .)
    ID              reduce using rule 51 (expression -> expression TIMES expression .)
    ASYNC           reduce using rule 51 (expression -> expression TIMES expression .)
    FN              reduce using rule 51 (expression -> expression TIMES expression .)
    CLASS           reduce using rule 51 (expression -> expression TIMES expression .)
    ENUM            reduce using rule 51 (expression -> expression TIMES expression .)
    NAMESPACE       reduce using rule 51 (expression -> expression TIMES expression .)
    INTERFACE       reduce using rule 51 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 51 (expression -> expression TIMES expression .)
    TRUE            reduce using rule 51 (expression -> expression TIMES expression .)
    FALSE           reduce using rule 51 (expression -> expression TIMES expression .)
    NOT             reduce using rule 51 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 51 (expression -> expression TIMES expression .)
    AWAIT           reduce using rule 51 (expression -> expression TIMES expression .)
    NUMBER          reduce using rule 51 (expression -> expression TIMES expression .)
    REF             reduce using rule 51 (expression -> expression TIMES expression .)
    POINTER         reduce using rule 51 (expression -> expression TIMES expression .)
    error           reduce using rule 51 (expression -> expression TIMES expression .)
    $end            reduce using rule 51 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 51 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 51 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 51 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 51 (expression -> expression TIMES expression .)
    RANGE           reduce using rule 51 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 51 (expression -> expression TIMES expression .)

  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 45 ]
  ! NEQ             [ shift and go to state 46 ]
  ! LTHEN           [ shift and go to state 47 ]
  ! RTHEN           [ shift and go to state 48 ]
  ! LEQ             [ shift and go to state 49 ]
  ! GEQ             [ shift and go to state 50 ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! TIMES           [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]


state 101

    (52) expression -> expression DIVIDE expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    AND             reduce using rule 52 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 52 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 52 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 52 (expression -> expression DIVIDE expression .)
    LTHEN           reduce using rule 52 (expression -> expression DIVIDE expression .)
    RTHEN           reduce using rule 52 (expression -> expression DIVIDE expression .)
    LEQ             reduce using rule 52 (expression -> expression DIVIDE expression .)
    GEQ             reduce using rule 52 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 52 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 52 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 52 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 52 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 52 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 52 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 52 (expression -> expression DIVIDE expression .)
    MATCH           reduce using rule 52 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 52 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 52 (expression -> expression DIVIDE expression .)
    ASYNC           reduce using rule 52 (expression -> expression DIVIDE expression .)
    FN              reduce using rule 52 (expression -> expression DIVIDE expression .)
    CLASS           reduce using rule 52 (expression -> expression DIVIDE expression .)
    ENUM            reduce using rule 52 (expression -> expression DIVIDE expression .)
    NAMESPACE       reduce using rule 52 (expression -> expression DIVIDE expression .)
    INTERFACE       reduce using rule 52 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 52 (expression -> expression DIVIDE expression .)
    TRUE            reduce using rule 52 (expression -> expression DIVIDE expression .)
    FALSE           reduce using rule 52 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 52 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 52 (expression -> expression DIVIDE expression .)
    AWAIT           reduce using rule 52 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 52 (expression -> expression DIVIDE expression .)
    REF             reduce using rule 52 (expression -> expression DIVIDE expression .)
    POINTER         reduce using rule 52 (expression -> expression DIVIDE expression .)
    error           reduce using rule 52 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 52 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 52 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 52 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 52 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 52 (expression -> expression DIVIDE expression .)
    RANGE           reduce using rule 52 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 52 (expression -> expression DIVIDE expression .)

  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 45 ]
  ! NEQ             [ shift and go to state 46 ]
  ! LTHEN           [ shift and go to state 47 ]
  ! RTHEN           [ shift and go to state 48 ]
  ! LEQ             [ shift and go to state 49 ]
  ! GEQ             [ shift and go to state 50 ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! TIMES           [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]


state 102

    (53) expression -> expression MOD expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    FOR             reduce using rule 53 (expression -> expression MOD expression .)
    IF              reduce using rule 53 (expression -> expression MOD expression .)
    MATCH           reduce using rule 53 (expression -> expression MOD expression .)
    WHILE           reduce using rule 53 (expression -> expression MOD expression .)
    ID              reduce using rule 53 (expression -> expression MOD expression .)
    ASYNC           reduce using rule 53 (expression -> expression MOD expression .)
    FN              reduce using rule 53 (expression -> expression MOD expression .)
    CLASS           reduce using rule 53 (expression -> expression MOD expression .)
    ENUM            reduce using rule 53 (expression -> expression MOD expression .)
    NAMESPACE       reduce using rule 53 (expression -> expression MOD expression .)
    INTERFACE       reduce using rule 53 (expression -> expression MOD expression .)
    RETURN          reduce using rule 53 (expression -> expression MOD expression .)
    TRUE            reduce using rule 53 (expression -> expression MOD expression .)
    FALSE           reduce using rule 53 (expression -> expression MOD expression .)
    NOT             reduce using rule 53 (expression -> expression MOD expression .)
    LPAREN          reduce using rule 53 (expression -> expression MOD expression .)
    AWAIT           reduce using rule 53 (expression -> expression MOD expression .)
    NUMBER          reduce using rule 53 (expression -> expression MOD expression .)
    REF             reduce using rule 53 (expression -> expression MOD expression .)
    POINTER         reduce using rule 53 (expression -> expression MOD expression .)
    error           reduce using rule 53 (expression -> expression MOD expression .)
    $end            reduce using rule 53 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 53 (expression -> expression MOD expression .)
    SEMI            reduce using rule 53 (expression -> expression MOD expression .)
    RBRACE          reduce using rule 53 (expression -> expression MOD expression .)
    COMMA           reduce using rule 53 (expression -> expression MOD expression .)
    RANGE           reduce using rule 53 (expression -> expression MOD expression .)
    LBRACE          reduce using rule 53 (expression -> expression MOD expression .)
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55

  ! AND             [ reduce using rule 53 (expression -> expression MOD expression .) ]
  ! OR              [ reduce using rule 53 (expression -> expression MOD expression .) ]
  ! EQ              [ reduce using rule 53 (expression -> expression MOD expression .) ]
  ! NEQ             [ reduce using rule 53 (expression -> expression MOD expression .) ]
  ! LTHEN           [ reduce using rule 53 (expression -> expression MOD expression .) ]
  ! RTHEN           [ reduce using rule 53 (expression -> expression MOD expression .) ]
  ! LEQ             [ reduce using rule 53 (expression -> expression MOD expression .) ]
  ! GEQ             [ reduce using rule 53 (expression -> expression MOD expression .) ]
  ! PLUS            [ reduce using rule 53 (expression -> expression MOD expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression MOD expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> expression MOD expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression MOD expression .) ]
  ! MOD             [ reduce using rule 53 (expression -> expression MOD expression .) ]


state 103

    (61) statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE
    (62) statement -> IF LPAREN expression . RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    RPAREN          shift and go to state 125
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55


state 104

    (54) expression -> LPAREN expression RPAREN .

    AND             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    LTHEN           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    RTHEN           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    MATCH           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    ASYNC           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    FN              reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    CLASS           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    ENUM            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    NAMESPACE       reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    INTERFACE       reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    AWAIT           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    REF             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    POINTER         reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    error           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    RANGE           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 54 (expression -> LPAREN expression RPAREN .)


state 105

    (85) expression -> REF ID .

    RPAREN          reduce using rule 85 (expression -> REF ID .)
    AND             reduce using rule 85 (expression -> REF ID .)
    OR              reduce using rule 85 (expression -> REF ID .)
    EQ              reduce using rule 85 (expression -> REF ID .)
    NEQ             reduce using rule 85 (expression -> REF ID .)
    LTHEN           reduce using rule 85 (expression -> REF ID .)
    RTHEN           reduce using rule 85 (expression -> REF ID .)
    LEQ             reduce using rule 85 (expression -> REF ID .)
    GEQ             reduce using rule 85 (expression -> REF ID .)
    PLUS            reduce using rule 85 (expression -> REF ID .)
    MINUS           reduce using rule 85 (expression -> REF ID .)
    TIMES           reduce using rule 85 (expression -> REF ID .)
    DIVIDE          reduce using rule 85 (expression -> REF ID .)
    MOD             reduce using rule 85 (expression -> REF ID .)
    SEMI            reduce using rule 85 (expression -> REF ID .)
    FOR             reduce using rule 85 (expression -> REF ID .)
    IF              reduce using rule 85 (expression -> REF ID .)
    MATCH           reduce using rule 85 (expression -> REF ID .)
    WHILE           reduce using rule 85 (expression -> REF ID .)
    ID              reduce using rule 85 (expression -> REF ID .)
    ASYNC           reduce using rule 85 (expression -> REF ID .)
    FN              reduce using rule 85 (expression -> REF ID .)
    CLASS           reduce using rule 85 (expression -> REF ID .)
    ENUM            reduce using rule 85 (expression -> REF ID .)
    NAMESPACE       reduce using rule 85 (expression -> REF ID .)
    INTERFACE       reduce using rule 85 (expression -> REF ID .)
    RETURN          reduce using rule 85 (expression -> REF ID .)
    TRUE            reduce using rule 85 (expression -> REF ID .)
    FALSE           reduce using rule 85 (expression -> REF ID .)
    NOT             reduce using rule 85 (expression -> REF ID .)
    LPAREN          reduce using rule 85 (expression -> REF ID .)
    AWAIT           reduce using rule 85 (expression -> REF ID .)
    NUMBER          reduce using rule 85 (expression -> REF ID .)
    REF             reduce using rule 85 (expression -> REF ID .)
    POINTER         reduce using rule 85 (expression -> REF ID .)
    error           reduce using rule 85 (expression -> REF ID .)
    $end            reduce using rule 85 (expression -> REF ID .)
    RBRACE          reduce using rule 85 (expression -> REF ID .)
    COMMA           reduce using rule 85 (expression -> REF ID .)
    RANGE           reduce using rule 85 (expression -> REF ID .)
    LBRACE          reduce using rule 85 (expression -> REF ID .)


state 106

    (63) statement -> MATCH LPAREN expression . RPAREN LBRACE match_cases RBRACE
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    RPAREN          shift and go to state 126
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55


state 107

    (81) statement -> WHILE LPAREN expression . RPAREN LBRACE program RBRACE
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    RPAREN          shift and go to state 127
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55


state 108

    (79) function_definition -> ASYNC FN ID . LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE

    LPAREN          shift and go to state 128


state 109

    (94) function_definition -> FN type_with_generics LPAREN . parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> FN type_with_generics LPAREN . parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (87) parameters_opt -> . parameters_list
    (88) parameters_opt -> . empty
    (89) parameters_list -> . parameters_list COMMA parameter
    (90) parameters_list -> . parameter
    (82) empty -> .
    (91) parameter -> . type_specifier ID
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    RPAREN          reduce using rule 82 (empty -> .)
    ID              shift and go to state 87
    POINTER         shift and go to state 77
    REF             shift and go to state 74

    type_with_generics             shift and go to state 20
    parameters_opt                 shift and go to state 129
    parameters_list                shift and go to state 130
    empty                          shift and go to state 131
    parameter                      shift and go to state 132
    type_specifier                 shift and go to state 133

state 110

    (96) class_definition -> CLASS type_with_generics extends_opt . LBRACE class_body RBRACE
    (109) struct_definition -> CLASS type_with_generics extends_opt . LBRACE struct_body RBRACE

    LBRACE          shift and go to state 134


state 111

    (33) extends_opt -> EXTENDS . type_with_generics
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    ID              shift and go to state 65

    type_with_generics             shift and go to state 135

state 112

    (34) extends_opt -> empty .

    LBRACE          reduce using rule 34 (extends_opt -> empty .)


state 113

    (110) enum_definition -> ENUM type_with_generics LBRACE . enum_body RBRACE
    (29) enum_body -> . enum_body enum_member
    (30) enum_body -> . enum_member
    (31) enum_member -> . ID
    (32) enum_member -> . ID ASSIGN NUMBER

    ID              shift and go to state 138

    enum_body                      shift and go to state 136
    enum_member                    shift and go to state 137

state 114

    (13) namespace_definition -> NAMESPACE ID LBRACE . program RBRACE
    (14) namespace_definition -> NAMESPACE ID LBRACE . RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    RBRACE          shift and go to state 140
    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    program                        shift and go to state 139
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    expression                     shift and go to state 13
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 115

    (101) variable_declaration -> type_specifier ID LPAREN . arg_list_opt RPAREN SEMI
    (56) arg_list_opt -> . arg_list
    (57) arg_list_opt -> . empty
    (58) arg_list -> . arg_list COMMA expression
    (59) arg_list -> . expression
    (60) arg_list -> . empty
    (82) empty -> .
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    RPAREN          reduce using rule 82 (empty -> .)
    COMMA           reduce using rule 82 (empty -> .)
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    arg_list_opt                   shift and go to state 141
    arg_list                       shift and go to state 84
    empty                          shift and go to state 85
    expression                     shift and go to state 86

state 116

    (102) variable_declaration -> type_specifier ID SEMI .

    SEMI            reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    FOR             reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    IF              reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    MATCH           reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    WHILE           reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    ID              reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    ASYNC           reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    FN              reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    CLASS           reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    ENUM            reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    NAMESPACE       reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    INTERFACE       reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    RETURN          reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    TRUE            reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    FALSE           reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    NOT             reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    LPAREN          reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    AWAIT           reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    NUMBER          reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    REF             reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    POINTER         reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    error           reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    $end            reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)
    RBRACE          reduce using rule 102 (variable_declaration -> type_specifier ID SEMI .)


state 117

    (103) variable_declaration -> type_specifier ID ASSIGN . expression SEMI
    (105) variable_declaration -> type_specifier ID ASSIGN . NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    NEW             shift and go to state 143
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 142

state 118

    (104) variable_declaration -> type_specifier ID LBRACE . arg_list_opt RBRACE SEMI
    (56) arg_list_opt -> . arg_list
    (57) arg_list_opt -> . empty
    (58) arg_list -> . arg_list COMMA expression
    (59) arg_list -> . expression
    (60) arg_list -> . empty
    (82) empty -> .
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    RBRACE          reduce using rule 82 (empty -> .)
    COMMA           reduce using rule 82 (empty -> .)
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    arg_list_opt                   shift and go to state 144
    arg_list                       shift and go to state 84
    empty                          shift and go to state 85
    expression                     shift and go to state 86

state 119

    (106) interface_definition -> INTERFACE type_with_generics LBRACE . interface_body RBRACE
    (107) interface_body -> . interface_body function_definition
    (108) interface_body -> . empty
    (82) empty -> .

    RBRACE          reduce using rule 82 (empty -> .)
    ASYNC           reduce using rule 82 (empty -> .)
    FN              reduce using rule 82 (empty -> .)

    interface_body                 shift and go to state 145
    empty                          shift and go to state 146

state 120

    (48) statement -> FOR ID IN expression . RANGE expression LBRACE program RBRACE
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    RANGE           shift and go to state 147
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55


state 121

    (55) expression -> ID LPAREN arg_list_opt RPAREN .

    AND             reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    OR              reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    EQ              reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    NEQ             reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    LTHEN           reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    RTHEN           reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    LEQ             reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    GEQ             reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    PLUS            reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    MINUS           reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    TIMES           reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    DIVIDE          reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    MOD             reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    FOR             reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    IF              reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    MATCH           reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    WHILE           reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    ID              reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    ASYNC           reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    FN              reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    CLASS           reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    ENUM            reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    NAMESPACE       reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    INTERFACE       reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    RETURN          reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    TRUE            reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    FALSE           reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    NOT             reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    LPAREN          reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    AWAIT           reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    NUMBER          reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    REF             reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    POINTER         reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    error           reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    $end            reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    RPAREN          reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    SEMI            reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    RBRACE          reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    COMMA           reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    RANGE           reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)
    LBRACE          reduce using rule 55 (expression -> ID LPAREN arg_list_opt RPAREN .)


state 122

    (58) arg_list -> arg_list COMMA . expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 148

state 123

    (17) type_with_generics -> ID LANGLE type_list RANGLE .

    ID              reduce using rule 17 (type_with_generics -> ID LANGLE type_list RANGLE .)
    LPAREN          reduce using rule 17 (type_with_generics -> ID LANGLE type_list RANGLE .)
    EXTENDS         reduce using rule 17 (type_with_generics -> ID LANGLE type_list RANGLE .)
    LBRACE          reduce using rule 17 (type_with_generics -> ID LANGLE type_list RANGLE .)
    RANGLE          reduce using rule 17 (type_with_generics -> ID LANGLE type_list RANGLE .)
    COMMA           reduce using rule 17 (type_with_generics -> ID LANGLE type_list RANGLE .)


state 124

    (19) type_list -> type_list COMMA . type_specifier
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    ID              shift and go to state 87
    POINTER         shift and go to state 77
    REF             shift and go to state 74

    type_specifier                 shift and go to state 149
    type_with_generics             shift and go to state 20

state 125

    (61) statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE
    (62) statement -> IF LPAREN expression RPAREN . LBRACE program RBRACE ELSE LBRACE program RBRACE

    LBRACE          shift and go to state 150


state 126

    (63) statement -> MATCH LPAREN expression RPAREN . LBRACE match_cases RBRACE

    LBRACE          shift and go to state 151


state 127

    (81) statement -> WHILE LPAREN expression RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 152


state 128

    (79) function_definition -> ASYNC FN ID LPAREN . parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (87) parameters_opt -> . parameters_list
    (88) parameters_opt -> . empty
    (89) parameters_list -> . parameters_list COMMA parameter
    (90) parameters_list -> . parameter
    (82) empty -> .
    (91) parameter -> . type_specifier ID
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    RPAREN          reduce using rule 82 (empty -> .)
    ID              shift and go to state 87
    POINTER         shift and go to state 77
    REF             shift and go to state 74

    parameters_opt                 shift and go to state 153
    parameters_list                shift and go to state 130
    empty                          shift and go to state 131
    parameter                      shift and go to state 132
    type_specifier                 shift and go to state 133
    type_with_generics             shift and go to state 20

state 129

    (94) function_definition -> FN type_with_generics LPAREN parameters_opt . RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> FN type_with_generics LPAREN parameters_opt . RPAREN return_type_opt LBRACE RBRACE

    RPAREN          shift and go to state 154


state 130

    (87) parameters_opt -> parameters_list .
    (89) parameters_list -> parameters_list . COMMA parameter

    RPAREN          reduce using rule 87 (parameters_opt -> parameters_list .)
    COMMA           shift and go to state 155


state 131

    (88) parameters_opt -> empty .

    RPAREN          reduce using rule 88 (parameters_opt -> empty .)


state 132

    (90) parameters_list -> parameter .

    COMMA           reduce using rule 90 (parameters_list -> parameter .)
    RPAREN          reduce using rule 90 (parameters_list -> parameter .)


state 133

    (91) parameter -> type_specifier . ID

    ID              shift and go to state 156


state 134

    (96) class_definition -> CLASS type_with_generics extends_opt LBRACE . class_body RBRACE
    (109) struct_definition -> CLASS type_with_generics extends_opt LBRACE . struct_body RBRACE
    (21) class_body -> . class_body class_member
    (22) class_body -> . empty
    (25) struct_body -> . struct_body struct_member
    (26) struct_body -> . empty
    (82) empty -> .

    RBRACE          reduce using rule 82 (empty -> .)
    ASYNC           reduce using rule 82 (empty -> .)
    FN              reduce using rule 82 (empty -> .)
    ID              reduce using rule 82 (empty -> .)
    POINTER         reduce using rule 82 (empty -> .)
    REF             reduce using rule 82 (empty -> .)

    class_body                     shift and go to state 157
    struct_body                    shift and go to state 158
    empty                          shift and go to state 159

state 135

    (33) extends_opt -> EXTENDS type_with_generics .

    LBRACE          reduce using rule 33 (extends_opt -> EXTENDS type_with_generics .)


state 136

    (110) enum_definition -> ENUM type_with_generics LBRACE enum_body . RBRACE
    (29) enum_body -> enum_body . enum_member
    (31) enum_member -> . ID
    (32) enum_member -> . ID ASSIGN NUMBER

    RBRACE          shift and go to state 160
    ID              shift and go to state 138

    enum_member                    shift and go to state 161

state 137

    (30) enum_body -> enum_member .

    RBRACE          reduce using rule 30 (enum_body -> enum_member .)
    ID              reduce using rule 30 (enum_body -> enum_member .)


state 138

    (31) enum_member -> ID .
    (32) enum_member -> ID . ASSIGN NUMBER

    RBRACE          reduce using rule 31 (enum_member -> ID .)
    ID              reduce using rule 31 (enum_member -> ID .)
    ASSIGN          shift and go to state 162


state 139

    (13) namespace_definition -> NAMESPACE ID LBRACE program . RBRACE
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    RBRACE          shift and go to state 163
    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    statement                      shift and go to state 35
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    expression                     shift and go to state 13
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 140

    (14) namespace_definition -> NAMESPACE ID LBRACE RBRACE .

    FOR             reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    IF              reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    MATCH           reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    WHILE           reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    ID              reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    ASYNC           reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    FN              reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    CLASS           reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    ENUM            reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    NAMESPACE       reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    INTERFACE       reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    RETURN          reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    TRUE            reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    FALSE           reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    NOT             reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    LPAREN          reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    AWAIT           reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    NUMBER          reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    REF             reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    POINTER         reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    error           reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    $end            reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    RBRACE          reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)
    SEMI            reduce using rule 14 (namespace_definition -> NAMESPACE ID LBRACE RBRACE .)


state 141

    (101) variable_declaration -> type_specifier ID LPAREN arg_list_opt . RPAREN SEMI

    RPAREN          shift and go to state 164


state 142

    (103) variable_declaration -> type_specifier ID ASSIGN expression . SEMI
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    SEMI            shift and go to state 165
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55


state 143

    (105) variable_declaration -> type_specifier ID ASSIGN NEW . type_specifier LPAREN arg_list_opt RPAREN SEMI
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    ID              shift and go to state 87
    POINTER         shift and go to state 77
    REF             shift and go to state 74

    type_specifier                 shift and go to state 166
    type_with_generics             shift and go to state 20

state 144

    (104) variable_declaration -> type_specifier ID LBRACE arg_list_opt . RBRACE SEMI

    RBRACE          shift and go to state 167


state 145

    (106) interface_definition -> INTERFACE type_with_generics LBRACE interface_body . RBRACE
    (107) interface_body -> interface_body . function_definition
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE

    RBRACE          shift and go to state 168
    ASYNC           shift and go to state 18
    FN              shift and go to state 19

    function_definition            shift and go to state 169

state 146

    (108) interface_body -> empty .

    RBRACE          reduce using rule 108 (interface_body -> empty .)
    ASYNC           reduce using rule 108 (interface_body -> empty .)
    FN              reduce using rule 108 (interface_body -> empty .)


state 147

    (48) statement -> FOR ID IN expression RANGE . expression LBRACE program RBRACE
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    expression                     shift and go to state 170

state 148

    (58) arg_list -> arg_list COMMA expression .
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    COMMA           reduce using rule 58 (arg_list -> arg_list COMMA expression .)
    RPAREN          reduce using rule 58 (arg_list -> arg_list COMMA expression .)
    RBRACE          reduce using rule 58 (arg_list -> arg_list COMMA expression .)
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55


state 149

    (19) type_list -> type_list COMMA type_specifier .

    RANGLE          reduce using rule 19 (type_list -> type_list COMMA type_specifier .)
    COMMA           reduce using rule 19 (type_list -> type_list COMMA type_specifier .)


state 150

    (61) statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE
    (62) statement -> IF LPAREN expression RPAREN LBRACE . program RBRACE ELSE LBRACE program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    expression                     shift and go to state 13
    program                        shift and go to state 171
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 151

    (63) statement -> MATCH LPAREN expression RPAREN LBRACE . match_cases RBRACE
    (64) match_cases -> . match_cases match_case
    (65) match_cases -> . match_case
    (66) match_case -> . pattern ARM program SEMI
    (67) pattern -> . simple_pattern
    (68) pattern -> . tuple_pattern
    (69) simple_pattern -> . ID
    (70) simple_pattern -> . NUMBER
    (71) simple_pattern -> . STRING
    (72) simple_pattern -> . UNDERSCORE
    (73) tuple_pattern -> . LPAREN pattern_list RPAREN

    ID              shift and go to state 178
    NUMBER          shift and go to state 179
    STRING          shift and go to state 180
    UNDERSCORE      shift and go to state 181
    LPAREN          shift and go to state 172

    match_cases                    shift and go to state 173
    match_case                     shift and go to state 174
    pattern                        shift and go to state 175
    simple_pattern                 shift and go to state 176
    tuple_pattern                  shift and go to state 177

state 152

    (81) statement -> WHILE LPAREN expression RPAREN LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    expression                     shift and go to state 13
    program                        shift and go to state 182
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 153

    (79) function_definition -> ASYNC FN ID LPAREN parameters_opt . RPAREN return_type_opt LBRACE program RBRACE

    RPAREN          shift and go to state 183


state 154

    (94) function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN . return_type_opt LBRACE program RBRACE
    (95) function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN . return_type_opt LBRACE RBRACE
    (92) return_type_opt -> . ARROW type_specifier
    (93) return_type_opt -> . empty
    (82) empty -> .

    ARROW           shift and go to state 185
    LBRACE          reduce using rule 82 (empty -> .)

    return_type_opt                shift and go to state 184
    empty                          shift and go to state 186

state 155

    (89) parameters_list -> parameters_list COMMA . parameter
    (91) parameter -> . type_specifier ID
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    ID              shift and go to state 87
    POINTER         shift and go to state 77
    REF             shift and go to state 74

    parameter                      shift and go to state 187
    type_specifier                 shift and go to state 133
    type_with_generics             shift and go to state 20

state 156

    (91) parameter -> type_specifier ID .

    COMMA           reduce using rule 91 (parameter -> type_specifier ID .)
    RPAREN          reduce using rule 91 (parameter -> type_specifier ID .)


state 157

    (96) class_definition -> CLASS type_with_generics extends_opt LBRACE class_body . RBRACE
    (21) class_body -> class_body . class_member
    (23) class_member -> . variable_declaration SEMI
    (24) class_member -> . function_definition
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    RBRACE          shift and go to state 188
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    ID              shift and go to state 87
    POINTER         shift and go to state 77
    REF             shift and go to state 74

    type_with_generics             shift and go to state 20
    class_member                   shift and go to state 189
    variable_declaration           shift and go to state 190
    function_definition            shift and go to state 191
    type_specifier                 shift and go to state 24

state 158

    (109) struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body . RBRACE
    (25) struct_body -> struct_body . struct_member
    (27) struct_member -> . variable_declaration SEMI
    (28) struct_member -> . function_definition
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    RBRACE          shift and go to state 192
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    ID              shift and go to state 87
    POINTER         shift and go to state 77
    REF             shift and go to state 74

    type_with_generics             shift and go to state 20
    struct_member                  shift and go to state 193
    variable_declaration           shift and go to state 194
    function_definition            shift and go to state 195
    type_specifier                 shift and go to state 24

state 159

    (22) class_body -> empty .
    (26) struct_body -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 22 (class_body -> empty .)
  ! reduce/reduce conflict for ASYNC resolved using rule 22 (class_body -> empty .)
  ! reduce/reduce conflict for FN resolved using rule 22 (class_body -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 22 (class_body -> empty .)
  ! reduce/reduce conflict for POINTER resolved using rule 22 (class_body -> empty .)
  ! reduce/reduce conflict for REF resolved using rule 22 (class_body -> empty .)
    RBRACE          reduce using rule 22 (class_body -> empty .)
    ASYNC           reduce using rule 22 (class_body -> empty .)
    FN              reduce using rule 22 (class_body -> empty .)
    ID              reduce using rule 22 (class_body -> empty .)
    POINTER         reduce using rule 22 (class_body -> empty .)
    REF             reduce using rule 22 (class_body -> empty .)

  ! RBRACE          [ reduce using rule 26 (struct_body -> empty .) ]
  ! ASYNC           [ reduce using rule 26 (struct_body -> empty .) ]
  ! FN              [ reduce using rule 26 (struct_body -> empty .) ]
  ! ID              [ reduce using rule 26 (struct_body -> empty .) ]
  ! POINTER         [ reduce using rule 26 (struct_body -> empty .) ]
  ! REF             [ reduce using rule 26 (struct_body -> empty .) ]


state 160

    (110) enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .

    FOR             reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    IF              reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    MATCH           reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    WHILE           reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    ID              reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    ASYNC           reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    FN              reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    CLASS           reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    ENUM            reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    NAMESPACE       reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    INTERFACE       reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    RETURN          reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    TRUE            reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    FALSE           reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    NOT             reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    LPAREN          reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    AWAIT           reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    NUMBER          reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    REF             reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    POINTER         reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    error           reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    $end            reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    RBRACE          reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    SEMI            reduce using rule 110 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)


state 161

    (29) enum_body -> enum_body enum_member .

    RBRACE          reduce using rule 29 (enum_body -> enum_body enum_member .)
    ID              reduce using rule 29 (enum_body -> enum_body enum_member .)


state 162

    (32) enum_member -> ID ASSIGN . NUMBER

    NUMBER          shift and go to state 196


state 163

    (13) namespace_definition -> NAMESPACE ID LBRACE program RBRACE .

    FOR             reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    IF              reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    MATCH           reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    WHILE           reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    ID              reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    ASYNC           reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    FN              reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    CLASS           reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    ENUM            reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    NAMESPACE       reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    INTERFACE       reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    RETURN          reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    TRUE            reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    FALSE           reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    NOT             reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    LPAREN          reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    AWAIT           reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    NUMBER          reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    REF             reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    POINTER         reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    error           reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    $end            reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    RBRACE          reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)
    SEMI            reduce using rule 13 (namespace_definition -> NAMESPACE ID LBRACE program RBRACE .)


state 164

    (101) variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN . SEMI

    SEMI            shift and go to state 197


state 165

    (103) variable_declaration -> type_specifier ID ASSIGN expression SEMI .

    SEMI            reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    FOR             reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    IF              reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    MATCH           reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    WHILE           reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    ID              reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    ASYNC           reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    FN              reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    CLASS           reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    ENUM            reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    NAMESPACE       reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    INTERFACE       reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    RETURN          reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    TRUE            reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    FALSE           reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    NOT             reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    LPAREN          reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    AWAIT           reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    NUMBER          reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    REF             reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    POINTER         reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    error           reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    $end            reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)
    RBRACE          reduce using rule 103 (variable_declaration -> type_specifier ID ASSIGN expression SEMI .)


state 166

    (105) variable_declaration -> type_specifier ID ASSIGN NEW type_specifier . LPAREN arg_list_opt RPAREN SEMI

    LPAREN          shift and go to state 198


state 167

    (104) variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE . SEMI

    SEMI            shift and go to state 199


state 168

    (106) interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .

    FOR             reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    IF              reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    MATCH           reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    WHILE           reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    ID              reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    ASYNC           reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    FN              reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    CLASS           reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    ENUM            reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    NAMESPACE       reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    INTERFACE       reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    RETURN          reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    TRUE            reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    FALSE           reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    NOT             reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    LPAREN          reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    AWAIT           reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    NUMBER          reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    REF             reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    POINTER         reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    error           reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    $end            reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    RBRACE          reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    SEMI            reduce using rule 106 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)


state 169

    (107) interface_body -> interface_body function_definition .

    RBRACE          reduce using rule 107 (interface_body -> interface_body function_definition .)
    ASYNC           reduce using rule 107 (interface_body -> interface_body function_definition .)
    FN              reduce using rule 107 (interface_body -> interface_body function_definition .)


state 170

    (48) statement -> FOR ID IN expression RANGE expression . LBRACE program RBRACE
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LTHEN expression
    (44) expression -> expression . RTHEN expression
    (45) expression -> expression . LEQ expression
    (46) expression -> expression . GEQ expression
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression

    LBRACE          shift and go to state 200
    AND             shift and go to state 43
    OR              shift and go to state 44
    EQ              shift and go to state 45
    NEQ             shift and go to state 46
    LTHEN           shift and go to state 47
    RTHEN           shift and go to state 48
    LEQ             shift and go to state 49
    GEQ             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55


state 171

    (61) statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE
    (62) statement -> IF LPAREN expression RPAREN LBRACE program . RBRACE ELSE LBRACE program RBRACE
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    RBRACE          shift and go to state 201
    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    expression                     shift and go to state 13
    statement                      shift and go to state 35
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 172

    (73) tuple_pattern -> LPAREN . pattern_list RPAREN
    (74) pattern_list -> . pattern_list COMMA pattern
    (75) pattern_list -> . pattern
    (67) pattern -> . simple_pattern
    (68) pattern -> . tuple_pattern
    (69) simple_pattern -> . ID
    (70) simple_pattern -> . NUMBER
    (71) simple_pattern -> . STRING
    (72) simple_pattern -> . UNDERSCORE
    (73) tuple_pattern -> . LPAREN pattern_list RPAREN

    ID              shift and go to state 178
    NUMBER          shift and go to state 179
    STRING          shift and go to state 180
    UNDERSCORE      shift and go to state 181
    LPAREN          shift and go to state 172

    pattern_list                   shift and go to state 202
    pattern                        shift and go to state 203
    simple_pattern                 shift and go to state 176
    tuple_pattern                  shift and go to state 177

state 173

    (63) statement -> MATCH LPAREN expression RPAREN LBRACE match_cases . RBRACE
    (64) match_cases -> match_cases . match_case
    (66) match_case -> . pattern ARM program SEMI
    (67) pattern -> . simple_pattern
    (68) pattern -> . tuple_pattern
    (69) simple_pattern -> . ID
    (70) simple_pattern -> . NUMBER
    (71) simple_pattern -> . STRING
    (72) simple_pattern -> . UNDERSCORE
    (73) tuple_pattern -> . LPAREN pattern_list RPAREN

    RBRACE          shift and go to state 204
    ID              shift and go to state 178
    NUMBER          shift and go to state 179
    STRING          shift and go to state 180
    UNDERSCORE      shift and go to state 181
    LPAREN          shift and go to state 172

    match_case                     shift and go to state 205
    pattern                        shift and go to state 175
    simple_pattern                 shift and go to state 176
    tuple_pattern                  shift and go to state 177

state 174

    (65) match_cases -> match_case .

    RBRACE          reduce using rule 65 (match_cases -> match_case .)
    ID              reduce using rule 65 (match_cases -> match_case .)
    NUMBER          reduce using rule 65 (match_cases -> match_case .)
    STRING          reduce using rule 65 (match_cases -> match_case .)
    UNDERSCORE      reduce using rule 65 (match_cases -> match_case .)
    LPAREN          reduce using rule 65 (match_cases -> match_case .)


state 175

    (66) match_case -> pattern . ARM program SEMI

    ARM             shift and go to state 206


state 176

    (67) pattern -> simple_pattern .

    ARM             reduce using rule 67 (pattern -> simple_pattern .)
    RPAREN          reduce using rule 67 (pattern -> simple_pattern .)
    COMMA           reduce using rule 67 (pattern -> simple_pattern .)


state 177

    (68) pattern -> tuple_pattern .

    ARM             reduce using rule 68 (pattern -> tuple_pattern .)
    RPAREN          reduce using rule 68 (pattern -> tuple_pattern .)
    COMMA           reduce using rule 68 (pattern -> tuple_pattern .)


state 178

    (69) simple_pattern -> ID .

    ARM             reduce using rule 69 (simple_pattern -> ID .)
    RPAREN          reduce using rule 69 (simple_pattern -> ID .)
    COMMA           reduce using rule 69 (simple_pattern -> ID .)


state 179

    (70) simple_pattern -> NUMBER .

    ARM             reduce using rule 70 (simple_pattern -> NUMBER .)
    RPAREN          reduce using rule 70 (simple_pattern -> NUMBER .)
    COMMA           reduce using rule 70 (simple_pattern -> NUMBER .)


state 180

    (71) simple_pattern -> STRING .

    ARM             reduce using rule 71 (simple_pattern -> STRING .)
    RPAREN          reduce using rule 71 (simple_pattern -> STRING .)
    COMMA           reduce using rule 71 (simple_pattern -> STRING .)


state 181

    (72) simple_pattern -> UNDERSCORE .

    ARM             reduce using rule 72 (simple_pattern -> UNDERSCORE .)
    RPAREN          reduce using rule 72 (simple_pattern -> UNDERSCORE .)
    COMMA           reduce using rule 72 (simple_pattern -> UNDERSCORE .)


state 182

    (81) statement -> WHILE LPAREN expression RPAREN LBRACE program . RBRACE
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    RBRACE          shift and go to state 207
    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    expression                     shift and go to state 13
    statement                      shift and go to state 35
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 183

    (79) function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN . return_type_opt LBRACE program RBRACE
    (92) return_type_opt -> . ARROW type_specifier
    (93) return_type_opt -> . empty
    (82) empty -> .

    ARROW           shift and go to state 185
    LBRACE          reduce using rule 82 (empty -> .)

    return_type_opt                shift and go to state 208
    empty                          shift and go to state 186

state 184

    (94) function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt . LBRACE program RBRACE
    (95) function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt . LBRACE RBRACE

    LBRACE          shift and go to state 209


state 185

    (92) return_type_opt -> ARROW . type_specifier
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    ID              shift and go to state 87
    POINTER         shift and go to state 77
    REF             shift and go to state 74

    type_specifier                 shift and go to state 210
    type_with_generics             shift and go to state 20

state 186

    (93) return_type_opt -> empty .

    LBRACE          reduce using rule 93 (return_type_opt -> empty .)


state 187

    (89) parameters_list -> parameters_list COMMA parameter .

    COMMA           reduce using rule 89 (parameters_list -> parameters_list COMMA parameter .)
    RPAREN          reduce using rule 89 (parameters_list -> parameters_list COMMA parameter .)


state 188

    (96) class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .

    FOR             reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    IF              reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    MATCH           reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    WHILE           reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    ID              reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    ASYNC           reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    FN              reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    CLASS           reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    ENUM            reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    NAMESPACE       reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    INTERFACE       reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    RETURN          reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    TRUE            reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    FALSE           reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    NOT             reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    LPAREN          reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    AWAIT           reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    NUMBER          reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    REF             reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    POINTER         reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    error           reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    $end            reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    RBRACE          reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    SEMI            reduce using rule 96 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)


state 189

    (21) class_body -> class_body class_member .

    RBRACE          reduce using rule 21 (class_body -> class_body class_member .)
    ASYNC           reduce using rule 21 (class_body -> class_body class_member .)
    FN              reduce using rule 21 (class_body -> class_body class_member .)
    ID              reduce using rule 21 (class_body -> class_body class_member .)
    POINTER         reduce using rule 21 (class_body -> class_body class_member .)
    REF             reduce using rule 21 (class_body -> class_body class_member .)


state 190

    (23) class_member -> variable_declaration . SEMI

    SEMI            shift and go to state 211


state 191

    (24) class_member -> function_definition .

    RBRACE          reduce using rule 24 (class_member -> function_definition .)
    ASYNC           reduce using rule 24 (class_member -> function_definition .)
    FN              reduce using rule 24 (class_member -> function_definition .)
    ID              reduce using rule 24 (class_member -> function_definition .)
    POINTER         reduce using rule 24 (class_member -> function_definition .)
    REF             reduce using rule 24 (class_member -> function_definition .)


state 192

    (109) struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .

    FOR             reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    IF              reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    MATCH           reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    WHILE           reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    ID              reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    ASYNC           reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    FN              reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    CLASS           reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    ENUM            reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    NAMESPACE       reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    INTERFACE       reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    RETURN          reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    TRUE            reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    FALSE           reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    NOT             reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    LPAREN          reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    AWAIT           reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    NUMBER          reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    REF             reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    POINTER         reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    error           reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    $end            reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    RBRACE          reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    SEMI            reduce using rule 109 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)


state 193

    (25) struct_body -> struct_body struct_member .

    RBRACE          reduce using rule 25 (struct_body -> struct_body struct_member .)
    ASYNC           reduce using rule 25 (struct_body -> struct_body struct_member .)
    FN              reduce using rule 25 (struct_body -> struct_body struct_member .)
    ID              reduce using rule 25 (struct_body -> struct_body struct_member .)
    POINTER         reduce using rule 25 (struct_body -> struct_body struct_member .)
    REF             reduce using rule 25 (struct_body -> struct_body struct_member .)


state 194

    (27) struct_member -> variable_declaration . SEMI

    SEMI            shift and go to state 212


state 195

    (28) struct_member -> function_definition .

    RBRACE          reduce using rule 28 (struct_member -> function_definition .)
    ASYNC           reduce using rule 28 (struct_member -> function_definition .)
    FN              reduce using rule 28 (struct_member -> function_definition .)
    ID              reduce using rule 28 (struct_member -> function_definition .)
    POINTER         reduce using rule 28 (struct_member -> function_definition .)
    REF             reduce using rule 28 (struct_member -> function_definition .)


state 196

    (32) enum_member -> ID ASSIGN NUMBER .

    RBRACE          reduce using rule 32 (enum_member -> ID ASSIGN NUMBER .)
    ID              reduce using rule 32 (enum_member -> ID ASSIGN NUMBER .)


state 197

    (101) variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .

    SEMI            reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    FOR             reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    IF              reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    MATCH           reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    WHILE           reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    ID              reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    ASYNC           reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    FN              reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    CLASS           reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    ENUM            reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    NAMESPACE       reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    RETURN          reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    TRUE            reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    FALSE           reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    NOT             reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    LPAREN          reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    AWAIT           reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    NUMBER          reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    REF             reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    POINTER         reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    error           reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    $end            reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)
    RBRACE          reduce using rule 101 (variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI .)


state 198

    (105) variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN . arg_list_opt RPAREN SEMI
    (56) arg_list_opt -> . arg_list
    (57) arg_list_opt -> . empty
    (58) arg_list -> . arg_list COMMA expression
    (59) arg_list -> . expression
    (60) arg_list -> . empty
    (82) empty -> .
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error

    RPAREN          reduce using rule 82 (empty -> .)
    COMMA           reduce using rule 82 (empty -> .)
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    ID              shift and go to state 58
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 59
    POINTER         shift and go to state 60
    error           shift and go to state 34

    arg_list_opt                   shift and go to state 213
    arg_list                       shift and go to state 84
    empty                          shift and go to state 85
    expression                     shift and go to state 86

state 199

    (104) variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .

    SEMI            reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    FOR             reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    IF              reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    MATCH           reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    WHILE           reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    ID              reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    ASYNC           reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    FN              reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    CLASS           reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    ENUM            reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    NAMESPACE       reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    INTERFACE       reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    RETURN          reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    TRUE            reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    FALSE           reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    NOT             reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    LPAREN          reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    AWAIT           reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    NUMBER          reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    REF             reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    POINTER         reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    error           reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    $end            reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)
    RBRACE          reduce using rule 104 (variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI .)


state 200

    (48) statement -> FOR ID IN expression RANGE expression LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    expression                     shift and go to state 13
    program                        shift and go to state 214
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 201

    (61) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .
    (62) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE . ELSE LBRACE program RBRACE

    FOR             reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    MATCH           reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ID              reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ASYNC           reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    FN              reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    CLASS           reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ENUM            reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    NAMESPACE       reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    INTERFACE       reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    TRUE            reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    FALSE           reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    NOT             reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    LPAREN          reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    AWAIT           reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    NUMBER          reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    REF             reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    POINTER         reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    error           reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    SEMI            reduce using rule 61 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE .)
    ELSE            shift and go to state 215


state 202

    (73) tuple_pattern -> LPAREN pattern_list . RPAREN
    (74) pattern_list -> pattern_list . COMMA pattern

    RPAREN          shift and go to state 216
    COMMA           shift and go to state 217


state 203

    (75) pattern_list -> pattern .

    RPAREN          reduce using rule 75 (pattern_list -> pattern .)
    COMMA           reduce using rule 75 (pattern_list -> pattern .)


state 204

    (63) statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .

    FOR             reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    IF              reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    MATCH           reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    WHILE           reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    ID              reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    ASYNC           reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    FN              reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    CLASS           reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    ENUM            reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    NAMESPACE       reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    INTERFACE       reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    RETURN          reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    TRUE            reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    FALSE           reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    NOT             reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    LPAREN          reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    AWAIT           reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    NUMBER          reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    REF             reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    POINTER         reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    error           reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    $end            reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    RBRACE          reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)
    SEMI            reduce using rule 63 (statement -> MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE .)


state 205

    (64) match_cases -> match_cases match_case .

    RBRACE          reduce using rule 64 (match_cases -> match_cases match_case .)
    ID              reduce using rule 64 (match_cases -> match_cases match_case .)
    NUMBER          reduce using rule 64 (match_cases -> match_cases match_case .)
    STRING          reduce using rule 64 (match_cases -> match_cases match_case .)
    UNDERSCORE      reduce using rule 64 (match_cases -> match_cases match_case .)
    LPAREN          reduce using rule 64 (match_cases -> match_cases match_case .)


state 206

    (66) match_case -> pattern ARM . program SEMI
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    program                        shift and go to state 218
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    expression                     shift and go to state 13
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 207

    (81) statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .

    FOR             reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    IF              reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    MATCH           reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    ID              reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    ASYNC           reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    FN              reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    CLASS           reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    ENUM            reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    NAMESPACE       reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    INTERFACE       reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RETURN          reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    TRUE            reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    FALSE           reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    NOT             reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    LPAREN          reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    AWAIT           reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    NUMBER          reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    REF             reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    POINTER         reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    error           reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)
    SEMI            reduce using rule 81 (statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE .)


state 208

    (79) function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt . LBRACE program RBRACE

    LBRACE          shift and go to state 219


state 209

    (94) function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE . program RBRACE
    (95) function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE . RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    RBRACE          shift and go to state 221
    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    type_with_generics             shift and go to state 20
    program                        shift and go to state 220
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    expression                     shift and go to state 13
    type_specifier                 shift and go to state 24

state 210

    (92) return_type_opt -> ARROW type_specifier .

    LBRACE          reduce using rule 92 (return_type_opt -> ARROW type_specifier .)


state 211

    (23) class_member -> variable_declaration SEMI .

    RBRACE          reduce using rule 23 (class_member -> variable_declaration SEMI .)
    ASYNC           reduce using rule 23 (class_member -> variable_declaration SEMI .)
    FN              reduce using rule 23 (class_member -> variable_declaration SEMI .)
    ID              reduce using rule 23 (class_member -> variable_declaration SEMI .)
    POINTER         reduce using rule 23 (class_member -> variable_declaration SEMI .)
    REF             reduce using rule 23 (class_member -> variable_declaration SEMI .)


state 212

    (27) struct_member -> variable_declaration SEMI .

    RBRACE          reduce using rule 27 (struct_member -> variable_declaration SEMI .)
    ASYNC           reduce using rule 27 (struct_member -> variable_declaration SEMI .)
    FN              reduce using rule 27 (struct_member -> variable_declaration SEMI .)
    ID              reduce using rule 27 (struct_member -> variable_declaration SEMI .)
    POINTER         reduce using rule 27 (struct_member -> variable_declaration SEMI .)
    REF             reduce using rule 27 (struct_member -> variable_declaration SEMI .)


state 213

    (105) variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt . RPAREN SEMI

    RPAREN          shift and go to state 222


state 214

    (48) statement -> FOR ID IN expression RANGE expression LBRACE program . RBRACE
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    RBRACE          shift and go to state 223
    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    expression                     shift and go to state 13
    statement                      shift and go to state 35
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 215

    (62) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE . LBRACE program RBRACE

    LBRACE          shift and go to state 224


state 216

    (73) tuple_pattern -> LPAREN pattern_list RPAREN .

    ARM             reduce using rule 73 (tuple_pattern -> LPAREN pattern_list RPAREN .)
    RPAREN          reduce using rule 73 (tuple_pattern -> LPAREN pattern_list RPAREN .)
    COMMA           reduce using rule 73 (tuple_pattern -> LPAREN pattern_list RPAREN .)


state 217

    (74) pattern_list -> pattern_list COMMA . pattern
    (67) pattern -> . simple_pattern
    (68) pattern -> . tuple_pattern
    (69) simple_pattern -> . ID
    (70) simple_pattern -> . NUMBER
    (71) simple_pattern -> . STRING
    (72) simple_pattern -> . UNDERSCORE
    (73) tuple_pattern -> . LPAREN pattern_list RPAREN

    ID              shift and go to state 178
    NUMBER          shift and go to state 179
    STRING          shift and go to state 180
    UNDERSCORE      shift and go to state 181
    LPAREN          shift and go to state 172

    pattern                        shift and go to state 225
    simple_pattern                 shift and go to state 176
    tuple_pattern                  shift and go to state 177

state 218

    (66) match_case -> pattern ARM program . SEMI
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    SEMI            shift and go to state 226
    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    statement                      shift and go to state 35
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    expression                     shift and go to state 13
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 219

    (79) function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    program                        shift and go to state 227
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    expression                     shift and go to state 13
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 220

    (94) function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program . RBRACE
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    RBRACE          shift and go to state 228
    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    type_with_generics             shift and go to state 20
    statement                      shift and go to state 35
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    expression                     shift and go to state 13
    type_specifier                 shift and go to state 24

state 221

    (95) function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .

    FOR             reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    IF              reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    MATCH           reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    WHILE           reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    ID              reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    ASYNC           reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    FN              reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    CLASS           reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    ENUM            reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    NAMESPACE       reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    INTERFACE       reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    RETURN          reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    TRUE            reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    FALSE           reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    NOT             reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    LPAREN          reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    AWAIT           reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    NUMBER          reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    REF             reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    POINTER         reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    error           reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    $end            reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    RBRACE          reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)
    SEMI            reduce using rule 95 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE .)


state 222

    (105) variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN . SEMI

    SEMI            shift and go to state 229


state 223

    (48) statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .

    FOR             reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    IF              reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    MATCH           reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    WHILE           reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    ID              reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    ASYNC           reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    FN              reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    CLASS           reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    ENUM            reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    NAMESPACE       reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    INTERFACE       reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    RETURN          reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    TRUE            reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    FALSE           reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    NOT             reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    LPAREN          reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    AWAIT           reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    NUMBER          reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    REF             reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    POINTER         reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    error           reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    $end            reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    RBRACE          reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)
    SEMI            reduce using rule 48 (statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE .)


state 224

    (62) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    expression                     shift and go to state 13
    program                        shift and go to state 230
    statement                      shift and go to state 2
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 225

    (74) pattern_list -> pattern_list COMMA pattern .

    RPAREN          reduce using rule 74 (pattern_list -> pattern_list COMMA pattern .)
    COMMA           reduce using rule 74 (pattern_list -> pattern_list COMMA pattern .)


state 226

    (66) match_case -> pattern ARM program SEMI .

    RBRACE          reduce using rule 66 (match_case -> pattern ARM program SEMI .)
    ID              reduce using rule 66 (match_case -> pattern ARM program SEMI .)
    NUMBER          reduce using rule 66 (match_case -> pattern ARM program SEMI .)
    STRING          reduce using rule 66 (match_case -> pattern ARM program SEMI .)
    UNDERSCORE      reduce using rule 66 (match_case -> pattern ARM program SEMI .)
    LPAREN          reduce using rule 66 (match_case -> pattern ARM program SEMI .)


state 227

    (79) function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program . RBRACE
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    RBRACE          shift and go to state 231
    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    statement                      shift and go to state 35
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    expression                     shift and go to state 13
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 228

    (94) function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .

    FOR             reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    IF              reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    MATCH           reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    WHILE           reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    ID              reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    ASYNC           reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    FN              reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    CLASS           reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    ENUM            reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    NAMESPACE       reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    INTERFACE       reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    RETURN          reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    TRUE            reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    FALSE           reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    NOT             reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    LPAREN          reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    AWAIT           reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    NUMBER          reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    REF             reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    POINTER         reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    error           reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    $end            reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    RBRACE          reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    SEMI            reduce using rule 94 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)


state 229

    (105) variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .

    SEMI            reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    FOR             reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    IF              reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    MATCH           reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    WHILE           reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    ID              reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    ASYNC           reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    FN              reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    CLASS           reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    ENUM            reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    NAMESPACE       reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    RETURN          reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    TRUE            reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    FALSE           reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    NOT             reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    LPAREN          reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    AWAIT           reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    NUMBER          reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    REF             reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    POINTER         reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    error           reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    $end            reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)
    RBRACE          reduce using rule 105 (variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI .)


state 230

    (62) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program . RBRACE
    (1) program -> program . statement
    (3) statement -> . function_definition
    (4) statement -> . class_definition
    (5) statement -> . struct_definition
    (6) statement -> . enum_definition
    (7) statement -> . namespace_definition
    (8) statement -> . variable_declaration SEMI
    (9) statement -> . interface_definition
    (10) statement -> . return_statement SEMI
    (48) statement -> . FOR ID IN expression RANGE expression LBRACE program RBRACE
    (61) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE
    (62) statement -> . IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE
    (63) statement -> . MATCH LPAREN expression RPAREN LBRACE match_cases RBRACE
    (81) statement -> . WHILE LPAREN expression RPAREN LBRACE program RBRACE
    (97) statement -> . variable_declaration
    (98) statement -> . ID ASSIGN expression
    (99) statement -> . expression
    (79) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (94) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE
    (95) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt LBRACE RBRACE
    (96) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (109) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (110) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (13) namespace_definition -> . NAMESPACE ID LBRACE program RBRACE
    (14) namespace_definition -> . NAMESPACE ID LBRACE RBRACE
    (101) variable_declaration -> . type_specifier ID LPAREN arg_list_opt RPAREN SEMI
    (102) variable_declaration -> . type_specifier ID SEMI
    (103) variable_declaration -> . type_specifier ID ASSIGN expression SEMI
    (104) variable_declaration -> . type_specifier ID LBRACE arg_list_opt RBRACE SEMI
    (105) variable_declaration -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI
    (106) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (15) return_statement -> . RETURN expression
    (11) expression -> . TRUE
    (12) expression -> . FALSE
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LTHEN expression
    (44) expression -> . expression RTHEN expression
    (45) expression -> . expression LEQ expression
    (46) expression -> . expression GEQ expression
    (47) expression -> . NOT expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . ID LPAREN arg_list_opt RPAREN
    (80) expression -> . AWAIT expression
    (83) expression -> . NUMBER
    (84) expression -> . ID
    (85) expression -> . REF ID
    (86) expression -> . POINTER expression
    (100) expression -> . error
    (35) type_specifier -> . ID
    (36) type_specifier -> . type_with_generics
    (37) type_specifier -> . POINTER type_specifier
    (38) type_specifier -> . REF type_specifier
    (17) type_with_generics -> . ID LANGLE type_list RANGLE
    (18) type_with_generics -> . ID empty

    RBRACE          shift and go to state 232
    FOR             shift and go to state 11
    IF              shift and go to state 14
    MATCH           shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 12
    ASYNC           shift and go to state 18
    FN              shift and go to state 19
    CLASS           shift and go to state 21
    ENUM            shift and go to state 22
    NAMESPACE       shift and go to state 23
    INTERFACE       shift and go to state 25
    RETURN          shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 15
    AWAIT           shift and go to state 30
    NUMBER          shift and go to state 31
    REF             shift and go to state 32
    POINTER         shift and go to state 33
    error           shift and go to state 34

    expression                     shift and go to state 13
    statement                      shift and go to state 35
    function_definition            shift and go to state 3
    class_definition               shift and go to state 4
    struct_definition              shift and go to state 5
    enum_definition                shift and go to state 6
    namespace_definition           shift and go to state 7
    variable_declaration           shift and go to state 8
    interface_definition           shift and go to state 9
    return_statement               shift and go to state 10
    type_with_generics             shift and go to state 20
    type_specifier                 shift and go to state 24

state 231

    (79) function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .

    FOR             reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    IF              reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    MATCH           reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    WHILE           reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    ID              reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    ASYNC           reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    FN              reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    CLASS           reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    ENUM            reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    NAMESPACE       reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    INTERFACE       reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    RETURN          reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    TRUE            reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    FALSE           reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    NOT             reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    LPAREN          reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    AWAIT           reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    NUMBER          reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    REF             reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    POINTER         reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    error           reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    $end            reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    RBRACE          reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)
    SEMI            reduce using rule 79 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE .)


state 232

    (62) statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .

    FOR             reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    IF              reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    MATCH           reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    WHILE           reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    ID              reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    ASYNC           reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    FN              reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    CLASS           reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    ENUM            reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    NAMESPACE       reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    INTERFACE       reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RETURN          reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    TRUE            reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    FALSE           reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    NOT             reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    LPAREN          reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    AWAIT           reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    NUMBER          reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    REF             reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    POINTER         reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    error           reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    $end            reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    RBRACE          reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)
    SEMI            reduce using rule 62 (statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMI in state 8 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 12 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 58 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for EQ in state 72 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 72 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 72 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for MOD in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for EQ in state 73 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 73 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 73 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for MOD in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 78 resolved as shift
WARNING: shift/reduce conflict for OR in state 78 resolved as shift
WARNING: shift/reduce conflict for EQ in state 78 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 78 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 78 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 78 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 78 resolved as shift
WARNING: shift/reduce conflict for MOD in state 78 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 80 resolved as shift
WARNING: shift/reduce conflict for AND in state 102 resolved as shift
WARNING: shift/reduce conflict for OR in state 102 resolved as shift
WARNING: shift/reduce conflict for EQ in state 102 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 102 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 102 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 102 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 102 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 102 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 102 resolved as shift
WARNING: shift/reduce conflict for MOD in state 102 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (type_specifier -> ID)
WARNING: rejected rule (expression -> ID) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (type_specifier -> ID)
WARNING: rejected rule (empty -> <empty>) in state 12
WARNING: reduce/reduce conflict in state 75 resolved using rule (type_specifier -> ID)
WARNING: rejected rule (expression -> REF ID) in state 75
WARNING: reduce/reduce conflict in state 75 resolved using rule (type_specifier -> ID)
WARNING: rejected rule (empty -> <empty>) in state 75
WARNING: reduce/reduce conflict in state 80 resolved using rule (type_specifier -> ID)
WARNING: rejected rule (expression -> ID) in state 80
WARNING: reduce/reduce conflict in state 80 resolved using rule (type_specifier -> ID)
WARNING: rejected rule (empty -> <empty>) in state 80
WARNING: reduce/reduce conflict in state 85 resolved using rule (arg_list_opt -> empty)
WARNING: rejected rule (arg_list -> empty) in state 85
WARNING: reduce/reduce conflict in state 87 resolved using rule (type_specifier -> ID)
WARNING: rejected rule (empty -> <empty>) in state 87
WARNING: reduce/reduce conflict in state 159 resolved using rule (class_body -> empty)
WARNING: rejected rule (struct_body -> empty) in state 159
WARNING: Rule (struct_body -> empty) is never reduced
