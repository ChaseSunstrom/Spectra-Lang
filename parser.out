Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALL
    ANALYZE
    AT
    BREAK
    CATCH
    CONST
    CONTINUE
    COPY
    DEFER
    DELETE
    EXPORT
    FINALLY
    LBRACKET
    MACRO
    MOVE
    OPERATOR
    OVERRIDE
    PRIV
    PUB
    RANGE
    RANGE_INCLUSIVE
    RBRACKET
    REFERENCE
    STATIC
    STRUCT
    TRY
    UNSAFE
    VAR
    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     program -> empty
Rule 4     statement -> function_definition
Rule 5     statement -> class_definition
Rule 6     statement -> struct_definition
Rule 7     statement -> enum_definition
Rule 8     statement -> namespace_definition
Rule 9     statement -> variable SEMI
Rule 10    statement -> interface_definition
Rule 11    statement -> return_statement SEMI
Rule 12    statement -> use_statement
Rule 13    expression -> TRUE
Rule 14    expression -> FALSE
Rule 15    namespace_definition -> NAMESPACE ID block
Rule 16    return_statement -> RETURN expression
Rule 17    block -> LBRACE program RBRACE
Rule 18    type_with_generics -> ID LANGLE type_list RANGLE
Rule 19    type_with_generics -> ID empty
Rule 20    type_list -> type_list COMMA type_specifier
Rule 21    type_list -> type_specifier
Rule 22    class_body -> class_body class_member
Rule 23    class_body -> empty
Rule 24    class_member -> variable SEMI
Rule 25    class_member -> function_definition
Rule 26    struct_body -> struct_body struct_member
Rule 27    struct_body -> empty
Rule 28    expression -> expression INCREMENT
Rule 29    expression -> expression DECREMENT
Rule 30    expression -> INCREMENT expression
Rule 31    expression -> DECREMENT expression
Rule 32    struct_member -> variable SEMI
Rule 33    struct_member -> function_definition
Rule 34    enum_body -> enum_body enum_member
Rule 35    enum_body -> enum_member
Rule 36    enum_member -> ID
Rule 37    enum_member -> ID ASSIGN NUMBER
Rule 38    extends_opt -> EXTENDS type_with_generics
Rule 39    extends_opt -> empty
Rule 40    type_specifier -> ID
Rule 41    type_specifier -> I8
Rule 42    type_specifier -> I16
Rule 43    type_specifier -> I32
Rule 44    type_specifier -> I64
Rule 45    type_specifier -> U8
Rule 46    type_specifier -> U16
Rule 47    type_specifier -> U32
Rule 48    type_specifier -> U64
Rule 49    type_specifier -> F32
Rule 50    type_specifier -> F64
Rule 51    type_specifier -> BOOL
Rule 52    type_specifier -> STRING
Rule 53    type_specifier -> type_with_generics
Rule 54    type_specifier -> POINTER type_specifier
Rule 55    type_specifier -> REF type_specifier
Rule 56    expression -> expression AND expression
Rule 57    expression -> expression OR expression
Rule 58    expression -> expression EQ expression
Rule 59    expression -> expression NEQ expression
Rule 60    expression -> expression LTHEN expression
Rule 61    expression -> expression RTHEN expression
Rule 62    expression -> expression LEQ expression
Rule 63    expression -> expression GEQ expression
Rule 64    expression -> NOT expression
Rule 65    statement -> for_block
Rule 66    for_block -> FOR ID IN expression block
Rule 67    for_block -> FOR ID IN LPAREN expression RPAREN block
Rule 68    statement -> for_block else_block
Rule 69    expression -> expression PLUS expression
Rule 70    expression -> expression MINUS expression
Rule 71    expression -> expression TIMES expression
Rule 72    expression -> expression DIVIDE expression
Rule 73    expression -> expression MOD expression
Rule 74    expression -> LPAREN expression RPAREN
Rule 75    expression -> ID LPAREN arg_list_opt RPAREN
Rule 76    arg_list_opt -> arg_list
Rule 77    arg_list_opt -> empty
Rule 78    arg_list -> arg_list COMMA expression
Rule 79    arg_list -> expression
Rule 80    arg_list -> empty
Rule 81    statement -> if_block else_if_blocks else_block
Rule 82    statement -> if_block else_if_blocks
Rule 83    statement -> if_block else_block
Rule 84    statement -> if_block
Rule 85    if_block -> IF expression block
Rule 86    else_if_blocks -> else_if_blocks else_if_block
Rule 87    else_if_blocks -> else_if_block
Rule 88    else_if_block -> ELSE IF expression block
Rule 89    else_block -> ELSE block
Rule 90    statement -> MATCH expression LBRACE match_cases RBRACE
Rule 91    match_cases -> match_cases match_case
Rule 92    match_cases -> match_case
Rule 93    match_case -> pattern ARM program SEMI
Rule 94    pattern -> simple_pattern
Rule 95    pattern -> tuple_pattern
Rule 96    simple_pattern -> ID
Rule 97    simple_pattern -> NUMBER
Rule 98    simple_pattern -> STRING
Rule 99    simple_pattern -> UNDERSCORE
Rule 100   tuple_pattern -> LPAREN pattern_list RPAREN
Rule 101   pattern_list -> pattern_list COMMA pattern
Rule 102   pattern_list -> pattern
Rule 103   qualified_name -> qualified_name DOUBLE_COLON ID
Rule 104   qualified_name -> ID
Rule 105   use_statement -> USE qualified_name SEMI
Rule 106   function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block
Rule 107   expression -> AWAIT expression
Rule 108   statement -> while_block
Rule 109   while_block -> WHILE expression block
Rule 110   statement -> while_block else_block
Rule 111   empty -> <empty>
Rule 112   expression -> NUMBER
Rule 113   expression -> ID
Rule 114   expression -> REF ID
Rule 115   expression -> POINTER expression
Rule 116   parameters_opt -> parameters_list
Rule 117   parameters_opt -> empty
Rule 118   parameters_list -> parameters_list COMMA parameter
Rule 119   parameters_list -> parameter
Rule 120   parameter -> type_specifier ID
Rule 121   return_type_opt -> ARROW type_specifier
Rule 122   return_type_opt -> empty
Rule 123   function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block
Rule 124   class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE
Rule 125   statement -> variable
Rule 126   statement -> ID ASSIGN expression
Rule 127   statement -> expression
Rule 128   expression -> error
Rule 129   variable -> type_specifier ID
Rule 130   variable -> type_specifier ID ASSIGN expression
Rule 131   variable -> type_specifier ID LPAREN arg_list_opt RPAREN
Rule 132   variable -> type_specifier ID LBRACE arg_list_opt RBRACE
Rule 133   variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN
Rule 134   variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN
Rule 135   interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE
Rule 136   interface_body -> interface_body function_definition
Rule 137   interface_body -> empty
Rule 138   struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
Rule 139   enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE

Terminals, with rules where they appear

ALL                  : 
ANALYZE              : 
AND                  : 56
ARM                  : 93
ARROW                : 121
ASSIGN               : 37 126 130 133 134
ASYNC                : 106
AT                   : 
AWAIT                : 107
BOOL                 : 51
BREAK                : 
CATCH                : 
CLASS                : 124 138
COMMA                : 20 78 101 118
CONST                : 
CONTINUE             : 
COPY                 : 
DECREMENT            : 29 31
DEFER                : 
DELETE               : 
DIVIDE               : 72
DOUBLE_COLON         : 103
ELSE                 : 88 89
ENUM                 : 139
EQ                   : 58
EXPORT               : 
EXTENDS              : 38
F32                  : 49
F64                  : 50
FALSE                : 14
FINALLY              : 
FN                   : 106 123
FOR                  : 66 67
GEQ                  : 63
I16                  : 42
I32                  : 43
I64                  : 44
I8                   : 41
ID                   : 15 18 19 36 37 40 66 67 75 96 103 104 106 113 114 120 126 129 130 131 132 133 134
IF                   : 85 88
IN                   : 66 67
INCREMENT            : 28 30
INTERFACE            : 135
LANGLE               : 18
LBRACE               : 17 90 124 132 135 138 139
LBRACKET             : 
LEQ                  : 62
LPAREN               : 67 74 75 100 106 123 131 133 134
LTHEN                : 60
MACRO                : 
MATCH                : 90
MINUS                : 70
MOD                  : 73
MOVE                 : 
NAMESPACE            : 15
NEQ                  : 59
NEW                  : 133
NOT                  : 64
NUMBER               : 37 97 112
OPERATOR             : 
OR                   : 57
OVERRIDE             : 
PLUS                 : 69
POINTER              : 54 115
PRIV                 : 
PUB                  : 
RANGE                : 
RANGE_INCLUSIVE      : 
RANGLE               : 18
RBRACE               : 17 90 124 132 135 138 139
RBRACKET             : 
REF                  : 55 114
REFERENCE            : 
RETURN               : 16
RPAREN               : 67 74 75 100 106 123 131 133 134
RTHEN                : 61
SEMI                 : 9 11 24 32 93 105
STATIC               : 
STRING               : 52 98
STRUCT               : 
TIMES                : 71
TRUE                 : 13
TRY                  : 
U16                  : 46
U32                  : 47
U64                  : 48
U8                   : 45
UNDERSCORE           : 99
UNSAFE               : 
USE                  : 105
VAR                  : 
VOID                 : 
WHILE                : 109
error                : 128

Nonterminals, with rules where they appear

arg_list             : 76 78
arg_list_opt         : 75 131 132 133 134
block                : 15 66 67 85 88 89 106 109 123
class_body           : 22 124
class_definition     : 5
class_member         : 22
else_block           : 68 81 83 110
else_if_block        : 86 87
else_if_blocks       : 81 82 86
empty                : 3 19 23 27 39 77 80 117 122 137
enum_body            : 34 139
enum_definition      : 7
enum_member          : 34 35
expression           : 16 28 29 30 31 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 66 67 69 69 70 70 71 71 72 72 73 73 74 78 79 85 88 90 107 109 115 126 127 130 134
extends_opt          : 124 138
for_block            : 65 68
function_definition  : 4 25 33 136
if_block             : 81 82 83 84
interface_body       : 135 136
interface_definition : 10
match_case           : 91 92
match_cases          : 90 91
namespace_definition : 8
parameter            : 118 119
parameters_list      : 116 118
parameters_opt       : 106 123
pattern              : 93 101 102
pattern_list         : 100 101
program              : 1 17 93 0
qualified_name       : 103 105
return_statement     : 11
return_type_opt      : 106 123
simple_pattern       : 94
statement            : 1 2
struct_body          : 26 138
struct_definition    : 6
struct_member        : 26
tuple_pattern        : 95
type_list            : 18 20
type_specifier       : 20 21 54 55 120 121 129 130 131 132 133 133 134
type_with_generics   : 38 53 123 124 135 138 139
use_statement        : 12
variable             : 9 24 32 125
while_block          : 108 110

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . empty
    (4) statement -> . function_definition
    (5) statement -> . class_definition
    (6) statement -> . struct_definition
    (7) statement -> . enum_definition
    (8) statement -> . namespace_definition
    (9) statement -> . variable SEMI
    (10) statement -> . interface_definition
    (11) statement -> . return_statement SEMI
    (12) statement -> . use_statement
    (65) statement -> . for_block
    (68) statement -> . for_block else_block
    (81) statement -> . if_block else_if_blocks else_block
    (82) statement -> . if_block else_if_blocks
    (83) statement -> . if_block else_block
    (84) statement -> . if_block
    (90) statement -> . MATCH expression LBRACE match_cases RBRACE
    (108) statement -> . while_block
    (110) statement -> . while_block else_block
    (125) statement -> . variable
    (126) statement -> . ID ASSIGN expression
    (127) statement -> . expression
    (111) empty -> .
    (106) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block
    (123) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block
    (124) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (138) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (139) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (15) namespace_definition -> . NAMESPACE ID block
    (129) variable -> . type_specifier ID
    (130) variable -> . type_specifier ID ASSIGN expression
    (131) variable -> . type_specifier ID LPAREN arg_list_opt RPAREN
    (132) variable -> . type_specifier ID LBRACE arg_list_opt RBRACE
    (133) variable -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN
    (134) variable -> . type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN
    (135) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (16) return_statement -> . RETURN expression
    (105) use_statement -> . USE qualified_name SEMI
    (66) for_block -> . FOR ID IN expression block
    (67) for_block -> . FOR ID IN LPAREN expression RPAREN block
    (85) if_block -> . IF expression block
    (109) while_block -> . WHILE expression block
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ASYNC resolved as shift
  ! shift/reduce conflict for FN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for NAMESPACE resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for USE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for AWAIT resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for REF resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for I8 resolved as shift
  ! shift/reduce conflict for I16 resolved as shift
  ! shift/reduce conflict for I32 resolved as shift
  ! shift/reduce conflict for I64 resolved as shift
  ! shift/reduce conflict for U8 resolved as shift
  ! shift/reduce conflict for U16 resolved as shift
  ! shift/reduce conflict for U32 resolved as shift
  ! shift/reduce conflict for U64 resolved as shift
  ! shift/reduce conflict for F32 resolved as shift
  ! shift/reduce conflict for F64 resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    MATCH           shift and go to state 15
    ID              shift and go to state 18
    $end            reduce using rule 111 (empty -> .)
    ASYNC           shift and go to state 19
    FN              shift and go to state 20
    CLASS           shift and go to state 23
    ENUM            shift and go to state 24
    NAMESPACE       shift and go to state 25
    INTERFACE       shift and go to state 27
    RETURN          shift and go to state 28
    USE             shift and go to state 29
    FOR             shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 40
    POINTER         shift and go to state 41
    error           shift and go to state 42
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54

  ! MATCH           [ reduce using rule 111 (empty -> .) ]
  ! ID              [ reduce using rule 111 (empty -> .) ]
  ! ASYNC           [ reduce using rule 111 (empty -> .) ]
  ! FN              [ reduce using rule 111 (empty -> .) ]
  ! CLASS           [ reduce using rule 111 (empty -> .) ]
  ! ENUM            [ reduce using rule 111 (empty -> .) ]
  ! NAMESPACE       [ reduce using rule 111 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 111 (empty -> .) ]
  ! RETURN          [ reduce using rule 111 (empty -> .) ]
  ! USE             [ reduce using rule 111 (empty -> .) ]
  ! FOR             [ reduce using rule 111 (empty -> .) ]
  ! IF              [ reduce using rule 111 (empty -> .) ]
  ! WHILE           [ reduce using rule 111 (empty -> .) ]
  ! TRUE            [ reduce using rule 111 (empty -> .) ]
  ! FALSE           [ reduce using rule 111 (empty -> .) ]
  ! INCREMENT       [ reduce using rule 111 (empty -> .) ]
  ! DECREMENT       [ reduce using rule 111 (empty -> .) ]
  ! NOT             [ reduce using rule 111 (empty -> .) ]
  ! LPAREN          [ reduce using rule 111 (empty -> .) ]
  ! AWAIT           [ reduce using rule 111 (empty -> .) ]
  ! NUMBER          [ reduce using rule 111 (empty -> .) ]
  ! REF             [ reduce using rule 111 (empty -> .) ]
  ! POINTER         [ reduce using rule 111 (empty -> .) ]
  ! error           [ reduce using rule 111 (empty -> .) ]
  ! I8              [ reduce using rule 111 (empty -> .) ]
  ! I16             [ reduce using rule 111 (empty -> .) ]
  ! I32             [ reduce using rule 111 (empty -> .) ]
  ! I64             [ reduce using rule 111 (empty -> .) ]
  ! U8              [ reduce using rule 111 (empty -> .) ]
  ! U16             [ reduce using rule 111 (empty -> .) ]
  ! U32             [ reduce using rule 111 (empty -> .) ]
  ! U64             [ reduce using rule 111 (empty -> .) ]
  ! F32             [ reduce using rule 111 (empty -> .) ]
  ! F64             [ reduce using rule 111 (empty -> .) ]
  ! BOOL            [ reduce using rule 111 (empty -> .) ]
  ! STRING          [ reduce using rule 111 (empty -> .) ]

    program                        shift and go to state 1
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    function_definition            shift and go to state 4
    class_definition               shift and go to state 5
    struct_definition              shift and go to state 6
    enum_definition                shift and go to state 7
    namespace_definition           shift and go to state 8
    variable                       shift and go to state 9
    interface_definition           shift and go to state 10
    return_statement               shift and go to state 11
    use_statement                  shift and go to state 12
    for_block                      shift and go to state 13
    if_block                       shift and go to state 14
    expression                     shift and go to state 16
    while_block                    shift and go to state 17
    type_with_generics             shift and go to state 22
    type_specifier                 shift and go to state 26

state 1

    (0) S' -> program .
    (1) program -> program . statement
    (4) statement -> . function_definition
    (5) statement -> . class_definition
    (6) statement -> . struct_definition
    (7) statement -> . enum_definition
    (8) statement -> . namespace_definition
    (9) statement -> . variable SEMI
    (10) statement -> . interface_definition
    (11) statement -> . return_statement SEMI
    (12) statement -> . use_statement
    (65) statement -> . for_block
    (68) statement -> . for_block else_block
    (81) statement -> . if_block else_if_blocks else_block
    (82) statement -> . if_block else_if_blocks
    (83) statement -> . if_block else_block
    (84) statement -> . if_block
    (90) statement -> . MATCH expression LBRACE match_cases RBRACE
    (108) statement -> . while_block
    (110) statement -> . while_block else_block
    (125) statement -> . variable
    (126) statement -> . ID ASSIGN expression
    (127) statement -> . expression
    (106) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block
    (123) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block
    (124) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (138) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (139) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (15) namespace_definition -> . NAMESPACE ID block
    (129) variable -> . type_specifier ID
    (130) variable -> . type_specifier ID ASSIGN expression
    (131) variable -> . type_specifier ID LPAREN arg_list_opt RPAREN
    (132) variable -> . type_specifier ID LBRACE arg_list_opt RBRACE
    (133) variable -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN
    (134) variable -> . type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN
    (135) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (16) return_statement -> . RETURN expression
    (105) use_statement -> . USE qualified_name SEMI
    (66) for_block -> . FOR ID IN expression block
    (67) for_block -> . FOR ID IN LPAREN expression RPAREN block
    (85) if_block -> . IF expression block
    (109) while_block -> . WHILE expression block
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    MATCH           shift and go to state 15
    ID              shift and go to state 18
    ASYNC           shift and go to state 19
    FN              shift and go to state 20
    CLASS           shift and go to state 23
    ENUM            shift and go to state 24
    NAMESPACE       shift and go to state 25
    INTERFACE       shift and go to state 27
    RETURN          shift and go to state 28
    USE             shift and go to state 29
    FOR             shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 40
    POINTER         shift and go to state 41
    error           shift and go to state 42
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54

    statement                      shift and go to state 55
    function_definition            shift and go to state 4
    class_definition               shift and go to state 5
    struct_definition              shift and go to state 6
    enum_definition                shift and go to state 7
    namespace_definition           shift and go to state 8
    variable                       shift and go to state 9
    interface_definition           shift and go to state 10
    return_statement               shift and go to state 11
    use_statement                  shift and go to state 12
    for_block                      shift and go to state 13
    if_block                       shift and go to state 14
    expression                     shift and go to state 16
    while_block                    shift and go to state 17
    type_with_generics             shift and go to state 22
    type_specifier                 shift and go to state 26

state 2

    (2) program -> statement .

    MATCH           reduce using rule 2 (program -> statement .)
    ID              reduce using rule 2 (program -> statement .)
    ASYNC           reduce using rule 2 (program -> statement .)
    FN              reduce using rule 2 (program -> statement .)
    CLASS           reduce using rule 2 (program -> statement .)
    ENUM            reduce using rule 2 (program -> statement .)
    NAMESPACE       reduce using rule 2 (program -> statement .)
    INTERFACE       reduce using rule 2 (program -> statement .)
    RETURN          reduce using rule 2 (program -> statement .)
    USE             reduce using rule 2 (program -> statement .)
    FOR             reduce using rule 2 (program -> statement .)
    IF              reduce using rule 2 (program -> statement .)
    WHILE           reduce using rule 2 (program -> statement .)
    TRUE            reduce using rule 2 (program -> statement .)
    FALSE           reduce using rule 2 (program -> statement .)
    INCREMENT       reduce using rule 2 (program -> statement .)
    DECREMENT       reduce using rule 2 (program -> statement .)
    NOT             reduce using rule 2 (program -> statement .)
    LPAREN          reduce using rule 2 (program -> statement .)
    AWAIT           reduce using rule 2 (program -> statement .)
    NUMBER          reduce using rule 2 (program -> statement .)
    REF             reduce using rule 2 (program -> statement .)
    POINTER         reduce using rule 2 (program -> statement .)
    error           reduce using rule 2 (program -> statement .)
    I8              reduce using rule 2 (program -> statement .)
    I16             reduce using rule 2 (program -> statement .)
    I32             reduce using rule 2 (program -> statement .)
    I64             reduce using rule 2 (program -> statement .)
    U8              reduce using rule 2 (program -> statement .)
    U16             reduce using rule 2 (program -> statement .)
    U32             reduce using rule 2 (program -> statement .)
    U64             reduce using rule 2 (program -> statement .)
    F32             reduce using rule 2 (program -> statement .)
    F64             reduce using rule 2 (program -> statement .)
    BOOL            reduce using rule 2 (program -> statement .)
    STRING          reduce using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)
    RBRACE          reduce using rule 2 (program -> statement .)
    SEMI            reduce using rule 2 (program -> statement .)


state 3

    (3) program -> empty .

    MATCH           reduce using rule 3 (program -> empty .)
    ID              reduce using rule 3 (program -> empty .)
    ASYNC           reduce using rule 3 (program -> empty .)
    FN              reduce using rule 3 (program -> empty .)
    CLASS           reduce using rule 3 (program -> empty .)
    ENUM            reduce using rule 3 (program -> empty .)
    NAMESPACE       reduce using rule 3 (program -> empty .)
    INTERFACE       reduce using rule 3 (program -> empty .)
    RETURN          reduce using rule 3 (program -> empty .)
    USE             reduce using rule 3 (program -> empty .)
    FOR             reduce using rule 3 (program -> empty .)
    IF              reduce using rule 3 (program -> empty .)
    WHILE           reduce using rule 3 (program -> empty .)
    TRUE            reduce using rule 3 (program -> empty .)
    FALSE           reduce using rule 3 (program -> empty .)
    INCREMENT       reduce using rule 3 (program -> empty .)
    DECREMENT       reduce using rule 3 (program -> empty .)
    NOT             reduce using rule 3 (program -> empty .)
    LPAREN          reduce using rule 3 (program -> empty .)
    AWAIT           reduce using rule 3 (program -> empty .)
    NUMBER          reduce using rule 3 (program -> empty .)
    REF             reduce using rule 3 (program -> empty .)
    POINTER         reduce using rule 3 (program -> empty .)
    error           reduce using rule 3 (program -> empty .)
    I8              reduce using rule 3 (program -> empty .)
    I16             reduce using rule 3 (program -> empty .)
    I32             reduce using rule 3 (program -> empty .)
    I64             reduce using rule 3 (program -> empty .)
    U8              reduce using rule 3 (program -> empty .)
    U16             reduce using rule 3 (program -> empty .)
    U32             reduce using rule 3 (program -> empty .)
    U64             reduce using rule 3 (program -> empty .)
    F32             reduce using rule 3 (program -> empty .)
    F64             reduce using rule 3 (program -> empty .)
    BOOL            reduce using rule 3 (program -> empty .)
    STRING          reduce using rule 3 (program -> empty .)
    $end            reduce using rule 3 (program -> empty .)
    RBRACE          reduce using rule 3 (program -> empty .)
    SEMI            reduce using rule 3 (program -> empty .)


state 4

    (4) statement -> function_definition .

    MATCH           reduce using rule 4 (statement -> function_definition .)
    ID              reduce using rule 4 (statement -> function_definition .)
    ASYNC           reduce using rule 4 (statement -> function_definition .)
    FN              reduce using rule 4 (statement -> function_definition .)
    CLASS           reduce using rule 4 (statement -> function_definition .)
    ENUM            reduce using rule 4 (statement -> function_definition .)
    NAMESPACE       reduce using rule 4 (statement -> function_definition .)
    INTERFACE       reduce using rule 4 (statement -> function_definition .)
    RETURN          reduce using rule 4 (statement -> function_definition .)
    USE             reduce using rule 4 (statement -> function_definition .)
    FOR             reduce using rule 4 (statement -> function_definition .)
    IF              reduce using rule 4 (statement -> function_definition .)
    WHILE           reduce using rule 4 (statement -> function_definition .)
    TRUE            reduce using rule 4 (statement -> function_definition .)
    FALSE           reduce using rule 4 (statement -> function_definition .)
    INCREMENT       reduce using rule 4 (statement -> function_definition .)
    DECREMENT       reduce using rule 4 (statement -> function_definition .)
    NOT             reduce using rule 4 (statement -> function_definition .)
    LPAREN          reduce using rule 4 (statement -> function_definition .)
    AWAIT           reduce using rule 4 (statement -> function_definition .)
    NUMBER          reduce using rule 4 (statement -> function_definition .)
    REF             reduce using rule 4 (statement -> function_definition .)
    POINTER         reduce using rule 4 (statement -> function_definition .)
    error           reduce using rule 4 (statement -> function_definition .)
    I8              reduce using rule 4 (statement -> function_definition .)
    I16             reduce using rule 4 (statement -> function_definition .)
    I32             reduce using rule 4 (statement -> function_definition .)
    I64             reduce using rule 4 (statement -> function_definition .)
    U8              reduce using rule 4 (statement -> function_definition .)
    U16             reduce using rule 4 (statement -> function_definition .)
    U32             reduce using rule 4 (statement -> function_definition .)
    U64             reduce using rule 4 (statement -> function_definition .)
    F32             reduce using rule 4 (statement -> function_definition .)
    F64             reduce using rule 4 (statement -> function_definition .)
    BOOL            reduce using rule 4 (statement -> function_definition .)
    STRING          reduce using rule 4 (statement -> function_definition .)
    $end            reduce using rule 4 (statement -> function_definition .)
    RBRACE          reduce using rule 4 (statement -> function_definition .)
    SEMI            reduce using rule 4 (statement -> function_definition .)


state 5

    (5) statement -> class_definition .

    MATCH           reduce using rule 5 (statement -> class_definition .)
    ID              reduce using rule 5 (statement -> class_definition .)
    ASYNC           reduce using rule 5 (statement -> class_definition .)
    FN              reduce using rule 5 (statement -> class_definition .)
    CLASS           reduce using rule 5 (statement -> class_definition .)
    ENUM            reduce using rule 5 (statement -> class_definition .)
    NAMESPACE       reduce using rule 5 (statement -> class_definition .)
    INTERFACE       reduce using rule 5 (statement -> class_definition .)
    RETURN          reduce using rule 5 (statement -> class_definition .)
    USE             reduce using rule 5 (statement -> class_definition .)
    FOR             reduce using rule 5 (statement -> class_definition .)
    IF              reduce using rule 5 (statement -> class_definition .)
    WHILE           reduce using rule 5 (statement -> class_definition .)
    TRUE            reduce using rule 5 (statement -> class_definition .)
    FALSE           reduce using rule 5 (statement -> class_definition .)
    INCREMENT       reduce using rule 5 (statement -> class_definition .)
    DECREMENT       reduce using rule 5 (statement -> class_definition .)
    NOT             reduce using rule 5 (statement -> class_definition .)
    LPAREN          reduce using rule 5 (statement -> class_definition .)
    AWAIT           reduce using rule 5 (statement -> class_definition .)
    NUMBER          reduce using rule 5 (statement -> class_definition .)
    REF             reduce using rule 5 (statement -> class_definition .)
    POINTER         reduce using rule 5 (statement -> class_definition .)
    error           reduce using rule 5 (statement -> class_definition .)
    I8              reduce using rule 5 (statement -> class_definition .)
    I16             reduce using rule 5 (statement -> class_definition .)
    I32             reduce using rule 5 (statement -> class_definition .)
    I64             reduce using rule 5 (statement -> class_definition .)
    U8              reduce using rule 5 (statement -> class_definition .)
    U16             reduce using rule 5 (statement -> class_definition .)
    U32             reduce using rule 5 (statement -> class_definition .)
    U64             reduce using rule 5 (statement -> class_definition .)
    F32             reduce using rule 5 (statement -> class_definition .)
    F64             reduce using rule 5 (statement -> class_definition .)
    BOOL            reduce using rule 5 (statement -> class_definition .)
    STRING          reduce using rule 5 (statement -> class_definition .)
    $end            reduce using rule 5 (statement -> class_definition .)
    RBRACE          reduce using rule 5 (statement -> class_definition .)
    SEMI            reduce using rule 5 (statement -> class_definition .)


state 6

    (6) statement -> struct_definition .

    MATCH           reduce using rule 6 (statement -> struct_definition .)
    ID              reduce using rule 6 (statement -> struct_definition .)
    ASYNC           reduce using rule 6 (statement -> struct_definition .)
    FN              reduce using rule 6 (statement -> struct_definition .)
    CLASS           reduce using rule 6 (statement -> struct_definition .)
    ENUM            reduce using rule 6 (statement -> struct_definition .)
    NAMESPACE       reduce using rule 6 (statement -> struct_definition .)
    INTERFACE       reduce using rule 6 (statement -> struct_definition .)
    RETURN          reduce using rule 6 (statement -> struct_definition .)
    USE             reduce using rule 6 (statement -> struct_definition .)
    FOR             reduce using rule 6 (statement -> struct_definition .)
    IF              reduce using rule 6 (statement -> struct_definition .)
    WHILE           reduce using rule 6 (statement -> struct_definition .)
    TRUE            reduce using rule 6 (statement -> struct_definition .)
    FALSE           reduce using rule 6 (statement -> struct_definition .)
    INCREMENT       reduce using rule 6 (statement -> struct_definition .)
    DECREMENT       reduce using rule 6 (statement -> struct_definition .)
    NOT             reduce using rule 6 (statement -> struct_definition .)
    LPAREN          reduce using rule 6 (statement -> struct_definition .)
    AWAIT           reduce using rule 6 (statement -> struct_definition .)
    NUMBER          reduce using rule 6 (statement -> struct_definition .)
    REF             reduce using rule 6 (statement -> struct_definition .)
    POINTER         reduce using rule 6 (statement -> struct_definition .)
    error           reduce using rule 6 (statement -> struct_definition .)
    I8              reduce using rule 6 (statement -> struct_definition .)
    I16             reduce using rule 6 (statement -> struct_definition .)
    I32             reduce using rule 6 (statement -> struct_definition .)
    I64             reduce using rule 6 (statement -> struct_definition .)
    U8              reduce using rule 6 (statement -> struct_definition .)
    U16             reduce using rule 6 (statement -> struct_definition .)
    U32             reduce using rule 6 (statement -> struct_definition .)
    U64             reduce using rule 6 (statement -> struct_definition .)
    F32             reduce using rule 6 (statement -> struct_definition .)
    F64             reduce using rule 6 (statement -> struct_definition .)
    BOOL            reduce using rule 6 (statement -> struct_definition .)
    STRING          reduce using rule 6 (statement -> struct_definition .)
    $end            reduce using rule 6 (statement -> struct_definition .)
    RBRACE          reduce using rule 6 (statement -> struct_definition .)
    SEMI            reduce using rule 6 (statement -> struct_definition .)


state 7

    (7) statement -> enum_definition .

    MATCH           reduce using rule 7 (statement -> enum_definition .)
    ID              reduce using rule 7 (statement -> enum_definition .)
    ASYNC           reduce using rule 7 (statement -> enum_definition .)
    FN              reduce using rule 7 (statement -> enum_definition .)
    CLASS           reduce using rule 7 (statement -> enum_definition .)
    ENUM            reduce using rule 7 (statement -> enum_definition .)
    NAMESPACE       reduce using rule 7 (statement -> enum_definition .)
    INTERFACE       reduce using rule 7 (statement -> enum_definition .)
    RETURN          reduce using rule 7 (statement -> enum_definition .)
    USE             reduce using rule 7 (statement -> enum_definition .)
    FOR             reduce using rule 7 (statement -> enum_definition .)
    IF              reduce using rule 7 (statement -> enum_definition .)
    WHILE           reduce using rule 7 (statement -> enum_definition .)
    TRUE            reduce using rule 7 (statement -> enum_definition .)
    FALSE           reduce using rule 7 (statement -> enum_definition .)
    INCREMENT       reduce using rule 7 (statement -> enum_definition .)
    DECREMENT       reduce using rule 7 (statement -> enum_definition .)
    NOT             reduce using rule 7 (statement -> enum_definition .)
    LPAREN          reduce using rule 7 (statement -> enum_definition .)
    AWAIT           reduce using rule 7 (statement -> enum_definition .)
    NUMBER          reduce using rule 7 (statement -> enum_definition .)
    REF             reduce using rule 7 (statement -> enum_definition .)
    POINTER         reduce using rule 7 (statement -> enum_definition .)
    error           reduce using rule 7 (statement -> enum_definition .)
    I8              reduce using rule 7 (statement -> enum_definition .)
    I16             reduce using rule 7 (statement -> enum_definition .)
    I32             reduce using rule 7 (statement -> enum_definition .)
    I64             reduce using rule 7 (statement -> enum_definition .)
    U8              reduce using rule 7 (statement -> enum_definition .)
    U16             reduce using rule 7 (statement -> enum_definition .)
    U32             reduce using rule 7 (statement -> enum_definition .)
    U64             reduce using rule 7 (statement -> enum_definition .)
    F32             reduce using rule 7 (statement -> enum_definition .)
    F64             reduce using rule 7 (statement -> enum_definition .)
    BOOL            reduce using rule 7 (statement -> enum_definition .)
    STRING          reduce using rule 7 (statement -> enum_definition .)
    $end            reduce using rule 7 (statement -> enum_definition .)
    RBRACE          reduce using rule 7 (statement -> enum_definition .)
    SEMI            reduce using rule 7 (statement -> enum_definition .)


state 8

    (8) statement -> namespace_definition .

    MATCH           reduce using rule 8 (statement -> namespace_definition .)
    ID              reduce using rule 8 (statement -> namespace_definition .)
    ASYNC           reduce using rule 8 (statement -> namespace_definition .)
    FN              reduce using rule 8 (statement -> namespace_definition .)
    CLASS           reduce using rule 8 (statement -> namespace_definition .)
    ENUM            reduce using rule 8 (statement -> namespace_definition .)
    NAMESPACE       reduce using rule 8 (statement -> namespace_definition .)
    INTERFACE       reduce using rule 8 (statement -> namespace_definition .)
    RETURN          reduce using rule 8 (statement -> namespace_definition .)
    USE             reduce using rule 8 (statement -> namespace_definition .)
    FOR             reduce using rule 8 (statement -> namespace_definition .)
    IF              reduce using rule 8 (statement -> namespace_definition .)
    WHILE           reduce using rule 8 (statement -> namespace_definition .)
    TRUE            reduce using rule 8 (statement -> namespace_definition .)
    FALSE           reduce using rule 8 (statement -> namespace_definition .)
    INCREMENT       reduce using rule 8 (statement -> namespace_definition .)
    DECREMENT       reduce using rule 8 (statement -> namespace_definition .)
    NOT             reduce using rule 8 (statement -> namespace_definition .)
    LPAREN          reduce using rule 8 (statement -> namespace_definition .)
    AWAIT           reduce using rule 8 (statement -> namespace_definition .)
    NUMBER          reduce using rule 8 (statement -> namespace_definition .)
    REF             reduce using rule 8 (statement -> namespace_definition .)
    POINTER         reduce using rule 8 (statement -> namespace_definition .)
    error           reduce using rule 8 (statement -> namespace_definition .)
    I8              reduce using rule 8 (statement -> namespace_definition .)
    I16             reduce using rule 8 (statement -> namespace_definition .)
    I32             reduce using rule 8 (statement -> namespace_definition .)
    I64             reduce using rule 8 (statement -> namespace_definition .)
    U8              reduce using rule 8 (statement -> namespace_definition .)
    U16             reduce using rule 8 (statement -> namespace_definition .)
    U32             reduce using rule 8 (statement -> namespace_definition .)
    U64             reduce using rule 8 (statement -> namespace_definition .)
    F32             reduce using rule 8 (statement -> namespace_definition .)
    F64             reduce using rule 8 (statement -> namespace_definition .)
    BOOL            reduce using rule 8 (statement -> namespace_definition .)
    STRING          reduce using rule 8 (statement -> namespace_definition .)
    $end            reduce using rule 8 (statement -> namespace_definition .)
    RBRACE          reduce using rule 8 (statement -> namespace_definition .)
    SEMI            reduce using rule 8 (statement -> namespace_definition .)


state 9

    (9) statement -> variable . SEMI
    (125) statement -> variable .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 56
    MATCH           reduce using rule 125 (statement -> variable .)
    ID              reduce using rule 125 (statement -> variable .)
    ASYNC           reduce using rule 125 (statement -> variable .)
    FN              reduce using rule 125 (statement -> variable .)
    CLASS           reduce using rule 125 (statement -> variable .)
    ENUM            reduce using rule 125 (statement -> variable .)
    NAMESPACE       reduce using rule 125 (statement -> variable .)
    INTERFACE       reduce using rule 125 (statement -> variable .)
    RETURN          reduce using rule 125 (statement -> variable .)
    USE             reduce using rule 125 (statement -> variable .)
    FOR             reduce using rule 125 (statement -> variable .)
    IF              reduce using rule 125 (statement -> variable .)
    WHILE           reduce using rule 125 (statement -> variable .)
    TRUE            reduce using rule 125 (statement -> variable .)
    FALSE           reduce using rule 125 (statement -> variable .)
    INCREMENT       reduce using rule 125 (statement -> variable .)
    DECREMENT       reduce using rule 125 (statement -> variable .)
    NOT             reduce using rule 125 (statement -> variable .)
    LPAREN          reduce using rule 125 (statement -> variable .)
    AWAIT           reduce using rule 125 (statement -> variable .)
    NUMBER          reduce using rule 125 (statement -> variable .)
    REF             reduce using rule 125 (statement -> variable .)
    POINTER         reduce using rule 125 (statement -> variable .)
    error           reduce using rule 125 (statement -> variable .)
    I8              reduce using rule 125 (statement -> variable .)
    I16             reduce using rule 125 (statement -> variable .)
    I32             reduce using rule 125 (statement -> variable .)
    I64             reduce using rule 125 (statement -> variable .)
    U8              reduce using rule 125 (statement -> variable .)
    U16             reduce using rule 125 (statement -> variable .)
    U32             reduce using rule 125 (statement -> variable .)
    U64             reduce using rule 125 (statement -> variable .)
    F32             reduce using rule 125 (statement -> variable .)
    F64             reduce using rule 125 (statement -> variable .)
    BOOL            reduce using rule 125 (statement -> variable .)
    STRING          reduce using rule 125 (statement -> variable .)
    $end            reduce using rule 125 (statement -> variable .)
    RBRACE          reduce using rule 125 (statement -> variable .)

  ! SEMI            [ reduce using rule 125 (statement -> variable .) ]


state 10

    (10) statement -> interface_definition .

    MATCH           reduce using rule 10 (statement -> interface_definition .)
    ID              reduce using rule 10 (statement -> interface_definition .)
    ASYNC           reduce using rule 10 (statement -> interface_definition .)
    FN              reduce using rule 10 (statement -> interface_definition .)
    CLASS           reduce using rule 10 (statement -> interface_definition .)
    ENUM            reduce using rule 10 (statement -> interface_definition .)
    NAMESPACE       reduce using rule 10 (statement -> interface_definition .)
    INTERFACE       reduce using rule 10 (statement -> interface_definition .)
    RETURN          reduce using rule 10 (statement -> interface_definition .)
    USE             reduce using rule 10 (statement -> interface_definition .)
    FOR             reduce using rule 10 (statement -> interface_definition .)
    IF              reduce using rule 10 (statement -> interface_definition .)
    WHILE           reduce using rule 10 (statement -> interface_definition .)
    TRUE            reduce using rule 10 (statement -> interface_definition .)
    FALSE           reduce using rule 10 (statement -> interface_definition .)
    INCREMENT       reduce using rule 10 (statement -> interface_definition .)
    DECREMENT       reduce using rule 10 (statement -> interface_definition .)
    NOT             reduce using rule 10 (statement -> interface_definition .)
    LPAREN          reduce using rule 10 (statement -> interface_definition .)
    AWAIT           reduce using rule 10 (statement -> interface_definition .)
    NUMBER          reduce using rule 10 (statement -> interface_definition .)
    REF             reduce using rule 10 (statement -> interface_definition .)
    POINTER         reduce using rule 10 (statement -> interface_definition .)
    error           reduce using rule 10 (statement -> interface_definition .)
    I8              reduce using rule 10 (statement -> interface_definition .)
    I16             reduce using rule 10 (statement -> interface_definition .)
    I32             reduce using rule 10 (statement -> interface_definition .)
    I64             reduce using rule 10 (statement -> interface_definition .)
    U8              reduce using rule 10 (statement -> interface_definition .)
    U16             reduce using rule 10 (statement -> interface_definition .)
    U32             reduce using rule 10 (statement -> interface_definition .)
    U64             reduce using rule 10 (statement -> interface_definition .)
    F32             reduce using rule 10 (statement -> interface_definition .)
    F64             reduce using rule 10 (statement -> interface_definition .)
    BOOL            reduce using rule 10 (statement -> interface_definition .)
    STRING          reduce using rule 10 (statement -> interface_definition .)
    $end            reduce using rule 10 (statement -> interface_definition .)
    RBRACE          reduce using rule 10 (statement -> interface_definition .)
    SEMI            reduce using rule 10 (statement -> interface_definition .)


state 11

    (11) statement -> return_statement . SEMI

    SEMI            shift and go to state 57


state 12

    (12) statement -> use_statement .

    MATCH           reduce using rule 12 (statement -> use_statement .)
    ID              reduce using rule 12 (statement -> use_statement .)
    ASYNC           reduce using rule 12 (statement -> use_statement .)
    FN              reduce using rule 12 (statement -> use_statement .)
    CLASS           reduce using rule 12 (statement -> use_statement .)
    ENUM            reduce using rule 12 (statement -> use_statement .)
    NAMESPACE       reduce using rule 12 (statement -> use_statement .)
    INTERFACE       reduce using rule 12 (statement -> use_statement .)
    RETURN          reduce using rule 12 (statement -> use_statement .)
    USE             reduce using rule 12 (statement -> use_statement .)
    FOR             reduce using rule 12 (statement -> use_statement .)
    IF              reduce using rule 12 (statement -> use_statement .)
    WHILE           reduce using rule 12 (statement -> use_statement .)
    TRUE            reduce using rule 12 (statement -> use_statement .)
    FALSE           reduce using rule 12 (statement -> use_statement .)
    INCREMENT       reduce using rule 12 (statement -> use_statement .)
    DECREMENT       reduce using rule 12 (statement -> use_statement .)
    NOT             reduce using rule 12 (statement -> use_statement .)
    LPAREN          reduce using rule 12 (statement -> use_statement .)
    AWAIT           reduce using rule 12 (statement -> use_statement .)
    NUMBER          reduce using rule 12 (statement -> use_statement .)
    REF             reduce using rule 12 (statement -> use_statement .)
    POINTER         reduce using rule 12 (statement -> use_statement .)
    error           reduce using rule 12 (statement -> use_statement .)
    I8              reduce using rule 12 (statement -> use_statement .)
    I16             reduce using rule 12 (statement -> use_statement .)
    I32             reduce using rule 12 (statement -> use_statement .)
    I64             reduce using rule 12 (statement -> use_statement .)
    U8              reduce using rule 12 (statement -> use_statement .)
    U16             reduce using rule 12 (statement -> use_statement .)
    U32             reduce using rule 12 (statement -> use_statement .)
    U64             reduce using rule 12 (statement -> use_statement .)
    F32             reduce using rule 12 (statement -> use_statement .)
    F64             reduce using rule 12 (statement -> use_statement .)
    BOOL            reduce using rule 12 (statement -> use_statement .)
    STRING          reduce using rule 12 (statement -> use_statement .)
    $end            reduce using rule 12 (statement -> use_statement .)
    RBRACE          reduce using rule 12 (statement -> use_statement .)
    SEMI            reduce using rule 12 (statement -> use_statement .)


state 13

    (65) statement -> for_block .
    (68) statement -> for_block . else_block
    (89) else_block -> . ELSE block

    MATCH           reduce using rule 65 (statement -> for_block .)
    ID              reduce using rule 65 (statement -> for_block .)
    ASYNC           reduce using rule 65 (statement -> for_block .)
    FN              reduce using rule 65 (statement -> for_block .)
    CLASS           reduce using rule 65 (statement -> for_block .)
    ENUM            reduce using rule 65 (statement -> for_block .)
    NAMESPACE       reduce using rule 65 (statement -> for_block .)
    INTERFACE       reduce using rule 65 (statement -> for_block .)
    RETURN          reduce using rule 65 (statement -> for_block .)
    USE             reduce using rule 65 (statement -> for_block .)
    FOR             reduce using rule 65 (statement -> for_block .)
    IF              reduce using rule 65 (statement -> for_block .)
    WHILE           reduce using rule 65 (statement -> for_block .)
    TRUE            reduce using rule 65 (statement -> for_block .)
    FALSE           reduce using rule 65 (statement -> for_block .)
    INCREMENT       reduce using rule 65 (statement -> for_block .)
    DECREMENT       reduce using rule 65 (statement -> for_block .)
    NOT             reduce using rule 65 (statement -> for_block .)
    LPAREN          reduce using rule 65 (statement -> for_block .)
    AWAIT           reduce using rule 65 (statement -> for_block .)
    NUMBER          reduce using rule 65 (statement -> for_block .)
    REF             reduce using rule 65 (statement -> for_block .)
    POINTER         reduce using rule 65 (statement -> for_block .)
    error           reduce using rule 65 (statement -> for_block .)
    I8              reduce using rule 65 (statement -> for_block .)
    I16             reduce using rule 65 (statement -> for_block .)
    I32             reduce using rule 65 (statement -> for_block .)
    I64             reduce using rule 65 (statement -> for_block .)
    U8              reduce using rule 65 (statement -> for_block .)
    U16             reduce using rule 65 (statement -> for_block .)
    U32             reduce using rule 65 (statement -> for_block .)
    U64             reduce using rule 65 (statement -> for_block .)
    F32             reduce using rule 65 (statement -> for_block .)
    F64             reduce using rule 65 (statement -> for_block .)
    BOOL            reduce using rule 65 (statement -> for_block .)
    STRING          reduce using rule 65 (statement -> for_block .)
    $end            reduce using rule 65 (statement -> for_block .)
    RBRACE          reduce using rule 65 (statement -> for_block .)
    SEMI            reduce using rule 65 (statement -> for_block .)
    ELSE            shift and go to state 59

    else_block                     shift and go to state 58

state 14

    (81) statement -> if_block . else_if_blocks else_block
    (82) statement -> if_block . else_if_blocks
    (83) statement -> if_block . else_block
    (84) statement -> if_block .
    (86) else_if_blocks -> . else_if_blocks else_if_block
    (87) else_if_blocks -> . else_if_block
    (89) else_block -> . ELSE block
    (88) else_if_block -> . ELSE IF expression block

    MATCH           reduce using rule 84 (statement -> if_block .)
    ID              reduce using rule 84 (statement -> if_block .)
    ASYNC           reduce using rule 84 (statement -> if_block .)
    FN              reduce using rule 84 (statement -> if_block .)
    CLASS           reduce using rule 84 (statement -> if_block .)
    ENUM            reduce using rule 84 (statement -> if_block .)
    NAMESPACE       reduce using rule 84 (statement -> if_block .)
    INTERFACE       reduce using rule 84 (statement -> if_block .)
    RETURN          reduce using rule 84 (statement -> if_block .)
    USE             reduce using rule 84 (statement -> if_block .)
    FOR             reduce using rule 84 (statement -> if_block .)
    IF              reduce using rule 84 (statement -> if_block .)
    WHILE           reduce using rule 84 (statement -> if_block .)
    TRUE            reduce using rule 84 (statement -> if_block .)
    FALSE           reduce using rule 84 (statement -> if_block .)
    INCREMENT       reduce using rule 84 (statement -> if_block .)
    DECREMENT       reduce using rule 84 (statement -> if_block .)
    NOT             reduce using rule 84 (statement -> if_block .)
    LPAREN          reduce using rule 84 (statement -> if_block .)
    AWAIT           reduce using rule 84 (statement -> if_block .)
    NUMBER          reduce using rule 84 (statement -> if_block .)
    REF             reduce using rule 84 (statement -> if_block .)
    POINTER         reduce using rule 84 (statement -> if_block .)
    error           reduce using rule 84 (statement -> if_block .)
    I8              reduce using rule 84 (statement -> if_block .)
    I16             reduce using rule 84 (statement -> if_block .)
    I32             reduce using rule 84 (statement -> if_block .)
    I64             reduce using rule 84 (statement -> if_block .)
    U8              reduce using rule 84 (statement -> if_block .)
    U16             reduce using rule 84 (statement -> if_block .)
    U32             reduce using rule 84 (statement -> if_block .)
    U64             reduce using rule 84 (statement -> if_block .)
    F32             reduce using rule 84 (statement -> if_block .)
    F64             reduce using rule 84 (statement -> if_block .)
    BOOL            reduce using rule 84 (statement -> if_block .)
    STRING          reduce using rule 84 (statement -> if_block .)
    $end            reduce using rule 84 (statement -> if_block .)
    RBRACE          reduce using rule 84 (statement -> if_block .)
    SEMI            reduce using rule 84 (statement -> if_block .)
    ELSE            shift and go to state 63

    else_if_blocks                 shift and go to state 60
    else_block                     shift and go to state 61
    else_if_block                  shift and go to state 62

state 15

    (90) statement -> MATCH . expression LBRACE match_cases RBRACE
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 64

state 16

    (127) statement -> expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    MATCH           reduce using rule 127 (statement -> expression .)
    ID              reduce using rule 127 (statement -> expression .)
    ASYNC           reduce using rule 127 (statement -> expression .)
    FN              reduce using rule 127 (statement -> expression .)
    CLASS           reduce using rule 127 (statement -> expression .)
    ENUM            reduce using rule 127 (statement -> expression .)
    NAMESPACE       reduce using rule 127 (statement -> expression .)
    INTERFACE       reduce using rule 127 (statement -> expression .)
    RETURN          reduce using rule 127 (statement -> expression .)
    USE             reduce using rule 127 (statement -> expression .)
    FOR             reduce using rule 127 (statement -> expression .)
    IF              reduce using rule 127 (statement -> expression .)
    WHILE           reduce using rule 127 (statement -> expression .)
    TRUE            reduce using rule 127 (statement -> expression .)
    FALSE           reduce using rule 127 (statement -> expression .)
    NOT             reduce using rule 127 (statement -> expression .)
    LPAREN          reduce using rule 127 (statement -> expression .)
    AWAIT           reduce using rule 127 (statement -> expression .)
    NUMBER          reduce using rule 127 (statement -> expression .)
    REF             reduce using rule 127 (statement -> expression .)
    POINTER         reduce using rule 127 (statement -> expression .)
    error           reduce using rule 127 (statement -> expression .)
    I8              reduce using rule 127 (statement -> expression .)
    I16             reduce using rule 127 (statement -> expression .)
    I32             reduce using rule 127 (statement -> expression .)
    I64             reduce using rule 127 (statement -> expression .)
    U8              reduce using rule 127 (statement -> expression .)
    U16             reduce using rule 127 (statement -> expression .)
    U32             reduce using rule 127 (statement -> expression .)
    U64             reduce using rule 127 (statement -> expression .)
    F32             reduce using rule 127 (statement -> expression .)
    F64             reduce using rule 127 (statement -> expression .)
    BOOL            reduce using rule 127 (statement -> expression .)
    STRING          reduce using rule 127 (statement -> expression .)
    $end            reduce using rule 127 (statement -> expression .)
    RBRACE          reduce using rule 127 (statement -> expression .)
    SEMI            reduce using rule 127 (statement -> expression .)
    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82

  ! INCREMENT       [ reduce using rule 127 (statement -> expression .) ]
  ! DECREMENT       [ reduce using rule 127 (statement -> expression .) ]


state 17

    (108) statement -> while_block .
    (110) statement -> while_block . else_block
    (89) else_block -> . ELSE block

    MATCH           reduce using rule 108 (statement -> while_block .)
    ID              reduce using rule 108 (statement -> while_block .)
    ASYNC           reduce using rule 108 (statement -> while_block .)
    FN              reduce using rule 108 (statement -> while_block .)
    CLASS           reduce using rule 108 (statement -> while_block .)
    ENUM            reduce using rule 108 (statement -> while_block .)
    NAMESPACE       reduce using rule 108 (statement -> while_block .)
    INTERFACE       reduce using rule 108 (statement -> while_block .)
    RETURN          reduce using rule 108 (statement -> while_block .)
    USE             reduce using rule 108 (statement -> while_block .)
    FOR             reduce using rule 108 (statement -> while_block .)
    IF              reduce using rule 108 (statement -> while_block .)
    WHILE           reduce using rule 108 (statement -> while_block .)
    TRUE            reduce using rule 108 (statement -> while_block .)
    FALSE           reduce using rule 108 (statement -> while_block .)
    INCREMENT       reduce using rule 108 (statement -> while_block .)
    DECREMENT       reduce using rule 108 (statement -> while_block .)
    NOT             reduce using rule 108 (statement -> while_block .)
    LPAREN          reduce using rule 108 (statement -> while_block .)
    AWAIT           reduce using rule 108 (statement -> while_block .)
    NUMBER          reduce using rule 108 (statement -> while_block .)
    REF             reduce using rule 108 (statement -> while_block .)
    POINTER         reduce using rule 108 (statement -> while_block .)
    error           reduce using rule 108 (statement -> while_block .)
    I8              reduce using rule 108 (statement -> while_block .)
    I16             reduce using rule 108 (statement -> while_block .)
    I32             reduce using rule 108 (statement -> while_block .)
    I64             reduce using rule 108 (statement -> while_block .)
    U8              reduce using rule 108 (statement -> while_block .)
    U16             reduce using rule 108 (statement -> while_block .)
    U32             reduce using rule 108 (statement -> while_block .)
    U64             reduce using rule 108 (statement -> while_block .)
    F32             reduce using rule 108 (statement -> while_block .)
    F64             reduce using rule 108 (statement -> while_block .)
    BOOL            reduce using rule 108 (statement -> while_block .)
    STRING          reduce using rule 108 (statement -> while_block .)
    $end            reduce using rule 108 (statement -> while_block .)
    RBRACE          reduce using rule 108 (statement -> while_block .)
    SEMI            reduce using rule 108 (statement -> while_block .)
    ELSE            shift and go to state 59

    else_block                     shift and go to state 83

state 18

    (126) statement -> ID . ASSIGN expression
    (75) expression -> ID . LPAREN arg_list_opt RPAREN
    (113) expression -> ID .
    (40) type_specifier -> ID .
    (18) type_with_generics -> ID . LANGLE type_list RANGLE
    (19) type_with_generics -> ID . empty
    (111) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 40 (type_specifier -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 40 (type_specifier -> ID .)
    ASSIGN          shift and go to state 84
    LPAREN          shift and go to state 85
    INCREMENT       reduce using rule 113 (expression -> ID .)
    DECREMENT       reduce using rule 113 (expression -> ID .)
    AND             reduce using rule 113 (expression -> ID .)
    OR              reduce using rule 113 (expression -> ID .)
    EQ              reduce using rule 113 (expression -> ID .)
    NEQ             reduce using rule 113 (expression -> ID .)
    LTHEN           reduce using rule 113 (expression -> ID .)
    RTHEN           reduce using rule 113 (expression -> ID .)
    LEQ             reduce using rule 113 (expression -> ID .)
    GEQ             reduce using rule 113 (expression -> ID .)
    PLUS            reduce using rule 113 (expression -> ID .)
    MINUS           reduce using rule 113 (expression -> ID .)
    TIMES           reduce using rule 113 (expression -> ID .)
    DIVIDE          reduce using rule 113 (expression -> ID .)
    MOD             reduce using rule 113 (expression -> ID .)
    MATCH           reduce using rule 113 (expression -> ID .)
    ASYNC           reduce using rule 113 (expression -> ID .)
    FN              reduce using rule 113 (expression -> ID .)
    CLASS           reduce using rule 113 (expression -> ID .)
    ENUM            reduce using rule 113 (expression -> ID .)
    NAMESPACE       reduce using rule 113 (expression -> ID .)
    INTERFACE       reduce using rule 113 (expression -> ID .)
    RETURN          reduce using rule 113 (expression -> ID .)
    USE             reduce using rule 113 (expression -> ID .)
    FOR             reduce using rule 113 (expression -> ID .)
    IF              reduce using rule 113 (expression -> ID .)
    WHILE           reduce using rule 113 (expression -> ID .)
    TRUE            reduce using rule 113 (expression -> ID .)
    FALSE           reduce using rule 113 (expression -> ID .)
    NOT             reduce using rule 113 (expression -> ID .)
    AWAIT           reduce using rule 113 (expression -> ID .)
    NUMBER          reduce using rule 113 (expression -> ID .)
    REF             reduce using rule 113 (expression -> ID .)
    POINTER         reduce using rule 113 (expression -> ID .)
    error           reduce using rule 113 (expression -> ID .)
    I8              reduce using rule 113 (expression -> ID .)
    I16             reduce using rule 113 (expression -> ID .)
    I32             reduce using rule 113 (expression -> ID .)
    I64             reduce using rule 113 (expression -> ID .)
    U8              reduce using rule 113 (expression -> ID .)
    U16             reduce using rule 113 (expression -> ID .)
    U32             reduce using rule 113 (expression -> ID .)
    U64             reduce using rule 113 (expression -> ID .)
    F32             reduce using rule 113 (expression -> ID .)
    F64             reduce using rule 113 (expression -> ID .)
    BOOL            reduce using rule 113 (expression -> ID .)
    STRING          reduce using rule 113 (expression -> ID .)
    $end            reduce using rule 113 (expression -> ID .)
    RBRACE          reduce using rule 113 (expression -> ID .)
    SEMI            reduce using rule 113 (expression -> ID .)
    ID              reduce using rule 40 (type_specifier -> ID .)
    LANGLE          shift and go to state 86

  ! ID              [ reduce using rule 113 (expression -> ID .) ]
  ! LPAREN          [ reduce using rule 113 (expression -> ID .) ]
  ! ID              [ reduce using rule 111 (empty -> .) ]

    empty                          shift and go to state 87

state 19

    (106) function_definition -> ASYNC . FN ID LPAREN parameters_opt RPAREN return_type_opt block

    FN              shift and go to state 88


state 20

    (123) function_definition -> FN . type_with_generics LPAREN parameters_opt RPAREN return_type_opt block
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    ID              shift and go to state 90

    type_with_generics             shift and go to state 89

state 21

    (74) expression -> LPAREN . expression RPAREN
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 91

state 22

    (53) type_specifier -> type_with_generics .

    ID              reduce using rule 53 (type_specifier -> type_with_generics .)
    RANGLE          reduce using rule 53 (type_specifier -> type_with_generics .)
    COMMA           reduce using rule 53 (type_specifier -> type_with_generics .)
    LPAREN          reduce using rule 53 (type_specifier -> type_with_generics .)
    LBRACE          reduce using rule 53 (type_specifier -> type_with_generics .)


state 23

    (124) class_definition -> CLASS . type_with_generics extends_opt LBRACE class_body RBRACE
    (138) struct_definition -> CLASS . type_with_generics extends_opt LBRACE struct_body RBRACE
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    ID              shift and go to state 90

    type_with_generics             shift and go to state 92

state 24

    (139) enum_definition -> ENUM . type_with_generics LBRACE enum_body RBRACE
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    ID              shift and go to state 90

    type_with_generics             shift and go to state 93

state 25

    (15) namespace_definition -> NAMESPACE . ID block

    ID              shift and go to state 94


state 26

    (129) variable -> type_specifier . ID
    (130) variable -> type_specifier . ID ASSIGN expression
    (131) variable -> type_specifier . ID LPAREN arg_list_opt RPAREN
    (132) variable -> type_specifier . ID LBRACE arg_list_opt RBRACE
    (133) variable -> type_specifier . ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN
    (134) variable -> type_specifier . ID ASSIGN expression LPAREN arg_list_opt RPAREN

    ID              shift and go to state 95


state 27

    (135) interface_definition -> INTERFACE . type_with_generics LBRACE interface_body RBRACE
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    ID              shift and go to state 90

    type_with_generics             shift and go to state 96

state 28

    (16) return_statement -> RETURN . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 97

state 29

    (105) use_statement -> USE . qualified_name SEMI
    (103) qualified_name -> . qualified_name DOUBLE_COLON ID
    (104) qualified_name -> . ID

    ID              shift and go to state 99

    qualified_name                 shift and go to state 98

state 30

    (66) for_block -> FOR . ID IN expression block
    (67) for_block -> FOR . ID IN LPAREN expression RPAREN block

    ID              shift and go to state 100


state 31

    (85) if_block -> IF . expression block
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 101

state 32

    (109) while_block -> WHILE . expression block
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 102

state 33

    (13) expression -> TRUE .

    INCREMENT       reduce using rule 13 (expression -> TRUE .)
    DECREMENT       reduce using rule 13 (expression -> TRUE .)
    AND             reduce using rule 13 (expression -> TRUE .)
    OR              reduce using rule 13 (expression -> TRUE .)
    EQ              reduce using rule 13 (expression -> TRUE .)
    NEQ             reduce using rule 13 (expression -> TRUE .)
    LTHEN           reduce using rule 13 (expression -> TRUE .)
    RTHEN           reduce using rule 13 (expression -> TRUE .)
    LEQ             reduce using rule 13 (expression -> TRUE .)
    GEQ             reduce using rule 13 (expression -> TRUE .)
    PLUS            reduce using rule 13 (expression -> TRUE .)
    MINUS           reduce using rule 13 (expression -> TRUE .)
    TIMES           reduce using rule 13 (expression -> TRUE .)
    DIVIDE          reduce using rule 13 (expression -> TRUE .)
    MOD             reduce using rule 13 (expression -> TRUE .)
    MATCH           reduce using rule 13 (expression -> TRUE .)
    ID              reduce using rule 13 (expression -> TRUE .)
    ASYNC           reduce using rule 13 (expression -> TRUE .)
    FN              reduce using rule 13 (expression -> TRUE .)
    CLASS           reduce using rule 13 (expression -> TRUE .)
    ENUM            reduce using rule 13 (expression -> TRUE .)
    NAMESPACE       reduce using rule 13 (expression -> TRUE .)
    INTERFACE       reduce using rule 13 (expression -> TRUE .)
    RETURN          reduce using rule 13 (expression -> TRUE .)
    USE             reduce using rule 13 (expression -> TRUE .)
    FOR             reduce using rule 13 (expression -> TRUE .)
    IF              reduce using rule 13 (expression -> TRUE .)
    WHILE           reduce using rule 13 (expression -> TRUE .)
    TRUE            reduce using rule 13 (expression -> TRUE .)
    FALSE           reduce using rule 13 (expression -> TRUE .)
    NOT             reduce using rule 13 (expression -> TRUE .)
    LPAREN          reduce using rule 13 (expression -> TRUE .)
    AWAIT           reduce using rule 13 (expression -> TRUE .)
    NUMBER          reduce using rule 13 (expression -> TRUE .)
    REF             reduce using rule 13 (expression -> TRUE .)
    POINTER         reduce using rule 13 (expression -> TRUE .)
    error           reduce using rule 13 (expression -> TRUE .)
    I8              reduce using rule 13 (expression -> TRUE .)
    I16             reduce using rule 13 (expression -> TRUE .)
    I32             reduce using rule 13 (expression -> TRUE .)
    I64             reduce using rule 13 (expression -> TRUE .)
    U8              reduce using rule 13 (expression -> TRUE .)
    U16             reduce using rule 13 (expression -> TRUE .)
    U32             reduce using rule 13 (expression -> TRUE .)
    U64             reduce using rule 13 (expression -> TRUE .)
    F32             reduce using rule 13 (expression -> TRUE .)
    F64             reduce using rule 13 (expression -> TRUE .)
    BOOL            reduce using rule 13 (expression -> TRUE .)
    STRING          reduce using rule 13 (expression -> TRUE .)
    $end            reduce using rule 13 (expression -> TRUE .)
    LBRACE          reduce using rule 13 (expression -> TRUE .)
    RPAREN          reduce using rule 13 (expression -> TRUE .)
    SEMI            reduce using rule 13 (expression -> TRUE .)
    RBRACE          reduce using rule 13 (expression -> TRUE .)
    COMMA           reduce using rule 13 (expression -> TRUE .)


state 34

    (14) expression -> FALSE .

    INCREMENT       reduce using rule 14 (expression -> FALSE .)
    DECREMENT       reduce using rule 14 (expression -> FALSE .)
    AND             reduce using rule 14 (expression -> FALSE .)
    OR              reduce using rule 14 (expression -> FALSE .)
    EQ              reduce using rule 14 (expression -> FALSE .)
    NEQ             reduce using rule 14 (expression -> FALSE .)
    LTHEN           reduce using rule 14 (expression -> FALSE .)
    RTHEN           reduce using rule 14 (expression -> FALSE .)
    LEQ             reduce using rule 14 (expression -> FALSE .)
    GEQ             reduce using rule 14 (expression -> FALSE .)
    PLUS            reduce using rule 14 (expression -> FALSE .)
    MINUS           reduce using rule 14 (expression -> FALSE .)
    TIMES           reduce using rule 14 (expression -> FALSE .)
    DIVIDE          reduce using rule 14 (expression -> FALSE .)
    MOD             reduce using rule 14 (expression -> FALSE .)
    MATCH           reduce using rule 14 (expression -> FALSE .)
    ID              reduce using rule 14 (expression -> FALSE .)
    ASYNC           reduce using rule 14 (expression -> FALSE .)
    FN              reduce using rule 14 (expression -> FALSE .)
    CLASS           reduce using rule 14 (expression -> FALSE .)
    ENUM            reduce using rule 14 (expression -> FALSE .)
    NAMESPACE       reduce using rule 14 (expression -> FALSE .)
    INTERFACE       reduce using rule 14 (expression -> FALSE .)
    RETURN          reduce using rule 14 (expression -> FALSE .)
    USE             reduce using rule 14 (expression -> FALSE .)
    FOR             reduce using rule 14 (expression -> FALSE .)
    IF              reduce using rule 14 (expression -> FALSE .)
    WHILE           reduce using rule 14 (expression -> FALSE .)
    TRUE            reduce using rule 14 (expression -> FALSE .)
    FALSE           reduce using rule 14 (expression -> FALSE .)
    NOT             reduce using rule 14 (expression -> FALSE .)
    LPAREN          reduce using rule 14 (expression -> FALSE .)
    AWAIT           reduce using rule 14 (expression -> FALSE .)
    NUMBER          reduce using rule 14 (expression -> FALSE .)
    REF             reduce using rule 14 (expression -> FALSE .)
    POINTER         reduce using rule 14 (expression -> FALSE .)
    error           reduce using rule 14 (expression -> FALSE .)
    I8              reduce using rule 14 (expression -> FALSE .)
    I16             reduce using rule 14 (expression -> FALSE .)
    I32             reduce using rule 14 (expression -> FALSE .)
    I64             reduce using rule 14 (expression -> FALSE .)
    U8              reduce using rule 14 (expression -> FALSE .)
    U16             reduce using rule 14 (expression -> FALSE .)
    U32             reduce using rule 14 (expression -> FALSE .)
    U64             reduce using rule 14 (expression -> FALSE .)
    F32             reduce using rule 14 (expression -> FALSE .)
    F64             reduce using rule 14 (expression -> FALSE .)
    BOOL            reduce using rule 14 (expression -> FALSE .)
    STRING          reduce using rule 14 (expression -> FALSE .)
    $end            reduce using rule 14 (expression -> FALSE .)
    LBRACE          reduce using rule 14 (expression -> FALSE .)
    RPAREN          reduce using rule 14 (expression -> FALSE .)
    SEMI            reduce using rule 14 (expression -> FALSE .)
    RBRACE          reduce using rule 14 (expression -> FALSE .)
    COMMA           reduce using rule 14 (expression -> FALSE .)


state 35

    (30) expression -> INCREMENT . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 103

state 36

    (31) expression -> DECREMENT . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 104

state 37

    (64) expression -> NOT . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 105

state 38

    (107) expression -> AWAIT . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 106

state 39

    (112) expression -> NUMBER .

    INCREMENT       reduce using rule 112 (expression -> NUMBER .)
    DECREMENT       reduce using rule 112 (expression -> NUMBER .)
    AND             reduce using rule 112 (expression -> NUMBER .)
    OR              reduce using rule 112 (expression -> NUMBER .)
    EQ              reduce using rule 112 (expression -> NUMBER .)
    NEQ             reduce using rule 112 (expression -> NUMBER .)
    LTHEN           reduce using rule 112 (expression -> NUMBER .)
    RTHEN           reduce using rule 112 (expression -> NUMBER .)
    LEQ             reduce using rule 112 (expression -> NUMBER .)
    GEQ             reduce using rule 112 (expression -> NUMBER .)
    PLUS            reduce using rule 112 (expression -> NUMBER .)
    MINUS           reduce using rule 112 (expression -> NUMBER .)
    TIMES           reduce using rule 112 (expression -> NUMBER .)
    DIVIDE          reduce using rule 112 (expression -> NUMBER .)
    MOD             reduce using rule 112 (expression -> NUMBER .)
    MATCH           reduce using rule 112 (expression -> NUMBER .)
    ID              reduce using rule 112 (expression -> NUMBER .)
    ASYNC           reduce using rule 112 (expression -> NUMBER .)
    FN              reduce using rule 112 (expression -> NUMBER .)
    CLASS           reduce using rule 112 (expression -> NUMBER .)
    ENUM            reduce using rule 112 (expression -> NUMBER .)
    NAMESPACE       reduce using rule 112 (expression -> NUMBER .)
    INTERFACE       reduce using rule 112 (expression -> NUMBER .)
    RETURN          reduce using rule 112 (expression -> NUMBER .)
    USE             reduce using rule 112 (expression -> NUMBER .)
    FOR             reduce using rule 112 (expression -> NUMBER .)
    IF              reduce using rule 112 (expression -> NUMBER .)
    WHILE           reduce using rule 112 (expression -> NUMBER .)
    TRUE            reduce using rule 112 (expression -> NUMBER .)
    FALSE           reduce using rule 112 (expression -> NUMBER .)
    NOT             reduce using rule 112 (expression -> NUMBER .)
    LPAREN          reduce using rule 112 (expression -> NUMBER .)
    AWAIT           reduce using rule 112 (expression -> NUMBER .)
    NUMBER          reduce using rule 112 (expression -> NUMBER .)
    REF             reduce using rule 112 (expression -> NUMBER .)
    POINTER         reduce using rule 112 (expression -> NUMBER .)
    error           reduce using rule 112 (expression -> NUMBER .)
    I8              reduce using rule 112 (expression -> NUMBER .)
    I16             reduce using rule 112 (expression -> NUMBER .)
    I32             reduce using rule 112 (expression -> NUMBER .)
    I64             reduce using rule 112 (expression -> NUMBER .)
    U8              reduce using rule 112 (expression -> NUMBER .)
    U16             reduce using rule 112 (expression -> NUMBER .)
    U32             reduce using rule 112 (expression -> NUMBER .)
    U64             reduce using rule 112 (expression -> NUMBER .)
    F32             reduce using rule 112 (expression -> NUMBER .)
    F64             reduce using rule 112 (expression -> NUMBER .)
    BOOL            reduce using rule 112 (expression -> NUMBER .)
    STRING          reduce using rule 112 (expression -> NUMBER .)
    $end            reduce using rule 112 (expression -> NUMBER .)
    LBRACE          reduce using rule 112 (expression -> NUMBER .)
    RPAREN          reduce using rule 112 (expression -> NUMBER .)
    SEMI            reduce using rule 112 (expression -> NUMBER .)
    RBRACE          reduce using rule 112 (expression -> NUMBER .)
    COMMA           reduce using rule 112 (expression -> NUMBER .)


state 40

    (114) expression -> REF . ID
    (55) type_specifier -> REF . type_specifier
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    ID              shift and go to state 108
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54
    POINTER         shift and go to state 110
    REF             shift and go to state 107

    type_specifier                 shift and go to state 109
    type_with_generics             shift and go to state 22

state 41

    (115) expression -> POINTER . expression
    (54) type_specifier -> POINTER . type_specifier
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 113
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 40
    POINTER         shift and go to state 41
    error           shift and go to state 42
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54

    expression                     shift and go to state 111
    type_specifier                 shift and go to state 112
    type_with_generics             shift and go to state 22

state 42

    (128) expression -> error .

    INCREMENT       reduce using rule 128 (expression -> error .)
    DECREMENT       reduce using rule 128 (expression -> error .)
    AND             reduce using rule 128 (expression -> error .)
    OR              reduce using rule 128 (expression -> error .)
    EQ              reduce using rule 128 (expression -> error .)
    NEQ             reduce using rule 128 (expression -> error .)
    LTHEN           reduce using rule 128 (expression -> error .)
    RTHEN           reduce using rule 128 (expression -> error .)
    LEQ             reduce using rule 128 (expression -> error .)
    GEQ             reduce using rule 128 (expression -> error .)
    PLUS            reduce using rule 128 (expression -> error .)
    MINUS           reduce using rule 128 (expression -> error .)
    TIMES           reduce using rule 128 (expression -> error .)
    DIVIDE          reduce using rule 128 (expression -> error .)
    MOD             reduce using rule 128 (expression -> error .)
    MATCH           reduce using rule 128 (expression -> error .)
    ID              reduce using rule 128 (expression -> error .)
    ASYNC           reduce using rule 128 (expression -> error .)
    FN              reduce using rule 128 (expression -> error .)
    CLASS           reduce using rule 128 (expression -> error .)
    ENUM            reduce using rule 128 (expression -> error .)
    NAMESPACE       reduce using rule 128 (expression -> error .)
    INTERFACE       reduce using rule 128 (expression -> error .)
    RETURN          reduce using rule 128 (expression -> error .)
    USE             reduce using rule 128 (expression -> error .)
    FOR             reduce using rule 128 (expression -> error .)
    IF              reduce using rule 128 (expression -> error .)
    WHILE           reduce using rule 128 (expression -> error .)
    TRUE            reduce using rule 128 (expression -> error .)
    FALSE           reduce using rule 128 (expression -> error .)
    NOT             reduce using rule 128 (expression -> error .)
    LPAREN          reduce using rule 128 (expression -> error .)
    AWAIT           reduce using rule 128 (expression -> error .)
    NUMBER          reduce using rule 128 (expression -> error .)
    REF             reduce using rule 128 (expression -> error .)
    POINTER         reduce using rule 128 (expression -> error .)
    error           reduce using rule 128 (expression -> error .)
    I8              reduce using rule 128 (expression -> error .)
    I16             reduce using rule 128 (expression -> error .)
    I32             reduce using rule 128 (expression -> error .)
    I64             reduce using rule 128 (expression -> error .)
    U8              reduce using rule 128 (expression -> error .)
    U16             reduce using rule 128 (expression -> error .)
    U32             reduce using rule 128 (expression -> error .)
    U64             reduce using rule 128 (expression -> error .)
    F32             reduce using rule 128 (expression -> error .)
    F64             reduce using rule 128 (expression -> error .)
    BOOL            reduce using rule 128 (expression -> error .)
    STRING          reduce using rule 128 (expression -> error .)
    $end            reduce using rule 128 (expression -> error .)
    LBRACE          reduce using rule 128 (expression -> error .)
    RPAREN          reduce using rule 128 (expression -> error .)
    SEMI            reduce using rule 128 (expression -> error .)
    RBRACE          reduce using rule 128 (expression -> error .)
    COMMA           reduce using rule 128 (expression -> error .)


state 43

    (41) type_specifier -> I8 .

    ID              reduce using rule 41 (type_specifier -> I8 .)
    RANGLE          reduce using rule 41 (type_specifier -> I8 .)
    COMMA           reduce using rule 41 (type_specifier -> I8 .)
    LPAREN          reduce using rule 41 (type_specifier -> I8 .)
    LBRACE          reduce using rule 41 (type_specifier -> I8 .)


state 44

    (42) type_specifier -> I16 .

    ID              reduce using rule 42 (type_specifier -> I16 .)
    RANGLE          reduce using rule 42 (type_specifier -> I16 .)
    COMMA           reduce using rule 42 (type_specifier -> I16 .)
    LPAREN          reduce using rule 42 (type_specifier -> I16 .)
    LBRACE          reduce using rule 42 (type_specifier -> I16 .)


state 45

    (43) type_specifier -> I32 .

    ID              reduce using rule 43 (type_specifier -> I32 .)
    RANGLE          reduce using rule 43 (type_specifier -> I32 .)
    COMMA           reduce using rule 43 (type_specifier -> I32 .)
    LPAREN          reduce using rule 43 (type_specifier -> I32 .)
    LBRACE          reduce using rule 43 (type_specifier -> I32 .)


state 46

    (44) type_specifier -> I64 .

    ID              reduce using rule 44 (type_specifier -> I64 .)
    RANGLE          reduce using rule 44 (type_specifier -> I64 .)
    COMMA           reduce using rule 44 (type_specifier -> I64 .)
    LPAREN          reduce using rule 44 (type_specifier -> I64 .)
    LBRACE          reduce using rule 44 (type_specifier -> I64 .)


state 47

    (45) type_specifier -> U8 .

    ID              reduce using rule 45 (type_specifier -> U8 .)
    RANGLE          reduce using rule 45 (type_specifier -> U8 .)
    COMMA           reduce using rule 45 (type_specifier -> U8 .)
    LPAREN          reduce using rule 45 (type_specifier -> U8 .)
    LBRACE          reduce using rule 45 (type_specifier -> U8 .)


state 48

    (46) type_specifier -> U16 .

    ID              reduce using rule 46 (type_specifier -> U16 .)
    RANGLE          reduce using rule 46 (type_specifier -> U16 .)
    COMMA           reduce using rule 46 (type_specifier -> U16 .)
    LPAREN          reduce using rule 46 (type_specifier -> U16 .)
    LBRACE          reduce using rule 46 (type_specifier -> U16 .)


state 49

    (47) type_specifier -> U32 .

    ID              reduce using rule 47 (type_specifier -> U32 .)
    RANGLE          reduce using rule 47 (type_specifier -> U32 .)
    COMMA           reduce using rule 47 (type_specifier -> U32 .)
    LPAREN          reduce using rule 47 (type_specifier -> U32 .)
    LBRACE          reduce using rule 47 (type_specifier -> U32 .)


state 50

    (48) type_specifier -> U64 .

    ID              reduce using rule 48 (type_specifier -> U64 .)
    RANGLE          reduce using rule 48 (type_specifier -> U64 .)
    COMMA           reduce using rule 48 (type_specifier -> U64 .)
    LPAREN          reduce using rule 48 (type_specifier -> U64 .)
    LBRACE          reduce using rule 48 (type_specifier -> U64 .)


state 51

    (49) type_specifier -> F32 .

    ID              reduce using rule 49 (type_specifier -> F32 .)
    RANGLE          reduce using rule 49 (type_specifier -> F32 .)
    COMMA           reduce using rule 49 (type_specifier -> F32 .)
    LPAREN          reduce using rule 49 (type_specifier -> F32 .)
    LBRACE          reduce using rule 49 (type_specifier -> F32 .)


state 52

    (50) type_specifier -> F64 .

    ID              reduce using rule 50 (type_specifier -> F64 .)
    RANGLE          reduce using rule 50 (type_specifier -> F64 .)
    COMMA           reduce using rule 50 (type_specifier -> F64 .)
    LPAREN          reduce using rule 50 (type_specifier -> F64 .)
    LBRACE          reduce using rule 50 (type_specifier -> F64 .)


state 53

    (51) type_specifier -> BOOL .

    ID              reduce using rule 51 (type_specifier -> BOOL .)
    RANGLE          reduce using rule 51 (type_specifier -> BOOL .)
    COMMA           reduce using rule 51 (type_specifier -> BOOL .)
    LPAREN          reduce using rule 51 (type_specifier -> BOOL .)
    LBRACE          reduce using rule 51 (type_specifier -> BOOL .)


state 54

    (52) type_specifier -> STRING .

    ID              reduce using rule 52 (type_specifier -> STRING .)
    RANGLE          reduce using rule 52 (type_specifier -> STRING .)
    COMMA           reduce using rule 52 (type_specifier -> STRING .)
    LPAREN          reduce using rule 52 (type_specifier -> STRING .)
    LBRACE          reduce using rule 52 (type_specifier -> STRING .)


state 55

    (1) program -> program statement .

    MATCH           reduce using rule 1 (program -> program statement .)
    ID              reduce using rule 1 (program -> program statement .)
    ASYNC           reduce using rule 1 (program -> program statement .)
    FN              reduce using rule 1 (program -> program statement .)
    CLASS           reduce using rule 1 (program -> program statement .)
    ENUM            reduce using rule 1 (program -> program statement .)
    NAMESPACE       reduce using rule 1 (program -> program statement .)
    INTERFACE       reduce using rule 1 (program -> program statement .)
    RETURN          reduce using rule 1 (program -> program statement .)
    USE             reduce using rule 1 (program -> program statement .)
    FOR             reduce using rule 1 (program -> program statement .)
    IF              reduce using rule 1 (program -> program statement .)
    WHILE           reduce using rule 1 (program -> program statement .)
    TRUE            reduce using rule 1 (program -> program statement .)
    FALSE           reduce using rule 1 (program -> program statement .)
    INCREMENT       reduce using rule 1 (program -> program statement .)
    DECREMENT       reduce using rule 1 (program -> program statement .)
    NOT             reduce using rule 1 (program -> program statement .)
    LPAREN          reduce using rule 1 (program -> program statement .)
    AWAIT           reduce using rule 1 (program -> program statement .)
    NUMBER          reduce using rule 1 (program -> program statement .)
    REF             reduce using rule 1 (program -> program statement .)
    POINTER         reduce using rule 1 (program -> program statement .)
    error           reduce using rule 1 (program -> program statement .)
    I8              reduce using rule 1 (program -> program statement .)
    I16             reduce using rule 1 (program -> program statement .)
    I32             reduce using rule 1 (program -> program statement .)
    I64             reduce using rule 1 (program -> program statement .)
    U8              reduce using rule 1 (program -> program statement .)
    U16             reduce using rule 1 (program -> program statement .)
    U32             reduce using rule 1 (program -> program statement .)
    U64             reduce using rule 1 (program -> program statement .)
    F32             reduce using rule 1 (program -> program statement .)
    F64             reduce using rule 1 (program -> program statement .)
    BOOL            reduce using rule 1 (program -> program statement .)
    STRING          reduce using rule 1 (program -> program statement .)
    $end            reduce using rule 1 (program -> program statement .)
    RBRACE          reduce using rule 1 (program -> program statement .)
    SEMI            reduce using rule 1 (program -> program statement .)


state 56

    (9) statement -> variable SEMI .

    MATCH           reduce using rule 9 (statement -> variable SEMI .)
    ID              reduce using rule 9 (statement -> variable SEMI .)
    ASYNC           reduce using rule 9 (statement -> variable SEMI .)
    FN              reduce using rule 9 (statement -> variable SEMI .)
    CLASS           reduce using rule 9 (statement -> variable SEMI .)
    ENUM            reduce using rule 9 (statement -> variable SEMI .)
    NAMESPACE       reduce using rule 9 (statement -> variable SEMI .)
    INTERFACE       reduce using rule 9 (statement -> variable SEMI .)
    RETURN          reduce using rule 9 (statement -> variable SEMI .)
    USE             reduce using rule 9 (statement -> variable SEMI .)
    FOR             reduce using rule 9 (statement -> variable SEMI .)
    IF              reduce using rule 9 (statement -> variable SEMI .)
    WHILE           reduce using rule 9 (statement -> variable SEMI .)
    TRUE            reduce using rule 9 (statement -> variable SEMI .)
    FALSE           reduce using rule 9 (statement -> variable SEMI .)
    INCREMENT       reduce using rule 9 (statement -> variable SEMI .)
    DECREMENT       reduce using rule 9 (statement -> variable SEMI .)
    NOT             reduce using rule 9 (statement -> variable SEMI .)
    LPAREN          reduce using rule 9 (statement -> variable SEMI .)
    AWAIT           reduce using rule 9 (statement -> variable SEMI .)
    NUMBER          reduce using rule 9 (statement -> variable SEMI .)
    REF             reduce using rule 9 (statement -> variable SEMI .)
    POINTER         reduce using rule 9 (statement -> variable SEMI .)
    error           reduce using rule 9 (statement -> variable SEMI .)
    I8              reduce using rule 9 (statement -> variable SEMI .)
    I16             reduce using rule 9 (statement -> variable SEMI .)
    I32             reduce using rule 9 (statement -> variable SEMI .)
    I64             reduce using rule 9 (statement -> variable SEMI .)
    U8              reduce using rule 9 (statement -> variable SEMI .)
    U16             reduce using rule 9 (statement -> variable SEMI .)
    U32             reduce using rule 9 (statement -> variable SEMI .)
    U64             reduce using rule 9 (statement -> variable SEMI .)
    F32             reduce using rule 9 (statement -> variable SEMI .)
    F64             reduce using rule 9 (statement -> variable SEMI .)
    BOOL            reduce using rule 9 (statement -> variable SEMI .)
    STRING          reduce using rule 9 (statement -> variable SEMI .)
    $end            reduce using rule 9 (statement -> variable SEMI .)
    RBRACE          reduce using rule 9 (statement -> variable SEMI .)
    SEMI            reduce using rule 9 (statement -> variable SEMI .)


state 57

    (11) statement -> return_statement SEMI .

    MATCH           reduce using rule 11 (statement -> return_statement SEMI .)
    ID              reduce using rule 11 (statement -> return_statement SEMI .)
    ASYNC           reduce using rule 11 (statement -> return_statement SEMI .)
    FN              reduce using rule 11 (statement -> return_statement SEMI .)
    CLASS           reduce using rule 11 (statement -> return_statement SEMI .)
    ENUM            reduce using rule 11 (statement -> return_statement SEMI .)
    NAMESPACE       reduce using rule 11 (statement -> return_statement SEMI .)
    INTERFACE       reduce using rule 11 (statement -> return_statement SEMI .)
    RETURN          reduce using rule 11 (statement -> return_statement SEMI .)
    USE             reduce using rule 11 (statement -> return_statement SEMI .)
    FOR             reduce using rule 11 (statement -> return_statement SEMI .)
    IF              reduce using rule 11 (statement -> return_statement SEMI .)
    WHILE           reduce using rule 11 (statement -> return_statement SEMI .)
    TRUE            reduce using rule 11 (statement -> return_statement SEMI .)
    FALSE           reduce using rule 11 (statement -> return_statement SEMI .)
    INCREMENT       reduce using rule 11 (statement -> return_statement SEMI .)
    DECREMENT       reduce using rule 11 (statement -> return_statement SEMI .)
    NOT             reduce using rule 11 (statement -> return_statement SEMI .)
    LPAREN          reduce using rule 11 (statement -> return_statement SEMI .)
    AWAIT           reduce using rule 11 (statement -> return_statement SEMI .)
    NUMBER          reduce using rule 11 (statement -> return_statement SEMI .)
    REF             reduce using rule 11 (statement -> return_statement SEMI .)
    POINTER         reduce using rule 11 (statement -> return_statement SEMI .)
    error           reduce using rule 11 (statement -> return_statement SEMI .)
    I8              reduce using rule 11 (statement -> return_statement SEMI .)
    I16             reduce using rule 11 (statement -> return_statement SEMI .)
    I32             reduce using rule 11 (statement -> return_statement SEMI .)
    I64             reduce using rule 11 (statement -> return_statement SEMI .)
    U8              reduce using rule 11 (statement -> return_statement SEMI .)
    U16             reduce using rule 11 (statement -> return_statement SEMI .)
    U32             reduce using rule 11 (statement -> return_statement SEMI .)
    U64             reduce using rule 11 (statement -> return_statement SEMI .)
    F32             reduce using rule 11 (statement -> return_statement SEMI .)
    F64             reduce using rule 11 (statement -> return_statement SEMI .)
    BOOL            reduce using rule 11 (statement -> return_statement SEMI .)
    STRING          reduce using rule 11 (statement -> return_statement SEMI .)
    $end            reduce using rule 11 (statement -> return_statement SEMI .)
    RBRACE          reduce using rule 11 (statement -> return_statement SEMI .)
    SEMI            reduce using rule 11 (statement -> return_statement SEMI .)


state 58

    (68) statement -> for_block else_block .

    MATCH           reduce using rule 68 (statement -> for_block else_block .)
    ID              reduce using rule 68 (statement -> for_block else_block .)
    ASYNC           reduce using rule 68 (statement -> for_block else_block .)
    FN              reduce using rule 68 (statement -> for_block else_block .)
    CLASS           reduce using rule 68 (statement -> for_block else_block .)
    ENUM            reduce using rule 68 (statement -> for_block else_block .)
    NAMESPACE       reduce using rule 68 (statement -> for_block else_block .)
    INTERFACE       reduce using rule 68 (statement -> for_block else_block .)
    RETURN          reduce using rule 68 (statement -> for_block else_block .)
    USE             reduce using rule 68 (statement -> for_block else_block .)
    FOR             reduce using rule 68 (statement -> for_block else_block .)
    IF              reduce using rule 68 (statement -> for_block else_block .)
    WHILE           reduce using rule 68 (statement -> for_block else_block .)
    TRUE            reduce using rule 68 (statement -> for_block else_block .)
    FALSE           reduce using rule 68 (statement -> for_block else_block .)
    INCREMENT       reduce using rule 68 (statement -> for_block else_block .)
    DECREMENT       reduce using rule 68 (statement -> for_block else_block .)
    NOT             reduce using rule 68 (statement -> for_block else_block .)
    LPAREN          reduce using rule 68 (statement -> for_block else_block .)
    AWAIT           reduce using rule 68 (statement -> for_block else_block .)
    NUMBER          reduce using rule 68 (statement -> for_block else_block .)
    REF             reduce using rule 68 (statement -> for_block else_block .)
    POINTER         reduce using rule 68 (statement -> for_block else_block .)
    error           reduce using rule 68 (statement -> for_block else_block .)
    I8              reduce using rule 68 (statement -> for_block else_block .)
    I16             reduce using rule 68 (statement -> for_block else_block .)
    I32             reduce using rule 68 (statement -> for_block else_block .)
    I64             reduce using rule 68 (statement -> for_block else_block .)
    U8              reduce using rule 68 (statement -> for_block else_block .)
    U16             reduce using rule 68 (statement -> for_block else_block .)
    U32             reduce using rule 68 (statement -> for_block else_block .)
    U64             reduce using rule 68 (statement -> for_block else_block .)
    F32             reduce using rule 68 (statement -> for_block else_block .)
    F64             reduce using rule 68 (statement -> for_block else_block .)
    BOOL            reduce using rule 68 (statement -> for_block else_block .)
    STRING          reduce using rule 68 (statement -> for_block else_block .)
    $end            reduce using rule 68 (statement -> for_block else_block .)
    RBRACE          reduce using rule 68 (statement -> for_block else_block .)
    SEMI            reduce using rule 68 (statement -> for_block else_block .)


state 59

    (89) else_block -> ELSE . block
    (17) block -> . LBRACE program RBRACE

    LBRACE          shift and go to state 115

    block                          shift and go to state 114

state 60

    (81) statement -> if_block else_if_blocks . else_block
    (82) statement -> if_block else_if_blocks .
    (86) else_if_blocks -> else_if_blocks . else_if_block
    (89) else_block -> . ELSE block
    (88) else_if_block -> . ELSE IF expression block

    MATCH           reduce using rule 82 (statement -> if_block else_if_blocks .)
    ID              reduce using rule 82 (statement -> if_block else_if_blocks .)
    ASYNC           reduce using rule 82 (statement -> if_block else_if_blocks .)
    FN              reduce using rule 82 (statement -> if_block else_if_blocks .)
    CLASS           reduce using rule 82 (statement -> if_block else_if_blocks .)
    ENUM            reduce using rule 82 (statement -> if_block else_if_blocks .)
    NAMESPACE       reduce using rule 82 (statement -> if_block else_if_blocks .)
    INTERFACE       reduce using rule 82 (statement -> if_block else_if_blocks .)
    RETURN          reduce using rule 82 (statement -> if_block else_if_blocks .)
    USE             reduce using rule 82 (statement -> if_block else_if_blocks .)
    FOR             reduce using rule 82 (statement -> if_block else_if_blocks .)
    IF              reduce using rule 82 (statement -> if_block else_if_blocks .)
    WHILE           reduce using rule 82 (statement -> if_block else_if_blocks .)
    TRUE            reduce using rule 82 (statement -> if_block else_if_blocks .)
    FALSE           reduce using rule 82 (statement -> if_block else_if_blocks .)
    INCREMENT       reduce using rule 82 (statement -> if_block else_if_blocks .)
    DECREMENT       reduce using rule 82 (statement -> if_block else_if_blocks .)
    NOT             reduce using rule 82 (statement -> if_block else_if_blocks .)
    LPAREN          reduce using rule 82 (statement -> if_block else_if_blocks .)
    AWAIT           reduce using rule 82 (statement -> if_block else_if_blocks .)
    NUMBER          reduce using rule 82 (statement -> if_block else_if_blocks .)
    REF             reduce using rule 82 (statement -> if_block else_if_blocks .)
    POINTER         reduce using rule 82 (statement -> if_block else_if_blocks .)
    error           reduce using rule 82 (statement -> if_block else_if_blocks .)
    I8              reduce using rule 82 (statement -> if_block else_if_blocks .)
    I16             reduce using rule 82 (statement -> if_block else_if_blocks .)
    I32             reduce using rule 82 (statement -> if_block else_if_blocks .)
    I64             reduce using rule 82 (statement -> if_block else_if_blocks .)
    U8              reduce using rule 82 (statement -> if_block else_if_blocks .)
    U16             reduce using rule 82 (statement -> if_block else_if_blocks .)
    U32             reduce using rule 82 (statement -> if_block else_if_blocks .)
    U64             reduce using rule 82 (statement -> if_block else_if_blocks .)
    F32             reduce using rule 82 (statement -> if_block else_if_blocks .)
    F64             reduce using rule 82 (statement -> if_block else_if_blocks .)
    BOOL            reduce using rule 82 (statement -> if_block else_if_blocks .)
    STRING          reduce using rule 82 (statement -> if_block else_if_blocks .)
    $end            reduce using rule 82 (statement -> if_block else_if_blocks .)
    RBRACE          reduce using rule 82 (statement -> if_block else_if_blocks .)
    SEMI            reduce using rule 82 (statement -> if_block else_if_blocks .)
    ELSE            shift and go to state 63

    else_block                     shift and go to state 116
    else_if_block                  shift and go to state 117

state 61

    (83) statement -> if_block else_block .

    MATCH           reduce using rule 83 (statement -> if_block else_block .)
    ID              reduce using rule 83 (statement -> if_block else_block .)
    ASYNC           reduce using rule 83 (statement -> if_block else_block .)
    FN              reduce using rule 83 (statement -> if_block else_block .)
    CLASS           reduce using rule 83 (statement -> if_block else_block .)
    ENUM            reduce using rule 83 (statement -> if_block else_block .)
    NAMESPACE       reduce using rule 83 (statement -> if_block else_block .)
    INTERFACE       reduce using rule 83 (statement -> if_block else_block .)
    RETURN          reduce using rule 83 (statement -> if_block else_block .)
    USE             reduce using rule 83 (statement -> if_block else_block .)
    FOR             reduce using rule 83 (statement -> if_block else_block .)
    IF              reduce using rule 83 (statement -> if_block else_block .)
    WHILE           reduce using rule 83 (statement -> if_block else_block .)
    TRUE            reduce using rule 83 (statement -> if_block else_block .)
    FALSE           reduce using rule 83 (statement -> if_block else_block .)
    INCREMENT       reduce using rule 83 (statement -> if_block else_block .)
    DECREMENT       reduce using rule 83 (statement -> if_block else_block .)
    NOT             reduce using rule 83 (statement -> if_block else_block .)
    LPAREN          reduce using rule 83 (statement -> if_block else_block .)
    AWAIT           reduce using rule 83 (statement -> if_block else_block .)
    NUMBER          reduce using rule 83 (statement -> if_block else_block .)
    REF             reduce using rule 83 (statement -> if_block else_block .)
    POINTER         reduce using rule 83 (statement -> if_block else_block .)
    error           reduce using rule 83 (statement -> if_block else_block .)
    I8              reduce using rule 83 (statement -> if_block else_block .)
    I16             reduce using rule 83 (statement -> if_block else_block .)
    I32             reduce using rule 83 (statement -> if_block else_block .)
    I64             reduce using rule 83 (statement -> if_block else_block .)
    U8              reduce using rule 83 (statement -> if_block else_block .)
    U16             reduce using rule 83 (statement -> if_block else_block .)
    U32             reduce using rule 83 (statement -> if_block else_block .)
    U64             reduce using rule 83 (statement -> if_block else_block .)
    F32             reduce using rule 83 (statement -> if_block else_block .)
    F64             reduce using rule 83 (statement -> if_block else_block .)
    BOOL            reduce using rule 83 (statement -> if_block else_block .)
    STRING          reduce using rule 83 (statement -> if_block else_block .)
    $end            reduce using rule 83 (statement -> if_block else_block .)
    RBRACE          reduce using rule 83 (statement -> if_block else_block .)
    SEMI            reduce using rule 83 (statement -> if_block else_block .)


state 62

    (87) else_if_blocks -> else_if_block .

    ELSE            reduce using rule 87 (else_if_blocks -> else_if_block .)
    MATCH           reduce using rule 87 (else_if_blocks -> else_if_block .)
    ID              reduce using rule 87 (else_if_blocks -> else_if_block .)
    ASYNC           reduce using rule 87 (else_if_blocks -> else_if_block .)
    FN              reduce using rule 87 (else_if_blocks -> else_if_block .)
    CLASS           reduce using rule 87 (else_if_blocks -> else_if_block .)
    ENUM            reduce using rule 87 (else_if_blocks -> else_if_block .)
    NAMESPACE       reduce using rule 87 (else_if_blocks -> else_if_block .)
    INTERFACE       reduce using rule 87 (else_if_blocks -> else_if_block .)
    RETURN          reduce using rule 87 (else_if_blocks -> else_if_block .)
    USE             reduce using rule 87 (else_if_blocks -> else_if_block .)
    FOR             reduce using rule 87 (else_if_blocks -> else_if_block .)
    IF              reduce using rule 87 (else_if_blocks -> else_if_block .)
    WHILE           reduce using rule 87 (else_if_blocks -> else_if_block .)
    TRUE            reduce using rule 87 (else_if_blocks -> else_if_block .)
    FALSE           reduce using rule 87 (else_if_blocks -> else_if_block .)
    INCREMENT       reduce using rule 87 (else_if_blocks -> else_if_block .)
    DECREMENT       reduce using rule 87 (else_if_blocks -> else_if_block .)
    NOT             reduce using rule 87 (else_if_blocks -> else_if_block .)
    LPAREN          reduce using rule 87 (else_if_blocks -> else_if_block .)
    AWAIT           reduce using rule 87 (else_if_blocks -> else_if_block .)
    NUMBER          reduce using rule 87 (else_if_blocks -> else_if_block .)
    REF             reduce using rule 87 (else_if_blocks -> else_if_block .)
    POINTER         reduce using rule 87 (else_if_blocks -> else_if_block .)
    error           reduce using rule 87 (else_if_blocks -> else_if_block .)
    I8              reduce using rule 87 (else_if_blocks -> else_if_block .)
    I16             reduce using rule 87 (else_if_blocks -> else_if_block .)
    I32             reduce using rule 87 (else_if_blocks -> else_if_block .)
    I64             reduce using rule 87 (else_if_blocks -> else_if_block .)
    U8              reduce using rule 87 (else_if_blocks -> else_if_block .)
    U16             reduce using rule 87 (else_if_blocks -> else_if_block .)
    U32             reduce using rule 87 (else_if_blocks -> else_if_block .)
    U64             reduce using rule 87 (else_if_blocks -> else_if_block .)
    F32             reduce using rule 87 (else_if_blocks -> else_if_block .)
    F64             reduce using rule 87 (else_if_blocks -> else_if_block .)
    BOOL            reduce using rule 87 (else_if_blocks -> else_if_block .)
    STRING          reduce using rule 87 (else_if_blocks -> else_if_block .)
    $end            reduce using rule 87 (else_if_blocks -> else_if_block .)
    RBRACE          reduce using rule 87 (else_if_blocks -> else_if_block .)
    SEMI            reduce using rule 87 (else_if_blocks -> else_if_block .)


state 63

    (89) else_block -> ELSE . block
    (88) else_if_block -> ELSE . IF expression block
    (17) block -> . LBRACE program RBRACE

    IF              shift and go to state 118
    LBRACE          shift and go to state 115

    block                          shift and go to state 114

state 64

    (90) statement -> MATCH expression . LBRACE match_cases RBRACE
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    LBRACE          shift and go to state 119
    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82


state 65

    (75) expression -> ID . LPAREN arg_list_opt RPAREN
    (113) expression -> ID .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 85
    LBRACE          reduce using rule 113 (expression -> ID .)
    INCREMENT       reduce using rule 113 (expression -> ID .)
    DECREMENT       reduce using rule 113 (expression -> ID .)
    AND             reduce using rule 113 (expression -> ID .)
    OR              reduce using rule 113 (expression -> ID .)
    EQ              reduce using rule 113 (expression -> ID .)
    NEQ             reduce using rule 113 (expression -> ID .)
    LTHEN           reduce using rule 113 (expression -> ID .)
    RTHEN           reduce using rule 113 (expression -> ID .)
    LEQ             reduce using rule 113 (expression -> ID .)
    GEQ             reduce using rule 113 (expression -> ID .)
    PLUS            reduce using rule 113 (expression -> ID .)
    MINUS           reduce using rule 113 (expression -> ID .)
    TIMES           reduce using rule 113 (expression -> ID .)
    DIVIDE          reduce using rule 113 (expression -> ID .)
    MOD             reduce using rule 113 (expression -> ID .)
    RPAREN          reduce using rule 113 (expression -> ID .)
    SEMI            reduce using rule 113 (expression -> ID .)
    MATCH           reduce using rule 113 (expression -> ID .)
    ID              reduce using rule 113 (expression -> ID .)
    ASYNC           reduce using rule 113 (expression -> ID .)
    FN              reduce using rule 113 (expression -> ID .)
    CLASS           reduce using rule 113 (expression -> ID .)
    ENUM            reduce using rule 113 (expression -> ID .)
    NAMESPACE       reduce using rule 113 (expression -> ID .)
    INTERFACE       reduce using rule 113 (expression -> ID .)
    RETURN          reduce using rule 113 (expression -> ID .)
    USE             reduce using rule 113 (expression -> ID .)
    FOR             reduce using rule 113 (expression -> ID .)
    IF              reduce using rule 113 (expression -> ID .)
    WHILE           reduce using rule 113 (expression -> ID .)
    TRUE            reduce using rule 113 (expression -> ID .)
    FALSE           reduce using rule 113 (expression -> ID .)
    NOT             reduce using rule 113 (expression -> ID .)
    AWAIT           reduce using rule 113 (expression -> ID .)
    NUMBER          reduce using rule 113 (expression -> ID .)
    REF             reduce using rule 113 (expression -> ID .)
    POINTER         reduce using rule 113 (expression -> ID .)
    error           reduce using rule 113 (expression -> ID .)
    I8              reduce using rule 113 (expression -> ID .)
    I16             reduce using rule 113 (expression -> ID .)
    I32             reduce using rule 113 (expression -> ID .)
    I64             reduce using rule 113 (expression -> ID .)
    U8              reduce using rule 113 (expression -> ID .)
    U16             reduce using rule 113 (expression -> ID .)
    U32             reduce using rule 113 (expression -> ID .)
    U64             reduce using rule 113 (expression -> ID .)
    F32             reduce using rule 113 (expression -> ID .)
    F64             reduce using rule 113 (expression -> ID .)
    BOOL            reduce using rule 113 (expression -> ID .)
    STRING          reduce using rule 113 (expression -> ID .)
    $end            reduce using rule 113 (expression -> ID .)
    RBRACE          reduce using rule 113 (expression -> ID .)
    COMMA           reduce using rule 113 (expression -> ID .)

  ! LPAREN          [ reduce using rule 113 (expression -> ID .) ]


state 66

    (114) expression -> REF . ID

    ID              shift and go to state 120


state 67

    (115) expression -> POINTER . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 111

state 68

    (28) expression -> expression INCREMENT .

    INCREMENT       reduce using rule 28 (expression -> expression INCREMENT .)
    DECREMENT       reduce using rule 28 (expression -> expression INCREMENT .)
    AND             reduce using rule 28 (expression -> expression INCREMENT .)
    OR              reduce using rule 28 (expression -> expression INCREMENT .)
    EQ              reduce using rule 28 (expression -> expression INCREMENT .)
    NEQ             reduce using rule 28 (expression -> expression INCREMENT .)
    LTHEN           reduce using rule 28 (expression -> expression INCREMENT .)
    RTHEN           reduce using rule 28 (expression -> expression INCREMENT .)
    LEQ             reduce using rule 28 (expression -> expression INCREMENT .)
    GEQ             reduce using rule 28 (expression -> expression INCREMENT .)
    PLUS            reduce using rule 28 (expression -> expression INCREMENT .)
    MINUS           reduce using rule 28 (expression -> expression INCREMENT .)
    TIMES           reduce using rule 28 (expression -> expression INCREMENT .)
    DIVIDE          reduce using rule 28 (expression -> expression INCREMENT .)
    MOD             reduce using rule 28 (expression -> expression INCREMENT .)
    MATCH           reduce using rule 28 (expression -> expression INCREMENT .)
    ID              reduce using rule 28 (expression -> expression INCREMENT .)
    ASYNC           reduce using rule 28 (expression -> expression INCREMENT .)
    FN              reduce using rule 28 (expression -> expression INCREMENT .)
    CLASS           reduce using rule 28 (expression -> expression INCREMENT .)
    ENUM            reduce using rule 28 (expression -> expression INCREMENT .)
    NAMESPACE       reduce using rule 28 (expression -> expression INCREMENT .)
    INTERFACE       reduce using rule 28 (expression -> expression INCREMENT .)
    RETURN          reduce using rule 28 (expression -> expression INCREMENT .)
    USE             reduce using rule 28 (expression -> expression INCREMENT .)
    FOR             reduce using rule 28 (expression -> expression INCREMENT .)
    IF              reduce using rule 28 (expression -> expression INCREMENT .)
    WHILE           reduce using rule 28 (expression -> expression INCREMENT .)
    TRUE            reduce using rule 28 (expression -> expression INCREMENT .)
    FALSE           reduce using rule 28 (expression -> expression INCREMENT .)
    NOT             reduce using rule 28 (expression -> expression INCREMENT .)
    LPAREN          reduce using rule 28 (expression -> expression INCREMENT .)
    AWAIT           reduce using rule 28 (expression -> expression INCREMENT .)
    NUMBER          reduce using rule 28 (expression -> expression INCREMENT .)
    REF             reduce using rule 28 (expression -> expression INCREMENT .)
    POINTER         reduce using rule 28 (expression -> expression INCREMENT .)
    error           reduce using rule 28 (expression -> expression INCREMENT .)
    I8              reduce using rule 28 (expression -> expression INCREMENT .)
    I16             reduce using rule 28 (expression -> expression INCREMENT .)
    I32             reduce using rule 28 (expression -> expression INCREMENT .)
    I64             reduce using rule 28 (expression -> expression INCREMENT .)
    U8              reduce using rule 28 (expression -> expression INCREMENT .)
    U16             reduce using rule 28 (expression -> expression INCREMENT .)
    U32             reduce using rule 28 (expression -> expression INCREMENT .)
    U64             reduce using rule 28 (expression -> expression INCREMENT .)
    F32             reduce using rule 28 (expression -> expression INCREMENT .)
    F64             reduce using rule 28 (expression -> expression INCREMENT .)
    BOOL            reduce using rule 28 (expression -> expression INCREMENT .)
    STRING          reduce using rule 28 (expression -> expression INCREMENT .)
    $end            reduce using rule 28 (expression -> expression INCREMENT .)
    LBRACE          reduce using rule 28 (expression -> expression INCREMENT .)
    RPAREN          reduce using rule 28 (expression -> expression INCREMENT .)
    SEMI            reduce using rule 28 (expression -> expression INCREMENT .)
    RBRACE          reduce using rule 28 (expression -> expression INCREMENT .)
    COMMA           reduce using rule 28 (expression -> expression INCREMENT .)


state 69

    (29) expression -> expression DECREMENT .

    INCREMENT       reduce using rule 29 (expression -> expression DECREMENT .)
    DECREMENT       reduce using rule 29 (expression -> expression DECREMENT .)
    AND             reduce using rule 29 (expression -> expression DECREMENT .)
    OR              reduce using rule 29 (expression -> expression DECREMENT .)
    EQ              reduce using rule 29 (expression -> expression DECREMENT .)
    NEQ             reduce using rule 29 (expression -> expression DECREMENT .)
    LTHEN           reduce using rule 29 (expression -> expression DECREMENT .)
    RTHEN           reduce using rule 29 (expression -> expression DECREMENT .)
    LEQ             reduce using rule 29 (expression -> expression DECREMENT .)
    GEQ             reduce using rule 29 (expression -> expression DECREMENT .)
    PLUS            reduce using rule 29 (expression -> expression DECREMENT .)
    MINUS           reduce using rule 29 (expression -> expression DECREMENT .)
    TIMES           reduce using rule 29 (expression -> expression DECREMENT .)
    DIVIDE          reduce using rule 29 (expression -> expression DECREMENT .)
    MOD             reduce using rule 29 (expression -> expression DECREMENT .)
    MATCH           reduce using rule 29 (expression -> expression DECREMENT .)
    ID              reduce using rule 29 (expression -> expression DECREMENT .)
    ASYNC           reduce using rule 29 (expression -> expression DECREMENT .)
    FN              reduce using rule 29 (expression -> expression DECREMENT .)
    CLASS           reduce using rule 29 (expression -> expression DECREMENT .)
    ENUM            reduce using rule 29 (expression -> expression DECREMENT .)
    NAMESPACE       reduce using rule 29 (expression -> expression DECREMENT .)
    INTERFACE       reduce using rule 29 (expression -> expression DECREMENT .)
    RETURN          reduce using rule 29 (expression -> expression DECREMENT .)
    USE             reduce using rule 29 (expression -> expression DECREMENT .)
    FOR             reduce using rule 29 (expression -> expression DECREMENT .)
    IF              reduce using rule 29 (expression -> expression DECREMENT .)
    WHILE           reduce using rule 29 (expression -> expression DECREMENT .)
    TRUE            reduce using rule 29 (expression -> expression DECREMENT .)
    FALSE           reduce using rule 29 (expression -> expression DECREMENT .)
    NOT             reduce using rule 29 (expression -> expression DECREMENT .)
    LPAREN          reduce using rule 29 (expression -> expression DECREMENT .)
    AWAIT           reduce using rule 29 (expression -> expression DECREMENT .)
    NUMBER          reduce using rule 29 (expression -> expression DECREMENT .)
    REF             reduce using rule 29 (expression -> expression DECREMENT .)
    POINTER         reduce using rule 29 (expression -> expression DECREMENT .)
    error           reduce using rule 29 (expression -> expression DECREMENT .)
    I8              reduce using rule 29 (expression -> expression DECREMENT .)
    I16             reduce using rule 29 (expression -> expression DECREMENT .)
    I32             reduce using rule 29 (expression -> expression DECREMENT .)
    I64             reduce using rule 29 (expression -> expression DECREMENT .)
    U8              reduce using rule 29 (expression -> expression DECREMENT .)
    U16             reduce using rule 29 (expression -> expression DECREMENT .)
    U32             reduce using rule 29 (expression -> expression DECREMENT .)
    U64             reduce using rule 29 (expression -> expression DECREMENT .)
    F32             reduce using rule 29 (expression -> expression DECREMENT .)
    F64             reduce using rule 29 (expression -> expression DECREMENT .)
    BOOL            reduce using rule 29 (expression -> expression DECREMENT .)
    STRING          reduce using rule 29 (expression -> expression DECREMENT .)
    $end            reduce using rule 29 (expression -> expression DECREMENT .)
    LBRACE          reduce using rule 29 (expression -> expression DECREMENT .)
    RPAREN          reduce using rule 29 (expression -> expression DECREMENT .)
    SEMI            reduce using rule 29 (expression -> expression DECREMENT .)
    RBRACE          reduce using rule 29 (expression -> expression DECREMENT .)
    COMMA           reduce using rule 29 (expression -> expression DECREMENT .)


state 70

    (56) expression -> expression AND . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 121

state 71

    (57) expression -> expression OR . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 122

state 72

    (58) expression -> expression EQ . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 123

state 73

    (59) expression -> expression NEQ . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 124

state 74

    (60) expression -> expression LTHEN . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 125

state 75

    (61) expression -> expression RTHEN . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 126

state 76

    (62) expression -> expression LEQ . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 127

state 77

    (63) expression -> expression GEQ . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 128

state 78

    (69) expression -> expression PLUS . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 129

state 79

    (70) expression -> expression MINUS . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 130

state 80

    (71) expression -> expression TIMES . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 131

state 81

    (72) expression -> expression DIVIDE . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 132

state 82

    (73) expression -> expression MOD . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 133

state 83

    (110) statement -> while_block else_block .

    MATCH           reduce using rule 110 (statement -> while_block else_block .)
    ID              reduce using rule 110 (statement -> while_block else_block .)
    ASYNC           reduce using rule 110 (statement -> while_block else_block .)
    FN              reduce using rule 110 (statement -> while_block else_block .)
    CLASS           reduce using rule 110 (statement -> while_block else_block .)
    ENUM            reduce using rule 110 (statement -> while_block else_block .)
    NAMESPACE       reduce using rule 110 (statement -> while_block else_block .)
    INTERFACE       reduce using rule 110 (statement -> while_block else_block .)
    RETURN          reduce using rule 110 (statement -> while_block else_block .)
    USE             reduce using rule 110 (statement -> while_block else_block .)
    FOR             reduce using rule 110 (statement -> while_block else_block .)
    IF              reduce using rule 110 (statement -> while_block else_block .)
    WHILE           reduce using rule 110 (statement -> while_block else_block .)
    TRUE            reduce using rule 110 (statement -> while_block else_block .)
    FALSE           reduce using rule 110 (statement -> while_block else_block .)
    INCREMENT       reduce using rule 110 (statement -> while_block else_block .)
    DECREMENT       reduce using rule 110 (statement -> while_block else_block .)
    NOT             reduce using rule 110 (statement -> while_block else_block .)
    LPAREN          reduce using rule 110 (statement -> while_block else_block .)
    AWAIT           reduce using rule 110 (statement -> while_block else_block .)
    NUMBER          reduce using rule 110 (statement -> while_block else_block .)
    REF             reduce using rule 110 (statement -> while_block else_block .)
    POINTER         reduce using rule 110 (statement -> while_block else_block .)
    error           reduce using rule 110 (statement -> while_block else_block .)
    I8              reduce using rule 110 (statement -> while_block else_block .)
    I16             reduce using rule 110 (statement -> while_block else_block .)
    I32             reduce using rule 110 (statement -> while_block else_block .)
    I64             reduce using rule 110 (statement -> while_block else_block .)
    U8              reduce using rule 110 (statement -> while_block else_block .)
    U16             reduce using rule 110 (statement -> while_block else_block .)
    U32             reduce using rule 110 (statement -> while_block else_block .)
    U64             reduce using rule 110 (statement -> while_block else_block .)
    F32             reduce using rule 110 (statement -> while_block else_block .)
    F64             reduce using rule 110 (statement -> while_block else_block .)
    BOOL            reduce using rule 110 (statement -> while_block else_block .)
    STRING          reduce using rule 110 (statement -> while_block else_block .)
    $end            reduce using rule 110 (statement -> while_block else_block .)
    RBRACE          reduce using rule 110 (statement -> while_block else_block .)
    SEMI            reduce using rule 110 (statement -> while_block else_block .)


state 84

    (126) statement -> ID ASSIGN . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 134

state 85

    (75) expression -> ID LPAREN . arg_list_opt RPAREN
    (76) arg_list_opt -> . arg_list
    (77) arg_list_opt -> . empty
    (78) arg_list -> . arg_list COMMA expression
    (79) arg_list -> . expression
    (80) arg_list -> . empty
    (111) empty -> .
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    RPAREN          reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    arg_list_opt                   shift and go to state 135
    arg_list                       shift and go to state 136
    empty                          shift and go to state 137
    expression                     shift and go to state 138

state 86

    (18) type_with_generics -> ID LANGLE . type_list RANGLE
    (20) type_list -> . type_list COMMA type_specifier
    (21) type_list -> . type_specifier
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    ID              shift and go to state 139
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54
    POINTER         shift and go to state 110
    REF             shift and go to state 107

    type_list                      shift and go to state 140
    type_specifier                 shift and go to state 141
    type_with_generics             shift and go to state 22

state 87

    (19) type_with_generics -> ID empty .

    ID              reduce using rule 19 (type_with_generics -> ID empty .)
    LPAREN          reduce using rule 19 (type_with_generics -> ID empty .)
    EXTENDS         reduce using rule 19 (type_with_generics -> ID empty .)
    LBRACE          reduce using rule 19 (type_with_generics -> ID empty .)
    RANGLE          reduce using rule 19 (type_with_generics -> ID empty .)
    COMMA           reduce using rule 19 (type_with_generics -> ID empty .)


state 88

    (106) function_definition -> ASYNC FN . ID LPAREN parameters_opt RPAREN return_type_opt block

    ID              shift and go to state 142


state 89

    (123) function_definition -> FN type_with_generics . LPAREN parameters_opt RPAREN return_type_opt block

    LPAREN          shift and go to state 143


state 90

    (18) type_with_generics -> ID . LANGLE type_list RANGLE
    (19) type_with_generics -> ID . empty
    (111) empty -> .

    LANGLE          shift and go to state 86
    LPAREN          reduce using rule 111 (empty -> .)
    EXTENDS         reduce using rule 111 (empty -> .)
    LBRACE          reduce using rule 111 (empty -> .)

    empty                          shift and go to state 87

state 91

    (74) expression -> LPAREN expression . RPAREN
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    RPAREN          shift and go to state 144
    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82


state 92

    (124) class_definition -> CLASS type_with_generics . extends_opt LBRACE class_body RBRACE
    (138) struct_definition -> CLASS type_with_generics . extends_opt LBRACE struct_body RBRACE
    (38) extends_opt -> . EXTENDS type_with_generics
    (39) extends_opt -> . empty
    (111) empty -> .

    EXTENDS         shift and go to state 146
    LBRACE          reduce using rule 111 (empty -> .)

    extends_opt                    shift and go to state 145
    empty                          shift and go to state 147

state 93

    (139) enum_definition -> ENUM type_with_generics . LBRACE enum_body RBRACE

    LBRACE          shift and go to state 148


state 94

    (15) namespace_definition -> NAMESPACE ID . block
    (17) block -> . LBRACE program RBRACE

    LBRACE          shift and go to state 115

    block                          shift and go to state 149

state 95

    (129) variable -> type_specifier ID .
    (130) variable -> type_specifier ID . ASSIGN expression
    (131) variable -> type_specifier ID . LPAREN arg_list_opt RPAREN
    (132) variable -> type_specifier ID . LBRACE arg_list_opt RBRACE
    (133) variable -> type_specifier ID . ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN
    (134) variable -> type_specifier ID . ASSIGN expression LPAREN arg_list_opt RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    SEMI            reduce using rule 129 (variable -> type_specifier ID .)
    MATCH           reduce using rule 129 (variable -> type_specifier ID .)
    ID              reduce using rule 129 (variable -> type_specifier ID .)
    ASYNC           reduce using rule 129 (variable -> type_specifier ID .)
    FN              reduce using rule 129 (variable -> type_specifier ID .)
    CLASS           reduce using rule 129 (variable -> type_specifier ID .)
    ENUM            reduce using rule 129 (variable -> type_specifier ID .)
    NAMESPACE       reduce using rule 129 (variable -> type_specifier ID .)
    INTERFACE       reduce using rule 129 (variable -> type_specifier ID .)
    RETURN          reduce using rule 129 (variable -> type_specifier ID .)
    USE             reduce using rule 129 (variable -> type_specifier ID .)
    FOR             reduce using rule 129 (variable -> type_specifier ID .)
    IF              reduce using rule 129 (variable -> type_specifier ID .)
    WHILE           reduce using rule 129 (variable -> type_specifier ID .)
    TRUE            reduce using rule 129 (variable -> type_specifier ID .)
    FALSE           reduce using rule 129 (variable -> type_specifier ID .)
    INCREMENT       reduce using rule 129 (variable -> type_specifier ID .)
    DECREMENT       reduce using rule 129 (variable -> type_specifier ID .)
    NOT             reduce using rule 129 (variable -> type_specifier ID .)
    AWAIT           reduce using rule 129 (variable -> type_specifier ID .)
    NUMBER          reduce using rule 129 (variable -> type_specifier ID .)
    REF             reduce using rule 129 (variable -> type_specifier ID .)
    POINTER         reduce using rule 129 (variable -> type_specifier ID .)
    error           reduce using rule 129 (variable -> type_specifier ID .)
    I8              reduce using rule 129 (variable -> type_specifier ID .)
    I16             reduce using rule 129 (variable -> type_specifier ID .)
    I32             reduce using rule 129 (variable -> type_specifier ID .)
    I64             reduce using rule 129 (variable -> type_specifier ID .)
    U8              reduce using rule 129 (variable -> type_specifier ID .)
    U16             reduce using rule 129 (variable -> type_specifier ID .)
    U32             reduce using rule 129 (variable -> type_specifier ID .)
    U64             reduce using rule 129 (variable -> type_specifier ID .)
    F32             reduce using rule 129 (variable -> type_specifier ID .)
    F64             reduce using rule 129 (variable -> type_specifier ID .)
    BOOL            reduce using rule 129 (variable -> type_specifier ID .)
    STRING          reduce using rule 129 (variable -> type_specifier ID .)
    $end            reduce using rule 129 (variable -> type_specifier ID .)
    RBRACE          reduce using rule 129 (variable -> type_specifier ID .)
    ASSIGN          shift and go to state 150
    LPAREN          shift and go to state 151
    LBRACE          shift and go to state 152

  ! LPAREN          [ reduce using rule 129 (variable -> type_specifier ID .) ]


state 96

    (135) interface_definition -> INTERFACE type_with_generics . LBRACE interface_body RBRACE

    LBRACE          shift and go to state 153


state 97

    (16) return_statement -> RETURN expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    SEMI            reduce using rule 16 (return_statement -> RETURN expression .)
    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82


state 98

    (105) use_statement -> USE qualified_name . SEMI
    (103) qualified_name -> qualified_name . DOUBLE_COLON ID

    SEMI            shift and go to state 154
    DOUBLE_COLON    shift and go to state 155


state 99

    (104) qualified_name -> ID .

    SEMI            reduce using rule 104 (qualified_name -> ID .)
    DOUBLE_COLON    reduce using rule 104 (qualified_name -> ID .)


state 100

    (66) for_block -> FOR ID . IN expression block
    (67) for_block -> FOR ID . IN LPAREN expression RPAREN block

    IN              shift and go to state 156


state 101

    (85) if_block -> IF expression . block
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression
    (17) block -> . LBRACE program RBRACE

    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82
    LBRACE          shift and go to state 115

    block                          shift and go to state 157

state 102

    (109) while_block -> WHILE expression . block
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression
    (17) block -> . LBRACE program RBRACE

    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82
    LBRACE          shift and go to state 115

    block                          shift and go to state 158

state 103

    (30) expression -> INCREMENT expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    MATCH           reduce using rule 30 (expression -> INCREMENT expression .)
    ID              reduce using rule 30 (expression -> INCREMENT expression .)
    ASYNC           reduce using rule 30 (expression -> INCREMENT expression .)
    FN              reduce using rule 30 (expression -> INCREMENT expression .)
    CLASS           reduce using rule 30 (expression -> INCREMENT expression .)
    ENUM            reduce using rule 30 (expression -> INCREMENT expression .)
    NAMESPACE       reduce using rule 30 (expression -> INCREMENT expression .)
    INTERFACE       reduce using rule 30 (expression -> INCREMENT expression .)
    RETURN          reduce using rule 30 (expression -> INCREMENT expression .)
    USE             reduce using rule 30 (expression -> INCREMENT expression .)
    FOR             reduce using rule 30 (expression -> INCREMENT expression .)
    IF              reduce using rule 30 (expression -> INCREMENT expression .)
    WHILE           reduce using rule 30 (expression -> INCREMENT expression .)
    TRUE            reduce using rule 30 (expression -> INCREMENT expression .)
    FALSE           reduce using rule 30 (expression -> INCREMENT expression .)
    NOT             reduce using rule 30 (expression -> INCREMENT expression .)
    LPAREN          reduce using rule 30 (expression -> INCREMENT expression .)
    AWAIT           reduce using rule 30 (expression -> INCREMENT expression .)
    NUMBER          reduce using rule 30 (expression -> INCREMENT expression .)
    REF             reduce using rule 30 (expression -> INCREMENT expression .)
    POINTER         reduce using rule 30 (expression -> INCREMENT expression .)
    error           reduce using rule 30 (expression -> INCREMENT expression .)
    I8              reduce using rule 30 (expression -> INCREMENT expression .)
    I16             reduce using rule 30 (expression -> INCREMENT expression .)
    I32             reduce using rule 30 (expression -> INCREMENT expression .)
    I64             reduce using rule 30 (expression -> INCREMENT expression .)
    U8              reduce using rule 30 (expression -> INCREMENT expression .)
    U16             reduce using rule 30 (expression -> INCREMENT expression .)
    U32             reduce using rule 30 (expression -> INCREMENT expression .)
    U64             reduce using rule 30 (expression -> INCREMENT expression .)
    F32             reduce using rule 30 (expression -> INCREMENT expression .)
    F64             reduce using rule 30 (expression -> INCREMENT expression .)
    BOOL            reduce using rule 30 (expression -> INCREMENT expression .)
    STRING          reduce using rule 30 (expression -> INCREMENT expression .)
    $end            reduce using rule 30 (expression -> INCREMENT expression .)
    LBRACE          reduce using rule 30 (expression -> INCREMENT expression .)
    RPAREN          reduce using rule 30 (expression -> INCREMENT expression .)
    SEMI            reduce using rule 30 (expression -> INCREMENT expression .)
    RBRACE          reduce using rule 30 (expression -> INCREMENT expression .)
    COMMA           reduce using rule 30 (expression -> INCREMENT expression .)
    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82

  ! INCREMENT       [ reduce using rule 30 (expression -> INCREMENT expression .) ]
  ! DECREMENT       [ reduce using rule 30 (expression -> INCREMENT expression .) ]
  ! AND             [ reduce using rule 30 (expression -> INCREMENT expression .) ]
  ! OR              [ reduce using rule 30 (expression -> INCREMENT expression .) ]
  ! EQ              [ reduce using rule 30 (expression -> INCREMENT expression .) ]
  ! NEQ             [ reduce using rule 30 (expression -> INCREMENT expression .) ]
  ! LTHEN           [ reduce using rule 30 (expression -> INCREMENT expression .) ]
  ! RTHEN           [ reduce using rule 30 (expression -> INCREMENT expression .) ]
  ! LEQ             [ reduce using rule 30 (expression -> INCREMENT expression .) ]
  ! GEQ             [ reduce using rule 30 (expression -> INCREMENT expression .) ]
  ! PLUS            [ reduce using rule 30 (expression -> INCREMENT expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> INCREMENT expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> INCREMENT expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> INCREMENT expression .) ]
  ! MOD             [ reduce using rule 30 (expression -> INCREMENT expression .) ]


state 104

    (31) expression -> DECREMENT expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    MATCH           reduce using rule 31 (expression -> DECREMENT expression .)
    ID              reduce using rule 31 (expression -> DECREMENT expression .)
    ASYNC           reduce using rule 31 (expression -> DECREMENT expression .)
    FN              reduce using rule 31 (expression -> DECREMENT expression .)
    CLASS           reduce using rule 31 (expression -> DECREMENT expression .)
    ENUM            reduce using rule 31 (expression -> DECREMENT expression .)
    NAMESPACE       reduce using rule 31 (expression -> DECREMENT expression .)
    INTERFACE       reduce using rule 31 (expression -> DECREMENT expression .)
    RETURN          reduce using rule 31 (expression -> DECREMENT expression .)
    USE             reduce using rule 31 (expression -> DECREMENT expression .)
    FOR             reduce using rule 31 (expression -> DECREMENT expression .)
    IF              reduce using rule 31 (expression -> DECREMENT expression .)
    WHILE           reduce using rule 31 (expression -> DECREMENT expression .)
    TRUE            reduce using rule 31 (expression -> DECREMENT expression .)
    FALSE           reduce using rule 31 (expression -> DECREMENT expression .)
    NOT             reduce using rule 31 (expression -> DECREMENT expression .)
    LPAREN          reduce using rule 31 (expression -> DECREMENT expression .)
    AWAIT           reduce using rule 31 (expression -> DECREMENT expression .)
    NUMBER          reduce using rule 31 (expression -> DECREMENT expression .)
    REF             reduce using rule 31 (expression -> DECREMENT expression .)
    POINTER         reduce using rule 31 (expression -> DECREMENT expression .)
    error           reduce using rule 31 (expression -> DECREMENT expression .)
    I8              reduce using rule 31 (expression -> DECREMENT expression .)
    I16             reduce using rule 31 (expression -> DECREMENT expression .)
    I32             reduce using rule 31 (expression -> DECREMENT expression .)
    I64             reduce using rule 31 (expression -> DECREMENT expression .)
    U8              reduce using rule 31 (expression -> DECREMENT expression .)
    U16             reduce using rule 31 (expression -> DECREMENT expression .)
    U32             reduce using rule 31 (expression -> DECREMENT expression .)
    U64             reduce using rule 31 (expression -> DECREMENT expression .)
    F32             reduce using rule 31 (expression -> DECREMENT expression .)
    F64             reduce using rule 31 (expression -> DECREMENT expression .)
    BOOL            reduce using rule 31 (expression -> DECREMENT expression .)
    STRING          reduce using rule 31 (expression -> DECREMENT expression .)
    $end            reduce using rule 31 (expression -> DECREMENT expression .)
    LBRACE          reduce using rule 31 (expression -> DECREMENT expression .)
    RPAREN          reduce using rule 31 (expression -> DECREMENT expression .)
    SEMI            reduce using rule 31 (expression -> DECREMENT expression .)
    RBRACE          reduce using rule 31 (expression -> DECREMENT expression .)
    COMMA           reduce using rule 31 (expression -> DECREMENT expression .)
    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82

  ! INCREMENT       [ reduce using rule 31 (expression -> DECREMENT expression .) ]
  ! DECREMENT       [ reduce using rule 31 (expression -> DECREMENT expression .) ]
  ! AND             [ reduce using rule 31 (expression -> DECREMENT expression .) ]
  ! OR              [ reduce using rule 31 (expression -> DECREMENT expression .) ]
  ! EQ              [ reduce using rule 31 (expression -> DECREMENT expression .) ]
  ! NEQ             [ reduce using rule 31 (expression -> DECREMENT expression .) ]
  ! LTHEN           [ reduce using rule 31 (expression -> DECREMENT expression .) ]
  ! RTHEN           [ reduce using rule 31 (expression -> DECREMENT expression .) ]
  ! LEQ             [ reduce using rule 31 (expression -> DECREMENT expression .) ]
  ! GEQ             [ reduce using rule 31 (expression -> DECREMENT expression .) ]
  ! PLUS            [ reduce using rule 31 (expression -> DECREMENT expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> DECREMENT expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> DECREMENT expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> DECREMENT expression .) ]
  ! MOD             [ reduce using rule 31 (expression -> DECREMENT expression .) ]


state 105

    (64) expression -> NOT expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    MATCH           reduce using rule 64 (expression -> NOT expression .)
    ID              reduce using rule 64 (expression -> NOT expression .)
    ASYNC           reduce using rule 64 (expression -> NOT expression .)
    FN              reduce using rule 64 (expression -> NOT expression .)
    CLASS           reduce using rule 64 (expression -> NOT expression .)
    ENUM            reduce using rule 64 (expression -> NOT expression .)
    NAMESPACE       reduce using rule 64 (expression -> NOT expression .)
    INTERFACE       reduce using rule 64 (expression -> NOT expression .)
    RETURN          reduce using rule 64 (expression -> NOT expression .)
    USE             reduce using rule 64 (expression -> NOT expression .)
    FOR             reduce using rule 64 (expression -> NOT expression .)
    IF              reduce using rule 64 (expression -> NOT expression .)
    WHILE           reduce using rule 64 (expression -> NOT expression .)
    TRUE            reduce using rule 64 (expression -> NOT expression .)
    FALSE           reduce using rule 64 (expression -> NOT expression .)
    NOT             reduce using rule 64 (expression -> NOT expression .)
    LPAREN          reduce using rule 64 (expression -> NOT expression .)
    AWAIT           reduce using rule 64 (expression -> NOT expression .)
    NUMBER          reduce using rule 64 (expression -> NOT expression .)
    REF             reduce using rule 64 (expression -> NOT expression .)
    POINTER         reduce using rule 64 (expression -> NOT expression .)
    error           reduce using rule 64 (expression -> NOT expression .)
    I8              reduce using rule 64 (expression -> NOT expression .)
    I16             reduce using rule 64 (expression -> NOT expression .)
    I32             reduce using rule 64 (expression -> NOT expression .)
    I64             reduce using rule 64 (expression -> NOT expression .)
    U8              reduce using rule 64 (expression -> NOT expression .)
    U16             reduce using rule 64 (expression -> NOT expression .)
    U32             reduce using rule 64 (expression -> NOT expression .)
    U64             reduce using rule 64 (expression -> NOT expression .)
    F32             reduce using rule 64 (expression -> NOT expression .)
    F64             reduce using rule 64 (expression -> NOT expression .)
    BOOL            reduce using rule 64 (expression -> NOT expression .)
    STRING          reduce using rule 64 (expression -> NOT expression .)
    $end            reduce using rule 64 (expression -> NOT expression .)
    LBRACE          reduce using rule 64 (expression -> NOT expression .)
    RPAREN          reduce using rule 64 (expression -> NOT expression .)
    SEMI            reduce using rule 64 (expression -> NOT expression .)
    RBRACE          reduce using rule 64 (expression -> NOT expression .)
    COMMA           reduce using rule 64 (expression -> NOT expression .)
    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82

  ! INCREMENT       [ reduce using rule 64 (expression -> NOT expression .) ]
  ! DECREMENT       [ reduce using rule 64 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 64 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 64 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 64 (expression -> NOT expression .) ]
  ! NEQ             [ reduce using rule 64 (expression -> NOT expression .) ]
  ! LTHEN           [ reduce using rule 64 (expression -> NOT expression .) ]
  ! RTHEN           [ reduce using rule 64 (expression -> NOT expression .) ]
  ! LEQ             [ reduce using rule 64 (expression -> NOT expression .) ]
  ! GEQ             [ reduce using rule 64 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 64 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 64 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 64 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 64 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 64 (expression -> NOT expression .) ]


state 106

    (107) expression -> AWAIT expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    MATCH           reduce using rule 107 (expression -> AWAIT expression .)
    ID              reduce using rule 107 (expression -> AWAIT expression .)
    ASYNC           reduce using rule 107 (expression -> AWAIT expression .)
    FN              reduce using rule 107 (expression -> AWAIT expression .)
    CLASS           reduce using rule 107 (expression -> AWAIT expression .)
    ENUM            reduce using rule 107 (expression -> AWAIT expression .)
    NAMESPACE       reduce using rule 107 (expression -> AWAIT expression .)
    INTERFACE       reduce using rule 107 (expression -> AWAIT expression .)
    RETURN          reduce using rule 107 (expression -> AWAIT expression .)
    USE             reduce using rule 107 (expression -> AWAIT expression .)
    FOR             reduce using rule 107 (expression -> AWAIT expression .)
    IF              reduce using rule 107 (expression -> AWAIT expression .)
    WHILE           reduce using rule 107 (expression -> AWAIT expression .)
    TRUE            reduce using rule 107 (expression -> AWAIT expression .)
    FALSE           reduce using rule 107 (expression -> AWAIT expression .)
    NOT             reduce using rule 107 (expression -> AWAIT expression .)
    LPAREN          reduce using rule 107 (expression -> AWAIT expression .)
    AWAIT           reduce using rule 107 (expression -> AWAIT expression .)
    NUMBER          reduce using rule 107 (expression -> AWAIT expression .)
    REF             reduce using rule 107 (expression -> AWAIT expression .)
    POINTER         reduce using rule 107 (expression -> AWAIT expression .)
    error           reduce using rule 107 (expression -> AWAIT expression .)
    I8              reduce using rule 107 (expression -> AWAIT expression .)
    I16             reduce using rule 107 (expression -> AWAIT expression .)
    I32             reduce using rule 107 (expression -> AWAIT expression .)
    I64             reduce using rule 107 (expression -> AWAIT expression .)
    U8              reduce using rule 107 (expression -> AWAIT expression .)
    U16             reduce using rule 107 (expression -> AWAIT expression .)
    U32             reduce using rule 107 (expression -> AWAIT expression .)
    U64             reduce using rule 107 (expression -> AWAIT expression .)
    F32             reduce using rule 107 (expression -> AWAIT expression .)
    F64             reduce using rule 107 (expression -> AWAIT expression .)
    BOOL            reduce using rule 107 (expression -> AWAIT expression .)
    STRING          reduce using rule 107 (expression -> AWAIT expression .)
    $end            reduce using rule 107 (expression -> AWAIT expression .)
    LBRACE          reduce using rule 107 (expression -> AWAIT expression .)
    RPAREN          reduce using rule 107 (expression -> AWAIT expression .)
    SEMI            reduce using rule 107 (expression -> AWAIT expression .)
    RBRACE          reduce using rule 107 (expression -> AWAIT expression .)
    COMMA           reduce using rule 107 (expression -> AWAIT expression .)
    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82

  ! INCREMENT       [ reduce using rule 107 (expression -> AWAIT expression .) ]
  ! DECREMENT       [ reduce using rule 107 (expression -> AWAIT expression .) ]
  ! AND             [ reduce using rule 107 (expression -> AWAIT expression .) ]
  ! OR              [ reduce using rule 107 (expression -> AWAIT expression .) ]
  ! EQ              [ reduce using rule 107 (expression -> AWAIT expression .) ]
  ! NEQ             [ reduce using rule 107 (expression -> AWAIT expression .) ]
  ! LTHEN           [ reduce using rule 107 (expression -> AWAIT expression .) ]
  ! RTHEN           [ reduce using rule 107 (expression -> AWAIT expression .) ]
  ! LEQ             [ reduce using rule 107 (expression -> AWAIT expression .) ]
  ! GEQ             [ reduce using rule 107 (expression -> AWAIT expression .) ]
  ! PLUS            [ reduce using rule 107 (expression -> AWAIT expression .) ]
  ! MINUS           [ reduce using rule 107 (expression -> AWAIT expression .) ]
  ! TIMES           [ reduce using rule 107 (expression -> AWAIT expression .) ]
  ! DIVIDE          [ reduce using rule 107 (expression -> AWAIT expression .) ]
  ! MOD             [ reduce using rule 107 (expression -> AWAIT expression .) ]


state 107

    (55) type_specifier -> REF . type_specifier
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    ID              shift and go to state 139
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54
    POINTER         shift and go to state 110
    REF             shift and go to state 107

    type_specifier                 shift and go to state 109
    type_with_generics             shift and go to state 22

state 108

    (114) expression -> REF ID .
    (40) type_specifier -> ID .
    (18) type_with_generics -> ID . LANGLE type_list RANGLE
    (19) type_with_generics -> ID . empty
    (111) empty -> .

  ! reduce/reduce conflict for ID resolved using rule 40 (type_specifier -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 40 (type_specifier -> ID .)
    INCREMENT       reduce using rule 114 (expression -> REF ID .)
    DECREMENT       reduce using rule 114 (expression -> REF ID .)
    AND             reduce using rule 114 (expression -> REF ID .)
    OR              reduce using rule 114 (expression -> REF ID .)
    EQ              reduce using rule 114 (expression -> REF ID .)
    NEQ             reduce using rule 114 (expression -> REF ID .)
    LTHEN           reduce using rule 114 (expression -> REF ID .)
    RTHEN           reduce using rule 114 (expression -> REF ID .)
    LEQ             reduce using rule 114 (expression -> REF ID .)
    GEQ             reduce using rule 114 (expression -> REF ID .)
    PLUS            reduce using rule 114 (expression -> REF ID .)
    MINUS           reduce using rule 114 (expression -> REF ID .)
    TIMES           reduce using rule 114 (expression -> REF ID .)
    DIVIDE          reduce using rule 114 (expression -> REF ID .)
    MOD             reduce using rule 114 (expression -> REF ID .)
    MATCH           reduce using rule 114 (expression -> REF ID .)
    ASYNC           reduce using rule 114 (expression -> REF ID .)
    FN              reduce using rule 114 (expression -> REF ID .)
    CLASS           reduce using rule 114 (expression -> REF ID .)
    ENUM            reduce using rule 114 (expression -> REF ID .)
    NAMESPACE       reduce using rule 114 (expression -> REF ID .)
    INTERFACE       reduce using rule 114 (expression -> REF ID .)
    RETURN          reduce using rule 114 (expression -> REF ID .)
    USE             reduce using rule 114 (expression -> REF ID .)
    FOR             reduce using rule 114 (expression -> REF ID .)
    IF              reduce using rule 114 (expression -> REF ID .)
    WHILE           reduce using rule 114 (expression -> REF ID .)
    TRUE            reduce using rule 114 (expression -> REF ID .)
    FALSE           reduce using rule 114 (expression -> REF ID .)
    NOT             reduce using rule 114 (expression -> REF ID .)
    LPAREN          reduce using rule 114 (expression -> REF ID .)
    AWAIT           reduce using rule 114 (expression -> REF ID .)
    NUMBER          reduce using rule 114 (expression -> REF ID .)
    REF             reduce using rule 114 (expression -> REF ID .)
    POINTER         reduce using rule 114 (expression -> REF ID .)
    error           reduce using rule 114 (expression -> REF ID .)
    I8              reduce using rule 114 (expression -> REF ID .)
    I16             reduce using rule 114 (expression -> REF ID .)
    I32             reduce using rule 114 (expression -> REF ID .)
    I64             reduce using rule 114 (expression -> REF ID .)
    U8              reduce using rule 114 (expression -> REF ID .)
    U16             reduce using rule 114 (expression -> REF ID .)
    U32             reduce using rule 114 (expression -> REF ID .)
    U64             reduce using rule 114 (expression -> REF ID .)
    F32             reduce using rule 114 (expression -> REF ID .)
    F64             reduce using rule 114 (expression -> REF ID .)
    BOOL            reduce using rule 114 (expression -> REF ID .)
    STRING          reduce using rule 114 (expression -> REF ID .)
    $end            reduce using rule 114 (expression -> REF ID .)
    RBRACE          reduce using rule 114 (expression -> REF ID .)
    SEMI            reduce using rule 114 (expression -> REF ID .)
    ID              reduce using rule 40 (type_specifier -> ID .)
    LANGLE          shift and go to state 86

  ! ID              [ reduce using rule 114 (expression -> REF ID .) ]
  ! ID              [ reduce using rule 111 (empty -> .) ]

    empty                          shift and go to state 87

state 109

    (55) type_specifier -> REF type_specifier .

    ID              reduce using rule 55 (type_specifier -> REF type_specifier .)
    RANGLE          reduce using rule 55 (type_specifier -> REF type_specifier .)
    COMMA           reduce using rule 55 (type_specifier -> REF type_specifier .)
    LPAREN          reduce using rule 55 (type_specifier -> REF type_specifier .)
    LBRACE          reduce using rule 55 (type_specifier -> REF type_specifier .)


state 110

    (54) type_specifier -> POINTER . type_specifier
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    ID              shift and go to state 139
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54
    POINTER         shift and go to state 110
    REF             shift and go to state 107

    type_specifier                 shift and go to state 112
    type_with_generics             shift and go to state 22

state 111

    (115) expression -> POINTER expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    MATCH           reduce using rule 115 (expression -> POINTER expression .)
    ID              reduce using rule 115 (expression -> POINTER expression .)
    ASYNC           reduce using rule 115 (expression -> POINTER expression .)
    FN              reduce using rule 115 (expression -> POINTER expression .)
    CLASS           reduce using rule 115 (expression -> POINTER expression .)
    ENUM            reduce using rule 115 (expression -> POINTER expression .)
    NAMESPACE       reduce using rule 115 (expression -> POINTER expression .)
    INTERFACE       reduce using rule 115 (expression -> POINTER expression .)
    RETURN          reduce using rule 115 (expression -> POINTER expression .)
    USE             reduce using rule 115 (expression -> POINTER expression .)
    FOR             reduce using rule 115 (expression -> POINTER expression .)
    IF              reduce using rule 115 (expression -> POINTER expression .)
    WHILE           reduce using rule 115 (expression -> POINTER expression .)
    TRUE            reduce using rule 115 (expression -> POINTER expression .)
    FALSE           reduce using rule 115 (expression -> POINTER expression .)
    NOT             reduce using rule 115 (expression -> POINTER expression .)
    LPAREN          reduce using rule 115 (expression -> POINTER expression .)
    AWAIT           reduce using rule 115 (expression -> POINTER expression .)
    NUMBER          reduce using rule 115 (expression -> POINTER expression .)
    REF             reduce using rule 115 (expression -> POINTER expression .)
    POINTER         reduce using rule 115 (expression -> POINTER expression .)
    error           reduce using rule 115 (expression -> POINTER expression .)
    I8              reduce using rule 115 (expression -> POINTER expression .)
    I16             reduce using rule 115 (expression -> POINTER expression .)
    I32             reduce using rule 115 (expression -> POINTER expression .)
    I64             reduce using rule 115 (expression -> POINTER expression .)
    U8              reduce using rule 115 (expression -> POINTER expression .)
    U16             reduce using rule 115 (expression -> POINTER expression .)
    U32             reduce using rule 115 (expression -> POINTER expression .)
    U64             reduce using rule 115 (expression -> POINTER expression .)
    F32             reduce using rule 115 (expression -> POINTER expression .)
    F64             reduce using rule 115 (expression -> POINTER expression .)
    BOOL            reduce using rule 115 (expression -> POINTER expression .)
    STRING          reduce using rule 115 (expression -> POINTER expression .)
    $end            reduce using rule 115 (expression -> POINTER expression .)
    LBRACE          reduce using rule 115 (expression -> POINTER expression .)
    RPAREN          reduce using rule 115 (expression -> POINTER expression .)
    SEMI            reduce using rule 115 (expression -> POINTER expression .)
    RBRACE          reduce using rule 115 (expression -> POINTER expression .)
    COMMA           reduce using rule 115 (expression -> POINTER expression .)
    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82

  ! INCREMENT       [ reduce using rule 115 (expression -> POINTER expression .) ]
  ! DECREMENT       [ reduce using rule 115 (expression -> POINTER expression .) ]
  ! AND             [ reduce using rule 115 (expression -> POINTER expression .) ]
  ! OR              [ reduce using rule 115 (expression -> POINTER expression .) ]
  ! EQ              [ reduce using rule 115 (expression -> POINTER expression .) ]
  ! NEQ             [ reduce using rule 115 (expression -> POINTER expression .) ]
  ! LTHEN           [ reduce using rule 115 (expression -> POINTER expression .) ]
  ! RTHEN           [ reduce using rule 115 (expression -> POINTER expression .) ]
  ! LEQ             [ reduce using rule 115 (expression -> POINTER expression .) ]
  ! GEQ             [ reduce using rule 115 (expression -> POINTER expression .) ]
  ! PLUS            [ reduce using rule 115 (expression -> POINTER expression .) ]
  ! MINUS           [ reduce using rule 115 (expression -> POINTER expression .) ]
  ! TIMES           [ reduce using rule 115 (expression -> POINTER expression .) ]
  ! DIVIDE          [ reduce using rule 115 (expression -> POINTER expression .) ]
  ! MOD             [ reduce using rule 115 (expression -> POINTER expression .) ]


state 112

    (54) type_specifier -> POINTER type_specifier .

    ID              reduce using rule 54 (type_specifier -> POINTER type_specifier .)
    RANGLE          reduce using rule 54 (type_specifier -> POINTER type_specifier .)
    COMMA           reduce using rule 54 (type_specifier -> POINTER type_specifier .)
    LPAREN          reduce using rule 54 (type_specifier -> POINTER type_specifier .)
    LBRACE          reduce using rule 54 (type_specifier -> POINTER type_specifier .)


state 113

    (75) expression -> ID . LPAREN arg_list_opt RPAREN
    (113) expression -> ID .
    (40) type_specifier -> ID .
    (18) type_with_generics -> ID . LANGLE type_list RANGLE
    (19) type_with_generics -> ID . empty
    (111) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 40 (type_specifier -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 40 (type_specifier -> ID .)
    LPAREN          shift and go to state 85
    INCREMENT       reduce using rule 113 (expression -> ID .)
    DECREMENT       reduce using rule 113 (expression -> ID .)
    AND             reduce using rule 113 (expression -> ID .)
    OR              reduce using rule 113 (expression -> ID .)
    EQ              reduce using rule 113 (expression -> ID .)
    NEQ             reduce using rule 113 (expression -> ID .)
    LTHEN           reduce using rule 113 (expression -> ID .)
    RTHEN           reduce using rule 113 (expression -> ID .)
    LEQ             reduce using rule 113 (expression -> ID .)
    GEQ             reduce using rule 113 (expression -> ID .)
    PLUS            reduce using rule 113 (expression -> ID .)
    MINUS           reduce using rule 113 (expression -> ID .)
    TIMES           reduce using rule 113 (expression -> ID .)
    DIVIDE          reduce using rule 113 (expression -> ID .)
    MOD             reduce using rule 113 (expression -> ID .)
    MATCH           reduce using rule 113 (expression -> ID .)
    ASYNC           reduce using rule 113 (expression -> ID .)
    FN              reduce using rule 113 (expression -> ID .)
    CLASS           reduce using rule 113 (expression -> ID .)
    ENUM            reduce using rule 113 (expression -> ID .)
    NAMESPACE       reduce using rule 113 (expression -> ID .)
    INTERFACE       reduce using rule 113 (expression -> ID .)
    RETURN          reduce using rule 113 (expression -> ID .)
    USE             reduce using rule 113 (expression -> ID .)
    FOR             reduce using rule 113 (expression -> ID .)
    IF              reduce using rule 113 (expression -> ID .)
    WHILE           reduce using rule 113 (expression -> ID .)
    TRUE            reduce using rule 113 (expression -> ID .)
    FALSE           reduce using rule 113 (expression -> ID .)
    NOT             reduce using rule 113 (expression -> ID .)
    AWAIT           reduce using rule 113 (expression -> ID .)
    NUMBER          reduce using rule 113 (expression -> ID .)
    REF             reduce using rule 113 (expression -> ID .)
    POINTER         reduce using rule 113 (expression -> ID .)
    error           reduce using rule 113 (expression -> ID .)
    I8              reduce using rule 113 (expression -> ID .)
    I16             reduce using rule 113 (expression -> ID .)
    I32             reduce using rule 113 (expression -> ID .)
    I64             reduce using rule 113 (expression -> ID .)
    U8              reduce using rule 113 (expression -> ID .)
    U16             reduce using rule 113 (expression -> ID .)
    U32             reduce using rule 113 (expression -> ID .)
    U64             reduce using rule 113 (expression -> ID .)
    F32             reduce using rule 113 (expression -> ID .)
    F64             reduce using rule 113 (expression -> ID .)
    BOOL            reduce using rule 113 (expression -> ID .)
    STRING          reduce using rule 113 (expression -> ID .)
    $end            reduce using rule 113 (expression -> ID .)
    RBRACE          reduce using rule 113 (expression -> ID .)
    SEMI            reduce using rule 113 (expression -> ID .)
    ID              reduce using rule 40 (type_specifier -> ID .)
    LANGLE          shift and go to state 86

  ! ID              [ reduce using rule 113 (expression -> ID .) ]
  ! LPAREN          [ reduce using rule 113 (expression -> ID .) ]
  ! ID              [ reduce using rule 111 (empty -> .) ]

    empty                          shift and go to state 87

state 114

    (89) else_block -> ELSE block .

    MATCH           reduce using rule 89 (else_block -> ELSE block .)
    ID              reduce using rule 89 (else_block -> ELSE block .)
    ASYNC           reduce using rule 89 (else_block -> ELSE block .)
    FN              reduce using rule 89 (else_block -> ELSE block .)
    CLASS           reduce using rule 89 (else_block -> ELSE block .)
    ENUM            reduce using rule 89 (else_block -> ELSE block .)
    NAMESPACE       reduce using rule 89 (else_block -> ELSE block .)
    INTERFACE       reduce using rule 89 (else_block -> ELSE block .)
    RETURN          reduce using rule 89 (else_block -> ELSE block .)
    USE             reduce using rule 89 (else_block -> ELSE block .)
    FOR             reduce using rule 89 (else_block -> ELSE block .)
    IF              reduce using rule 89 (else_block -> ELSE block .)
    WHILE           reduce using rule 89 (else_block -> ELSE block .)
    TRUE            reduce using rule 89 (else_block -> ELSE block .)
    FALSE           reduce using rule 89 (else_block -> ELSE block .)
    INCREMENT       reduce using rule 89 (else_block -> ELSE block .)
    DECREMENT       reduce using rule 89 (else_block -> ELSE block .)
    NOT             reduce using rule 89 (else_block -> ELSE block .)
    LPAREN          reduce using rule 89 (else_block -> ELSE block .)
    AWAIT           reduce using rule 89 (else_block -> ELSE block .)
    NUMBER          reduce using rule 89 (else_block -> ELSE block .)
    REF             reduce using rule 89 (else_block -> ELSE block .)
    POINTER         reduce using rule 89 (else_block -> ELSE block .)
    error           reduce using rule 89 (else_block -> ELSE block .)
    I8              reduce using rule 89 (else_block -> ELSE block .)
    I16             reduce using rule 89 (else_block -> ELSE block .)
    I32             reduce using rule 89 (else_block -> ELSE block .)
    I64             reduce using rule 89 (else_block -> ELSE block .)
    U8              reduce using rule 89 (else_block -> ELSE block .)
    U16             reduce using rule 89 (else_block -> ELSE block .)
    U32             reduce using rule 89 (else_block -> ELSE block .)
    U64             reduce using rule 89 (else_block -> ELSE block .)
    F32             reduce using rule 89 (else_block -> ELSE block .)
    F64             reduce using rule 89 (else_block -> ELSE block .)
    BOOL            reduce using rule 89 (else_block -> ELSE block .)
    STRING          reduce using rule 89 (else_block -> ELSE block .)
    $end            reduce using rule 89 (else_block -> ELSE block .)
    RBRACE          reduce using rule 89 (else_block -> ELSE block .)
    SEMI            reduce using rule 89 (else_block -> ELSE block .)


state 115

    (17) block -> LBRACE . program RBRACE
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . empty
    (4) statement -> . function_definition
    (5) statement -> . class_definition
    (6) statement -> . struct_definition
    (7) statement -> . enum_definition
    (8) statement -> . namespace_definition
    (9) statement -> . variable SEMI
    (10) statement -> . interface_definition
    (11) statement -> . return_statement SEMI
    (12) statement -> . use_statement
    (65) statement -> . for_block
    (68) statement -> . for_block else_block
    (81) statement -> . if_block else_if_blocks else_block
    (82) statement -> . if_block else_if_blocks
    (83) statement -> . if_block else_block
    (84) statement -> . if_block
    (90) statement -> . MATCH expression LBRACE match_cases RBRACE
    (108) statement -> . while_block
    (110) statement -> . while_block else_block
    (125) statement -> . variable
    (126) statement -> . ID ASSIGN expression
    (127) statement -> . expression
    (111) empty -> .
    (106) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block
    (123) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block
    (124) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (138) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (139) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (15) namespace_definition -> . NAMESPACE ID block
    (129) variable -> . type_specifier ID
    (130) variable -> . type_specifier ID ASSIGN expression
    (131) variable -> . type_specifier ID LPAREN arg_list_opt RPAREN
    (132) variable -> . type_specifier ID LBRACE arg_list_opt RBRACE
    (133) variable -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN
    (134) variable -> . type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN
    (135) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (16) return_statement -> . RETURN expression
    (105) use_statement -> . USE qualified_name SEMI
    (66) for_block -> . FOR ID IN expression block
    (67) for_block -> . FOR ID IN LPAREN expression RPAREN block
    (85) if_block -> . IF expression block
    (109) while_block -> . WHILE expression block
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ASYNC resolved as shift
  ! shift/reduce conflict for FN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for NAMESPACE resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for USE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for AWAIT resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for REF resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for I8 resolved as shift
  ! shift/reduce conflict for I16 resolved as shift
  ! shift/reduce conflict for I32 resolved as shift
  ! shift/reduce conflict for I64 resolved as shift
  ! shift/reduce conflict for U8 resolved as shift
  ! shift/reduce conflict for U16 resolved as shift
  ! shift/reduce conflict for U32 resolved as shift
  ! shift/reduce conflict for U64 resolved as shift
  ! shift/reduce conflict for F32 resolved as shift
  ! shift/reduce conflict for F64 resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    MATCH           shift and go to state 15
    ID              shift and go to state 18
    RBRACE          reduce using rule 111 (empty -> .)
    ASYNC           shift and go to state 19
    FN              shift and go to state 20
    CLASS           shift and go to state 23
    ENUM            shift and go to state 24
    NAMESPACE       shift and go to state 25
    INTERFACE       shift and go to state 27
    RETURN          shift and go to state 28
    USE             shift and go to state 29
    FOR             shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 40
    POINTER         shift and go to state 41
    error           shift and go to state 42
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54

  ! MATCH           [ reduce using rule 111 (empty -> .) ]
  ! ID              [ reduce using rule 111 (empty -> .) ]
  ! ASYNC           [ reduce using rule 111 (empty -> .) ]
  ! FN              [ reduce using rule 111 (empty -> .) ]
  ! CLASS           [ reduce using rule 111 (empty -> .) ]
  ! ENUM            [ reduce using rule 111 (empty -> .) ]
  ! NAMESPACE       [ reduce using rule 111 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 111 (empty -> .) ]
  ! RETURN          [ reduce using rule 111 (empty -> .) ]
  ! USE             [ reduce using rule 111 (empty -> .) ]
  ! FOR             [ reduce using rule 111 (empty -> .) ]
  ! IF              [ reduce using rule 111 (empty -> .) ]
  ! WHILE           [ reduce using rule 111 (empty -> .) ]
  ! TRUE            [ reduce using rule 111 (empty -> .) ]
  ! FALSE           [ reduce using rule 111 (empty -> .) ]
  ! INCREMENT       [ reduce using rule 111 (empty -> .) ]
  ! DECREMENT       [ reduce using rule 111 (empty -> .) ]
  ! NOT             [ reduce using rule 111 (empty -> .) ]
  ! LPAREN          [ reduce using rule 111 (empty -> .) ]
  ! AWAIT           [ reduce using rule 111 (empty -> .) ]
  ! NUMBER          [ reduce using rule 111 (empty -> .) ]
  ! REF             [ reduce using rule 111 (empty -> .) ]
  ! POINTER         [ reduce using rule 111 (empty -> .) ]
  ! error           [ reduce using rule 111 (empty -> .) ]
  ! I8              [ reduce using rule 111 (empty -> .) ]
  ! I16             [ reduce using rule 111 (empty -> .) ]
  ! I32             [ reduce using rule 111 (empty -> .) ]
  ! I64             [ reduce using rule 111 (empty -> .) ]
  ! U8              [ reduce using rule 111 (empty -> .) ]
  ! U16             [ reduce using rule 111 (empty -> .) ]
  ! U32             [ reduce using rule 111 (empty -> .) ]
  ! U64             [ reduce using rule 111 (empty -> .) ]
  ! F32             [ reduce using rule 111 (empty -> .) ]
  ! F64             [ reduce using rule 111 (empty -> .) ]
  ! BOOL            [ reduce using rule 111 (empty -> .) ]
  ! STRING          [ reduce using rule 111 (empty -> .) ]

    program                        shift and go to state 159
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    function_definition            shift and go to state 4
    class_definition               shift and go to state 5
    struct_definition              shift and go to state 6
    enum_definition                shift and go to state 7
    namespace_definition           shift and go to state 8
    variable                       shift and go to state 9
    interface_definition           shift and go to state 10
    return_statement               shift and go to state 11
    use_statement                  shift and go to state 12
    for_block                      shift and go to state 13
    if_block                       shift and go to state 14
    expression                     shift and go to state 16
    while_block                    shift and go to state 17
    type_with_generics             shift and go to state 22
    type_specifier                 shift and go to state 26

state 116

    (81) statement -> if_block else_if_blocks else_block .

    MATCH           reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    ID              reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    ASYNC           reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    FN              reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    CLASS           reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    ENUM            reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    NAMESPACE       reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    INTERFACE       reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    RETURN          reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    USE             reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    FOR             reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    IF              reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    WHILE           reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    TRUE            reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    FALSE           reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    INCREMENT       reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    DECREMENT       reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    NOT             reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    LPAREN          reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    AWAIT           reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    NUMBER          reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    REF             reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    POINTER         reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    error           reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    I8              reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    I16             reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    I32             reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    I64             reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    U8              reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    U16             reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    U32             reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    U64             reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    F32             reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    F64             reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    BOOL            reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    STRING          reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    $end            reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    RBRACE          reduce using rule 81 (statement -> if_block else_if_blocks else_block .)
    SEMI            reduce using rule 81 (statement -> if_block else_if_blocks else_block .)


state 117

    (86) else_if_blocks -> else_if_blocks else_if_block .

    ELSE            reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    MATCH           reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    ID              reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    ASYNC           reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    FN              reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    CLASS           reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    ENUM            reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    NAMESPACE       reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    INTERFACE       reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    RETURN          reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    USE             reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    FOR             reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    IF              reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    WHILE           reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    TRUE            reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    FALSE           reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    INCREMENT       reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    DECREMENT       reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    NOT             reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    LPAREN          reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    AWAIT           reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    NUMBER          reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    REF             reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    POINTER         reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    error           reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    I8              reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    I16             reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    I32             reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    I64             reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    U8              reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    U16             reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    U32             reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    U64             reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    F32             reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    F64             reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    BOOL            reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    STRING          reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    $end            reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    RBRACE          reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)
    SEMI            reduce using rule 86 (else_if_blocks -> else_if_blocks else_if_block .)


state 118

    (88) else_if_block -> ELSE IF . expression block
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 160

state 119

    (90) statement -> MATCH expression LBRACE . match_cases RBRACE
    (91) match_cases -> . match_cases match_case
    (92) match_cases -> . match_case
    (93) match_case -> . pattern ARM program SEMI
    (94) pattern -> . simple_pattern
    (95) pattern -> . tuple_pattern
    (96) simple_pattern -> . ID
    (97) simple_pattern -> . NUMBER
    (98) simple_pattern -> . STRING
    (99) simple_pattern -> . UNDERSCORE
    (100) tuple_pattern -> . LPAREN pattern_list RPAREN

    ID              shift and go to state 166
    NUMBER          shift and go to state 167
    STRING          shift and go to state 168
    UNDERSCORE      shift and go to state 169
    LPAREN          shift and go to state 170

    match_cases                    shift and go to state 161
    match_case                     shift and go to state 162
    pattern                        shift and go to state 163
    simple_pattern                 shift and go to state 164
    tuple_pattern                  shift and go to state 165

state 120

    (114) expression -> REF ID .

    LBRACE          reduce using rule 114 (expression -> REF ID .)
    INCREMENT       reduce using rule 114 (expression -> REF ID .)
    DECREMENT       reduce using rule 114 (expression -> REF ID .)
    AND             reduce using rule 114 (expression -> REF ID .)
    OR              reduce using rule 114 (expression -> REF ID .)
    EQ              reduce using rule 114 (expression -> REF ID .)
    NEQ             reduce using rule 114 (expression -> REF ID .)
    LTHEN           reduce using rule 114 (expression -> REF ID .)
    RTHEN           reduce using rule 114 (expression -> REF ID .)
    LEQ             reduce using rule 114 (expression -> REF ID .)
    GEQ             reduce using rule 114 (expression -> REF ID .)
    PLUS            reduce using rule 114 (expression -> REF ID .)
    MINUS           reduce using rule 114 (expression -> REF ID .)
    TIMES           reduce using rule 114 (expression -> REF ID .)
    DIVIDE          reduce using rule 114 (expression -> REF ID .)
    MOD             reduce using rule 114 (expression -> REF ID .)
    RPAREN          reduce using rule 114 (expression -> REF ID .)
    SEMI            reduce using rule 114 (expression -> REF ID .)
    MATCH           reduce using rule 114 (expression -> REF ID .)
    ID              reduce using rule 114 (expression -> REF ID .)
    ASYNC           reduce using rule 114 (expression -> REF ID .)
    FN              reduce using rule 114 (expression -> REF ID .)
    CLASS           reduce using rule 114 (expression -> REF ID .)
    ENUM            reduce using rule 114 (expression -> REF ID .)
    NAMESPACE       reduce using rule 114 (expression -> REF ID .)
    INTERFACE       reduce using rule 114 (expression -> REF ID .)
    RETURN          reduce using rule 114 (expression -> REF ID .)
    USE             reduce using rule 114 (expression -> REF ID .)
    FOR             reduce using rule 114 (expression -> REF ID .)
    IF              reduce using rule 114 (expression -> REF ID .)
    WHILE           reduce using rule 114 (expression -> REF ID .)
    TRUE            reduce using rule 114 (expression -> REF ID .)
    FALSE           reduce using rule 114 (expression -> REF ID .)
    NOT             reduce using rule 114 (expression -> REF ID .)
    LPAREN          reduce using rule 114 (expression -> REF ID .)
    AWAIT           reduce using rule 114 (expression -> REF ID .)
    NUMBER          reduce using rule 114 (expression -> REF ID .)
    REF             reduce using rule 114 (expression -> REF ID .)
    POINTER         reduce using rule 114 (expression -> REF ID .)
    error           reduce using rule 114 (expression -> REF ID .)
    I8              reduce using rule 114 (expression -> REF ID .)
    I16             reduce using rule 114 (expression -> REF ID .)
    I32             reduce using rule 114 (expression -> REF ID .)
    I64             reduce using rule 114 (expression -> REF ID .)
    U8              reduce using rule 114 (expression -> REF ID .)
    U16             reduce using rule 114 (expression -> REF ID .)
    U32             reduce using rule 114 (expression -> REF ID .)
    U64             reduce using rule 114 (expression -> REF ID .)
    F32             reduce using rule 114 (expression -> REF ID .)
    F64             reduce using rule 114 (expression -> REF ID .)
    BOOL            reduce using rule 114 (expression -> REF ID .)
    STRING          reduce using rule 114 (expression -> REF ID .)
    $end            reduce using rule 114 (expression -> REF ID .)
    RBRACE          reduce using rule 114 (expression -> REF ID .)
    COMMA           reduce using rule 114 (expression -> REF ID .)


state 121

    (56) expression -> expression AND expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    INCREMENT       reduce using rule 56 (expression -> expression AND expression .)
    DECREMENT       reduce using rule 56 (expression -> expression AND expression .)
    AND             reduce using rule 56 (expression -> expression AND expression .)
    OR              reduce using rule 56 (expression -> expression AND expression .)
    MOD             reduce using rule 56 (expression -> expression AND expression .)
    MATCH           reduce using rule 56 (expression -> expression AND expression .)
    ID              reduce using rule 56 (expression -> expression AND expression .)
    ASYNC           reduce using rule 56 (expression -> expression AND expression .)
    FN              reduce using rule 56 (expression -> expression AND expression .)
    CLASS           reduce using rule 56 (expression -> expression AND expression .)
    ENUM            reduce using rule 56 (expression -> expression AND expression .)
    NAMESPACE       reduce using rule 56 (expression -> expression AND expression .)
    INTERFACE       reduce using rule 56 (expression -> expression AND expression .)
    RETURN          reduce using rule 56 (expression -> expression AND expression .)
    USE             reduce using rule 56 (expression -> expression AND expression .)
    FOR             reduce using rule 56 (expression -> expression AND expression .)
    IF              reduce using rule 56 (expression -> expression AND expression .)
    WHILE           reduce using rule 56 (expression -> expression AND expression .)
    TRUE            reduce using rule 56 (expression -> expression AND expression .)
    FALSE           reduce using rule 56 (expression -> expression AND expression .)
    NOT             reduce using rule 56 (expression -> expression AND expression .)
    LPAREN          reduce using rule 56 (expression -> expression AND expression .)
    AWAIT           reduce using rule 56 (expression -> expression AND expression .)
    NUMBER          reduce using rule 56 (expression -> expression AND expression .)
    REF             reduce using rule 56 (expression -> expression AND expression .)
    POINTER         reduce using rule 56 (expression -> expression AND expression .)
    error           reduce using rule 56 (expression -> expression AND expression .)
    I8              reduce using rule 56 (expression -> expression AND expression .)
    I16             reduce using rule 56 (expression -> expression AND expression .)
    I32             reduce using rule 56 (expression -> expression AND expression .)
    I64             reduce using rule 56 (expression -> expression AND expression .)
    U8              reduce using rule 56 (expression -> expression AND expression .)
    U16             reduce using rule 56 (expression -> expression AND expression .)
    U32             reduce using rule 56 (expression -> expression AND expression .)
    U64             reduce using rule 56 (expression -> expression AND expression .)
    F32             reduce using rule 56 (expression -> expression AND expression .)
    F64             reduce using rule 56 (expression -> expression AND expression .)
    BOOL            reduce using rule 56 (expression -> expression AND expression .)
    STRING          reduce using rule 56 (expression -> expression AND expression .)
    $end            reduce using rule 56 (expression -> expression AND expression .)
    LBRACE          reduce using rule 56 (expression -> expression AND expression .)
    RPAREN          reduce using rule 56 (expression -> expression AND expression .)
    SEMI            reduce using rule 56 (expression -> expression AND expression .)
    RBRACE          reduce using rule 56 (expression -> expression AND expression .)
    COMMA           reduce using rule 56 (expression -> expression AND expression .)
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81

  ! EQ              [ reduce using rule 56 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 56 (expression -> expression AND expression .) ]
  ! LTHEN           [ reduce using rule 56 (expression -> expression AND expression .) ]
  ! RTHEN           [ reduce using rule 56 (expression -> expression AND expression .) ]
  ! LEQ             [ reduce using rule 56 (expression -> expression AND expression .) ]
  ! GEQ             [ reduce using rule 56 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 56 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 56 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 56 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 56 (expression -> expression AND expression .) ]
  ! INCREMENT       [ shift and go to state 68 ]
  ! DECREMENT       [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! MOD             [ shift and go to state 82 ]


state 122

    (57) expression -> expression OR expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    INCREMENT       reduce using rule 57 (expression -> expression OR expression .)
    DECREMENT       reduce using rule 57 (expression -> expression OR expression .)
    OR              reduce using rule 57 (expression -> expression OR expression .)
    MOD             reduce using rule 57 (expression -> expression OR expression .)
    MATCH           reduce using rule 57 (expression -> expression OR expression .)
    ID              reduce using rule 57 (expression -> expression OR expression .)
    ASYNC           reduce using rule 57 (expression -> expression OR expression .)
    FN              reduce using rule 57 (expression -> expression OR expression .)
    CLASS           reduce using rule 57 (expression -> expression OR expression .)
    ENUM            reduce using rule 57 (expression -> expression OR expression .)
    NAMESPACE       reduce using rule 57 (expression -> expression OR expression .)
    INTERFACE       reduce using rule 57 (expression -> expression OR expression .)
    RETURN          reduce using rule 57 (expression -> expression OR expression .)
    USE             reduce using rule 57 (expression -> expression OR expression .)
    FOR             reduce using rule 57 (expression -> expression OR expression .)
    IF              reduce using rule 57 (expression -> expression OR expression .)
    WHILE           reduce using rule 57 (expression -> expression OR expression .)
    TRUE            reduce using rule 57 (expression -> expression OR expression .)
    FALSE           reduce using rule 57 (expression -> expression OR expression .)
    NOT             reduce using rule 57 (expression -> expression OR expression .)
    LPAREN          reduce using rule 57 (expression -> expression OR expression .)
    AWAIT           reduce using rule 57 (expression -> expression OR expression .)
    NUMBER          reduce using rule 57 (expression -> expression OR expression .)
    REF             reduce using rule 57 (expression -> expression OR expression .)
    POINTER         reduce using rule 57 (expression -> expression OR expression .)
    error           reduce using rule 57 (expression -> expression OR expression .)
    I8              reduce using rule 57 (expression -> expression OR expression .)
    I16             reduce using rule 57 (expression -> expression OR expression .)
    I32             reduce using rule 57 (expression -> expression OR expression .)
    I64             reduce using rule 57 (expression -> expression OR expression .)
    U8              reduce using rule 57 (expression -> expression OR expression .)
    U16             reduce using rule 57 (expression -> expression OR expression .)
    U32             reduce using rule 57 (expression -> expression OR expression .)
    U64             reduce using rule 57 (expression -> expression OR expression .)
    F32             reduce using rule 57 (expression -> expression OR expression .)
    F64             reduce using rule 57 (expression -> expression OR expression .)
    BOOL            reduce using rule 57 (expression -> expression OR expression .)
    STRING          reduce using rule 57 (expression -> expression OR expression .)
    $end            reduce using rule 57 (expression -> expression OR expression .)
    LBRACE          reduce using rule 57 (expression -> expression OR expression .)
    RPAREN          reduce using rule 57 (expression -> expression OR expression .)
    SEMI            reduce using rule 57 (expression -> expression OR expression .)
    RBRACE          reduce using rule 57 (expression -> expression OR expression .)
    COMMA           reduce using rule 57 (expression -> expression OR expression .)
    AND             shift and go to state 70
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81

  ! AND             [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! LTHEN           [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! RTHEN           [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! LEQ             [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! GEQ             [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! INCREMENT       [ shift and go to state 68 ]
  ! DECREMENT       [ shift and go to state 69 ]
  ! OR              [ shift and go to state 71 ]
  ! MOD             [ shift and go to state 82 ]


state 123

    (58) expression -> expression EQ expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    INCREMENT       reduce using rule 58 (expression -> expression EQ expression .)
    DECREMENT       reduce using rule 58 (expression -> expression EQ expression .)
    AND             reduce using rule 58 (expression -> expression EQ expression .)
    OR              reduce using rule 58 (expression -> expression EQ expression .)
    EQ              reduce using rule 58 (expression -> expression EQ expression .)
    NEQ             reduce using rule 58 (expression -> expression EQ expression .)
    MOD             reduce using rule 58 (expression -> expression EQ expression .)
    MATCH           reduce using rule 58 (expression -> expression EQ expression .)
    ID              reduce using rule 58 (expression -> expression EQ expression .)
    ASYNC           reduce using rule 58 (expression -> expression EQ expression .)
    FN              reduce using rule 58 (expression -> expression EQ expression .)
    CLASS           reduce using rule 58 (expression -> expression EQ expression .)
    ENUM            reduce using rule 58 (expression -> expression EQ expression .)
    NAMESPACE       reduce using rule 58 (expression -> expression EQ expression .)
    INTERFACE       reduce using rule 58 (expression -> expression EQ expression .)
    RETURN          reduce using rule 58 (expression -> expression EQ expression .)
    USE             reduce using rule 58 (expression -> expression EQ expression .)
    FOR             reduce using rule 58 (expression -> expression EQ expression .)
    IF              reduce using rule 58 (expression -> expression EQ expression .)
    WHILE           reduce using rule 58 (expression -> expression EQ expression .)
    TRUE            reduce using rule 58 (expression -> expression EQ expression .)
    FALSE           reduce using rule 58 (expression -> expression EQ expression .)
    NOT             reduce using rule 58 (expression -> expression EQ expression .)
    LPAREN          reduce using rule 58 (expression -> expression EQ expression .)
    AWAIT           reduce using rule 58 (expression -> expression EQ expression .)
    NUMBER          reduce using rule 58 (expression -> expression EQ expression .)
    REF             reduce using rule 58 (expression -> expression EQ expression .)
    POINTER         reduce using rule 58 (expression -> expression EQ expression .)
    error           reduce using rule 58 (expression -> expression EQ expression .)
    I8              reduce using rule 58 (expression -> expression EQ expression .)
    I16             reduce using rule 58 (expression -> expression EQ expression .)
    I32             reduce using rule 58 (expression -> expression EQ expression .)
    I64             reduce using rule 58 (expression -> expression EQ expression .)
    U8              reduce using rule 58 (expression -> expression EQ expression .)
    U16             reduce using rule 58 (expression -> expression EQ expression .)
    U32             reduce using rule 58 (expression -> expression EQ expression .)
    U64             reduce using rule 58 (expression -> expression EQ expression .)
    F32             reduce using rule 58 (expression -> expression EQ expression .)
    F64             reduce using rule 58 (expression -> expression EQ expression .)
    BOOL            reduce using rule 58 (expression -> expression EQ expression .)
    STRING          reduce using rule 58 (expression -> expression EQ expression .)
    $end            reduce using rule 58 (expression -> expression EQ expression .)
    LBRACE          reduce using rule 58 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 58 (expression -> expression EQ expression .)
    SEMI            reduce using rule 58 (expression -> expression EQ expression .)
    RBRACE          reduce using rule 58 (expression -> expression EQ expression .)
    COMMA           reduce using rule 58 (expression -> expression EQ expression .)
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81

  ! LTHEN           [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! RTHEN           [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! LEQ             [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! GEQ             [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! PLUS            [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! INCREMENT       [ shift and go to state 68 ]
  ! DECREMENT       [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NEQ             [ shift and go to state 73 ]
  ! MOD             [ shift and go to state 82 ]


state 124

    (59) expression -> expression NEQ expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    INCREMENT       reduce using rule 59 (expression -> expression NEQ expression .)
    DECREMENT       reduce using rule 59 (expression -> expression NEQ expression .)
    AND             reduce using rule 59 (expression -> expression NEQ expression .)
    OR              reduce using rule 59 (expression -> expression NEQ expression .)
    EQ              reduce using rule 59 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 59 (expression -> expression NEQ expression .)
    MOD             reduce using rule 59 (expression -> expression NEQ expression .)
    MATCH           reduce using rule 59 (expression -> expression NEQ expression .)
    ID              reduce using rule 59 (expression -> expression NEQ expression .)
    ASYNC           reduce using rule 59 (expression -> expression NEQ expression .)
    FN              reduce using rule 59 (expression -> expression NEQ expression .)
    CLASS           reduce using rule 59 (expression -> expression NEQ expression .)
    ENUM            reduce using rule 59 (expression -> expression NEQ expression .)
    NAMESPACE       reduce using rule 59 (expression -> expression NEQ expression .)
    INTERFACE       reduce using rule 59 (expression -> expression NEQ expression .)
    RETURN          reduce using rule 59 (expression -> expression NEQ expression .)
    USE             reduce using rule 59 (expression -> expression NEQ expression .)
    FOR             reduce using rule 59 (expression -> expression NEQ expression .)
    IF              reduce using rule 59 (expression -> expression NEQ expression .)
    WHILE           reduce using rule 59 (expression -> expression NEQ expression .)
    TRUE            reduce using rule 59 (expression -> expression NEQ expression .)
    FALSE           reduce using rule 59 (expression -> expression NEQ expression .)
    NOT             reduce using rule 59 (expression -> expression NEQ expression .)
    LPAREN          reduce using rule 59 (expression -> expression NEQ expression .)
    AWAIT           reduce using rule 59 (expression -> expression NEQ expression .)
    NUMBER          reduce using rule 59 (expression -> expression NEQ expression .)
    REF             reduce using rule 59 (expression -> expression NEQ expression .)
    POINTER         reduce using rule 59 (expression -> expression NEQ expression .)
    error           reduce using rule 59 (expression -> expression NEQ expression .)
    I8              reduce using rule 59 (expression -> expression NEQ expression .)
    I16             reduce using rule 59 (expression -> expression NEQ expression .)
    I32             reduce using rule 59 (expression -> expression NEQ expression .)
    I64             reduce using rule 59 (expression -> expression NEQ expression .)
    U8              reduce using rule 59 (expression -> expression NEQ expression .)
    U16             reduce using rule 59 (expression -> expression NEQ expression .)
    U32             reduce using rule 59 (expression -> expression NEQ expression .)
    U64             reduce using rule 59 (expression -> expression NEQ expression .)
    F32             reduce using rule 59 (expression -> expression NEQ expression .)
    F64             reduce using rule 59 (expression -> expression NEQ expression .)
    BOOL            reduce using rule 59 (expression -> expression NEQ expression .)
    STRING          reduce using rule 59 (expression -> expression NEQ expression .)
    $end            reduce using rule 59 (expression -> expression NEQ expression .)
    LBRACE          reduce using rule 59 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 59 (expression -> expression NEQ expression .)
    SEMI            reduce using rule 59 (expression -> expression NEQ expression .)
    RBRACE          reduce using rule 59 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 59 (expression -> expression NEQ expression .)
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81

  ! LTHEN           [ reduce using rule 59 (expression -> expression NEQ expression .) ]
  ! RTHEN           [ reduce using rule 59 (expression -> expression NEQ expression .) ]
  ! LEQ             [ reduce using rule 59 (expression -> expression NEQ expression .) ]
  ! GEQ             [ reduce using rule 59 (expression -> expression NEQ expression .) ]
  ! PLUS            [ reduce using rule 59 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 59 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 59 (expression -> expression NEQ expression .) ]
  ! INCREMENT       [ shift and go to state 68 ]
  ! DECREMENT       [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NEQ             [ shift and go to state 73 ]
  ! MOD             [ shift and go to state 82 ]


state 125

    (60) expression -> expression LTHEN expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    INCREMENT       reduce using rule 60 (expression -> expression LTHEN expression .)
    DECREMENT       reduce using rule 60 (expression -> expression LTHEN expression .)
    AND             reduce using rule 60 (expression -> expression LTHEN expression .)
    OR              reduce using rule 60 (expression -> expression LTHEN expression .)
    EQ              reduce using rule 60 (expression -> expression LTHEN expression .)
    NEQ             reduce using rule 60 (expression -> expression LTHEN expression .)
    LTHEN           reduce using rule 60 (expression -> expression LTHEN expression .)
    RTHEN           reduce using rule 60 (expression -> expression LTHEN expression .)
    LEQ             reduce using rule 60 (expression -> expression LTHEN expression .)
    GEQ             reduce using rule 60 (expression -> expression LTHEN expression .)
    MOD             reduce using rule 60 (expression -> expression LTHEN expression .)
    MATCH           reduce using rule 60 (expression -> expression LTHEN expression .)
    ID              reduce using rule 60 (expression -> expression LTHEN expression .)
    ASYNC           reduce using rule 60 (expression -> expression LTHEN expression .)
    FN              reduce using rule 60 (expression -> expression LTHEN expression .)
    CLASS           reduce using rule 60 (expression -> expression LTHEN expression .)
    ENUM            reduce using rule 60 (expression -> expression LTHEN expression .)
    NAMESPACE       reduce using rule 60 (expression -> expression LTHEN expression .)
    INTERFACE       reduce using rule 60 (expression -> expression LTHEN expression .)
    RETURN          reduce using rule 60 (expression -> expression LTHEN expression .)
    USE             reduce using rule 60 (expression -> expression LTHEN expression .)
    FOR             reduce using rule 60 (expression -> expression LTHEN expression .)
    IF              reduce using rule 60 (expression -> expression LTHEN expression .)
    WHILE           reduce using rule 60 (expression -> expression LTHEN expression .)
    TRUE            reduce using rule 60 (expression -> expression LTHEN expression .)
    FALSE           reduce using rule 60 (expression -> expression LTHEN expression .)
    NOT             reduce using rule 60 (expression -> expression LTHEN expression .)
    LPAREN          reduce using rule 60 (expression -> expression LTHEN expression .)
    AWAIT           reduce using rule 60 (expression -> expression LTHEN expression .)
    NUMBER          reduce using rule 60 (expression -> expression LTHEN expression .)
    REF             reduce using rule 60 (expression -> expression LTHEN expression .)
    POINTER         reduce using rule 60 (expression -> expression LTHEN expression .)
    error           reduce using rule 60 (expression -> expression LTHEN expression .)
    I8              reduce using rule 60 (expression -> expression LTHEN expression .)
    I16             reduce using rule 60 (expression -> expression LTHEN expression .)
    I32             reduce using rule 60 (expression -> expression LTHEN expression .)
    I64             reduce using rule 60 (expression -> expression LTHEN expression .)
    U8              reduce using rule 60 (expression -> expression LTHEN expression .)
    U16             reduce using rule 60 (expression -> expression LTHEN expression .)
    U32             reduce using rule 60 (expression -> expression LTHEN expression .)
    U64             reduce using rule 60 (expression -> expression LTHEN expression .)
    F32             reduce using rule 60 (expression -> expression LTHEN expression .)
    F64             reduce using rule 60 (expression -> expression LTHEN expression .)
    BOOL            reduce using rule 60 (expression -> expression LTHEN expression .)
    STRING          reduce using rule 60 (expression -> expression LTHEN expression .)
    $end            reduce using rule 60 (expression -> expression LTHEN expression .)
    LBRACE          reduce using rule 60 (expression -> expression LTHEN expression .)
    RPAREN          reduce using rule 60 (expression -> expression LTHEN expression .)
    SEMI            reduce using rule 60 (expression -> expression LTHEN expression .)
    RBRACE          reduce using rule 60 (expression -> expression LTHEN expression .)
    COMMA           reduce using rule 60 (expression -> expression LTHEN expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81

  ! PLUS            [ reduce using rule 60 (expression -> expression LTHEN expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> expression LTHEN expression .) ]
  ! TIMES           [ reduce using rule 60 (expression -> expression LTHEN expression .) ]
  ! DIVIDE          [ reduce using rule 60 (expression -> expression LTHEN expression .) ]
  ! INCREMENT       [ shift and go to state 68 ]
  ! DECREMENT       [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NEQ             [ shift and go to state 73 ]
  ! LTHEN           [ shift and go to state 74 ]
  ! RTHEN           [ shift and go to state 75 ]
  ! LEQ             [ shift and go to state 76 ]
  ! GEQ             [ shift and go to state 77 ]
  ! MOD             [ shift and go to state 82 ]


state 126

    (61) expression -> expression RTHEN expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    INCREMENT       reduce using rule 61 (expression -> expression RTHEN expression .)
    DECREMENT       reduce using rule 61 (expression -> expression RTHEN expression .)
    AND             reduce using rule 61 (expression -> expression RTHEN expression .)
    OR              reduce using rule 61 (expression -> expression RTHEN expression .)
    EQ              reduce using rule 61 (expression -> expression RTHEN expression .)
    NEQ             reduce using rule 61 (expression -> expression RTHEN expression .)
    LTHEN           reduce using rule 61 (expression -> expression RTHEN expression .)
    RTHEN           reduce using rule 61 (expression -> expression RTHEN expression .)
    LEQ             reduce using rule 61 (expression -> expression RTHEN expression .)
    GEQ             reduce using rule 61 (expression -> expression RTHEN expression .)
    MOD             reduce using rule 61 (expression -> expression RTHEN expression .)
    MATCH           reduce using rule 61 (expression -> expression RTHEN expression .)
    ID              reduce using rule 61 (expression -> expression RTHEN expression .)
    ASYNC           reduce using rule 61 (expression -> expression RTHEN expression .)
    FN              reduce using rule 61 (expression -> expression RTHEN expression .)
    CLASS           reduce using rule 61 (expression -> expression RTHEN expression .)
    ENUM            reduce using rule 61 (expression -> expression RTHEN expression .)
    NAMESPACE       reduce using rule 61 (expression -> expression RTHEN expression .)
    INTERFACE       reduce using rule 61 (expression -> expression RTHEN expression .)
    RETURN          reduce using rule 61 (expression -> expression RTHEN expression .)
    USE             reduce using rule 61 (expression -> expression RTHEN expression .)
    FOR             reduce using rule 61 (expression -> expression RTHEN expression .)
    IF              reduce using rule 61 (expression -> expression RTHEN expression .)
    WHILE           reduce using rule 61 (expression -> expression RTHEN expression .)
    TRUE            reduce using rule 61 (expression -> expression RTHEN expression .)
    FALSE           reduce using rule 61 (expression -> expression RTHEN expression .)
    NOT             reduce using rule 61 (expression -> expression RTHEN expression .)
    LPAREN          reduce using rule 61 (expression -> expression RTHEN expression .)
    AWAIT           reduce using rule 61 (expression -> expression RTHEN expression .)
    NUMBER          reduce using rule 61 (expression -> expression RTHEN expression .)
    REF             reduce using rule 61 (expression -> expression RTHEN expression .)
    POINTER         reduce using rule 61 (expression -> expression RTHEN expression .)
    error           reduce using rule 61 (expression -> expression RTHEN expression .)
    I8              reduce using rule 61 (expression -> expression RTHEN expression .)
    I16             reduce using rule 61 (expression -> expression RTHEN expression .)
    I32             reduce using rule 61 (expression -> expression RTHEN expression .)
    I64             reduce using rule 61 (expression -> expression RTHEN expression .)
    U8              reduce using rule 61 (expression -> expression RTHEN expression .)
    U16             reduce using rule 61 (expression -> expression RTHEN expression .)
    U32             reduce using rule 61 (expression -> expression RTHEN expression .)
    U64             reduce using rule 61 (expression -> expression RTHEN expression .)
    F32             reduce using rule 61 (expression -> expression RTHEN expression .)
    F64             reduce using rule 61 (expression -> expression RTHEN expression .)
    BOOL            reduce using rule 61 (expression -> expression RTHEN expression .)
    STRING          reduce using rule 61 (expression -> expression RTHEN expression .)
    $end            reduce using rule 61 (expression -> expression RTHEN expression .)
    LBRACE          reduce using rule 61 (expression -> expression RTHEN expression .)
    RPAREN          reduce using rule 61 (expression -> expression RTHEN expression .)
    SEMI            reduce using rule 61 (expression -> expression RTHEN expression .)
    RBRACE          reduce using rule 61 (expression -> expression RTHEN expression .)
    COMMA           reduce using rule 61 (expression -> expression RTHEN expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81

  ! PLUS            [ reduce using rule 61 (expression -> expression RTHEN expression .) ]
  ! MINUS           [ reduce using rule 61 (expression -> expression RTHEN expression .) ]
  ! TIMES           [ reduce using rule 61 (expression -> expression RTHEN expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> expression RTHEN expression .) ]
  ! INCREMENT       [ shift and go to state 68 ]
  ! DECREMENT       [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NEQ             [ shift and go to state 73 ]
  ! LTHEN           [ shift and go to state 74 ]
  ! RTHEN           [ shift and go to state 75 ]
  ! LEQ             [ shift and go to state 76 ]
  ! GEQ             [ shift and go to state 77 ]
  ! MOD             [ shift and go to state 82 ]


state 127

    (62) expression -> expression LEQ expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    INCREMENT       reduce using rule 62 (expression -> expression LEQ expression .)
    DECREMENT       reduce using rule 62 (expression -> expression LEQ expression .)
    AND             reduce using rule 62 (expression -> expression LEQ expression .)
    OR              reduce using rule 62 (expression -> expression LEQ expression .)
    EQ              reduce using rule 62 (expression -> expression LEQ expression .)
    NEQ             reduce using rule 62 (expression -> expression LEQ expression .)
    LTHEN           reduce using rule 62 (expression -> expression LEQ expression .)
    RTHEN           reduce using rule 62 (expression -> expression LEQ expression .)
    LEQ             reduce using rule 62 (expression -> expression LEQ expression .)
    GEQ             reduce using rule 62 (expression -> expression LEQ expression .)
    MOD             reduce using rule 62 (expression -> expression LEQ expression .)
    MATCH           reduce using rule 62 (expression -> expression LEQ expression .)
    ID              reduce using rule 62 (expression -> expression LEQ expression .)
    ASYNC           reduce using rule 62 (expression -> expression LEQ expression .)
    FN              reduce using rule 62 (expression -> expression LEQ expression .)
    CLASS           reduce using rule 62 (expression -> expression LEQ expression .)
    ENUM            reduce using rule 62 (expression -> expression LEQ expression .)
    NAMESPACE       reduce using rule 62 (expression -> expression LEQ expression .)
    INTERFACE       reduce using rule 62 (expression -> expression LEQ expression .)
    RETURN          reduce using rule 62 (expression -> expression LEQ expression .)
    USE             reduce using rule 62 (expression -> expression LEQ expression .)
    FOR             reduce using rule 62 (expression -> expression LEQ expression .)
    IF              reduce using rule 62 (expression -> expression LEQ expression .)
    WHILE           reduce using rule 62 (expression -> expression LEQ expression .)
    TRUE            reduce using rule 62 (expression -> expression LEQ expression .)
    FALSE           reduce using rule 62 (expression -> expression LEQ expression .)
    NOT             reduce using rule 62 (expression -> expression LEQ expression .)
    LPAREN          reduce using rule 62 (expression -> expression LEQ expression .)
    AWAIT           reduce using rule 62 (expression -> expression LEQ expression .)
    NUMBER          reduce using rule 62 (expression -> expression LEQ expression .)
    REF             reduce using rule 62 (expression -> expression LEQ expression .)
    POINTER         reduce using rule 62 (expression -> expression LEQ expression .)
    error           reduce using rule 62 (expression -> expression LEQ expression .)
    I8              reduce using rule 62 (expression -> expression LEQ expression .)
    I16             reduce using rule 62 (expression -> expression LEQ expression .)
    I32             reduce using rule 62 (expression -> expression LEQ expression .)
    I64             reduce using rule 62 (expression -> expression LEQ expression .)
    U8              reduce using rule 62 (expression -> expression LEQ expression .)
    U16             reduce using rule 62 (expression -> expression LEQ expression .)
    U32             reduce using rule 62 (expression -> expression LEQ expression .)
    U64             reduce using rule 62 (expression -> expression LEQ expression .)
    F32             reduce using rule 62 (expression -> expression LEQ expression .)
    F64             reduce using rule 62 (expression -> expression LEQ expression .)
    BOOL            reduce using rule 62 (expression -> expression LEQ expression .)
    STRING          reduce using rule 62 (expression -> expression LEQ expression .)
    $end            reduce using rule 62 (expression -> expression LEQ expression .)
    LBRACE          reduce using rule 62 (expression -> expression LEQ expression .)
    RPAREN          reduce using rule 62 (expression -> expression LEQ expression .)
    SEMI            reduce using rule 62 (expression -> expression LEQ expression .)
    RBRACE          reduce using rule 62 (expression -> expression LEQ expression .)
    COMMA           reduce using rule 62 (expression -> expression LEQ expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81

  ! PLUS            [ reduce using rule 62 (expression -> expression LEQ expression .) ]
  ! MINUS           [ reduce using rule 62 (expression -> expression LEQ expression .) ]
  ! TIMES           [ reduce using rule 62 (expression -> expression LEQ expression .) ]
  ! DIVIDE          [ reduce using rule 62 (expression -> expression LEQ expression .) ]
  ! INCREMENT       [ shift and go to state 68 ]
  ! DECREMENT       [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NEQ             [ shift and go to state 73 ]
  ! LTHEN           [ shift and go to state 74 ]
  ! RTHEN           [ shift and go to state 75 ]
  ! LEQ             [ shift and go to state 76 ]
  ! GEQ             [ shift and go to state 77 ]
  ! MOD             [ shift and go to state 82 ]


state 128

    (63) expression -> expression GEQ expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    INCREMENT       reduce using rule 63 (expression -> expression GEQ expression .)
    DECREMENT       reduce using rule 63 (expression -> expression GEQ expression .)
    AND             reduce using rule 63 (expression -> expression GEQ expression .)
    OR              reduce using rule 63 (expression -> expression GEQ expression .)
    EQ              reduce using rule 63 (expression -> expression GEQ expression .)
    NEQ             reduce using rule 63 (expression -> expression GEQ expression .)
    LTHEN           reduce using rule 63 (expression -> expression GEQ expression .)
    RTHEN           reduce using rule 63 (expression -> expression GEQ expression .)
    LEQ             reduce using rule 63 (expression -> expression GEQ expression .)
    GEQ             reduce using rule 63 (expression -> expression GEQ expression .)
    MOD             reduce using rule 63 (expression -> expression GEQ expression .)
    MATCH           reduce using rule 63 (expression -> expression GEQ expression .)
    ID              reduce using rule 63 (expression -> expression GEQ expression .)
    ASYNC           reduce using rule 63 (expression -> expression GEQ expression .)
    FN              reduce using rule 63 (expression -> expression GEQ expression .)
    CLASS           reduce using rule 63 (expression -> expression GEQ expression .)
    ENUM            reduce using rule 63 (expression -> expression GEQ expression .)
    NAMESPACE       reduce using rule 63 (expression -> expression GEQ expression .)
    INTERFACE       reduce using rule 63 (expression -> expression GEQ expression .)
    RETURN          reduce using rule 63 (expression -> expression GEQ expression .)
    USE             reduce using rule 63 (expression -> expression GEQ expression .)
    FOR             reduce using rule 63 (expression -> expression GEQ expression .)
    IF              reduce using rule 63 (expression -> expression GEQ expression .)
    WHILE           reduce using rule 63 (expression -> expression GEQ expression .)
    TRUE            reduce using rule 63 (expression -> expression GEQ expression .)
    FALSE           reduce using rule 63 (expression -> expression GEQ expression .)
    NOT             reduce using rule 63 (expression -> expression GEQ expression .)
    LPAREN          reduce using rule 63 (expression -> expression GEQ expression .)
    AWAIT           reduce using rule 63 (expression -> expression GEQ expression .)
    NUMBER          reduce using rule 63 (expression -> expression GEQ expression .)
    REF             reduce using rule 63 (expression -> expression GEQ expression .)
    POINTER         reduce using rule 63 (expression -> expression GEQ expression .)
    error           reduce using rule 63 (expression -> expression GEQ expression .)
    I8              reduce using rule 63 (expression -> expression GEQ expression .)
    I16             reduce using rule 63 (expression -> expression GEQ expression .)
    I32             reduce using rule 63 (expression -> expression GEQ expression .)
    I64             reduce using rule 63 (expression -> expression GEQ expression .)
    U8              reduce using rule 63 (expression -> expression GEQ expression .)
    U16             reduce using rule 63 (expression -> expression GEQ expression .)
    U32             reduce using rule 63 (expression -> expression GEQ expression .)
    U64             reduce using rule 63 (expression -> expression GEQ expression .)
    F32             reduce using rule 63 (expression -> expression GEQ expression .)
    F64             reduce using rule 63 (expression -> expression GEQ expression .)
    BOOL            reduce using rule 63 (expression -> expression GEQ expression .)
    STRING          reduce using rule 63 (expression -> expression GEQ expression .)
    $end            reduce using rule 63 (expression -> expression GEQ expression .)
    LBRACE          reduce using rule 63 (expression -> expression GEQ expression .)
    RPAREN          reduce using rule 63 (expression -> expression GEQ expression .)
    SEMI            reduce using rule 63 (expression -> expression GEQ expression .)
    RBRACE          reduce using rule 63 (expression -> expression GEQ expression .)
    COMMA           reduce using rule 63 (expression -> expression GEQ expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81

  ! PLUS            [ reduce using rule 63 (expression -> expression GEQ expression .) ]
  ! MINUS           [ reduce using rule 63 (expression -> expression GEQ expression .) ]
  ! TIMES           [ reduce using rule 63 (expression -> expression GEQ expression .) ]
  ! DIVIDE          [ reduce using rule 63 (expression -> expression GEQ expression .) ]
  ! INCREMENT       [ shift and go to state 68 ]
  ! DECREMENT       [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NEQ             [ shift and go to state 73 ]
  ! LTHEN           [ shift and go to state 74 ]
  ! RTHEN           [ shift and go to state 75 ]
  ! LEQ             [ shift and go to state 76 ]
  ! GEQ             [ shift and go to state 77 ]
  ! MOD             [ shift and go to state 82 ]


state 129

    (69) expression -> expression PLUS expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    INCREMENT       reduce using rule 69 (expression -> expression PLUS expression .)
    DECREMENT       reduce using rule 69 (expression -> expression PLUS expression .)
    AND             reduce using rule 69 (expression -> expression PLUS expression .)
    OR              reduce using rule 69 (expression -> expression PLUS expression .)
    EQ              reduce using rule 69 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 69 (expression -> expression PLUS expression .)
    LTHEN           reduce using rule 69 (expression -> expression PLUS expression .)
    RTHEN           reduce using rule 69 (expression -> expression PLUS expression .)
    LEQ             reduce using rule 69 (expression -> expression PLUS expression .)
    GEQ             reduce using rule 69 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 69 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 69 (expression -> expression PLUS expression .)
    MOD             reduce using rule 69 (expression -> expression PLUS expression .)
    MATCH           reduce using rule 69 (expression -> expression PLUS expression .)
    ID              reduce using rule 69 (expression -> expression PLUS expression .)
    ASYNC           reduce using rule 69 (expression -> expression PLUS expression .)
    FN              reduce using rule 69 (expression -> expression PLUS expression .)
    CLASS           reduce using rule 69 (expression -> expression PLUS expression .)
    ENUM            reduce using rule 69 (expression -> expression PLUS expression .)
    NAMESPACE       reduce using rule 69 (expression -> expression PLUS expression .)
    INTERFACE       reduce using rule 69 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 69 (expression -> expression PLUS expression .)
    USE             reduce using rule 69 (expression -> expression PLUS expression .)
    FOR             reduce using rule 69 (expression -> expression PLUS expression .)
    IF              reduce using rule 69 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 69 (expression -> expression PLUS expression .)
    TRUE            reduce using rule 69 (expression -> expression PLUS expression .)
    FALSE           reduce using rule 69 (expression -> expression PLUS expression .)
    NOT             reduce using rule 69 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 69 (expression -> expression PLUS expression .)
    AWAIT           reduce using rule 69 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 69 (expression -> expression PLUS expression .)
    REF             reduce using rule 69 (expression -> expression PLUS expression .)
    POINTER         reduce using rule 69 (expression -> expression PLUS expression .)
    error           reduce using rule 69 (expression -> expression PLUS expression .)
    I8              reduce using rule 69 (expression -> expression PLUS expression .)
    I16             reduce using rule 69 (expression -> expression PLUS expression .)
    I32             reduce using rule 69 (expression -> expression PLUS expression .)
    I64             reduce using rule 69 (expression -> expression PLUS expression .)
    U8              reduce using rule 69 (expression -> expression PLUS expression .)
    U16             reduce using rule 69 (expression -> expression PLUS expression .)
    U32             reduce using rule 69 (expression -> expression PLUS expression .)
    U64             reduce using rule 69 (expression -> expression PLUS expression .)
    F32             reduce using rule 69 (expression -> expression PLUS expression .)
    F64             reduce using rule 69 (expression -> expression PLUS expression .)
    BOOL            reduce using rule 69 (expression -> expression PLUS expression .)
    STRING          reduce using rule 69 (expression -> expression PLUS expression .)
    $end            reduce using rule 69 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 69 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 69 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 69 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 69 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 69 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81

  ! TIMES           [ reduce using rule 69 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 69 (expression -> expression PLUS expression .) ]
  ! INCREMENT       [ shift and go to state 68 ]
  ! DECREMENT       [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NEQ             [ shift and go to state 73 ]
  ! LTHEN           [ shift and go to state 74 ]
  ! RTHEN           [ shift and go to state 75 ]
  ! LEQ             [ shift and go to state 76 ]
  ! GEQ             [ shift and go to state 77 ]
  ! PLUS            [ shift and go to state 78 ]
  ! MINUS           [ shift and go to state 79 ]
  ! MOD             [ shift and go to state 82 ]


state 130

    (70) expression -> expression MINUS expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    INCREMENT       reduce using rule 70 (expression -> expression MINUS expression .)
    DECREMENT       reduce using rule 70 (expression -> expression MINUS expression .)
    AND             reduce using rule 70 (expression -> expression MINUS expression .)
    OR              reduce using rule 70 (expression -> expression MINUS expression .)
    EQ              reduce using rule 70 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 70 (expression -> expression MINUS expression .)
    LTHEN           reduce using rule 70 (expression -> expression MINUS expression .)
    RTHEN           reduce using rule 70 (expression -> expression MINUS expression .)
    LEQ             reduce using rule 70 (expression -> expression MINUS expression .)
    GEQ             reduce using rule 70 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 70 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 70 (expression -> expression MINUS expression .)
    MOD             reduce using rule 70 (expression -> expression MINUS expression .)
    MATCH           reduce using rule 70 (expression -> expression MINUS expression .)
    ID              reduce using rule 70 (expression -> expression MINUS expression .)
    ASYNC           reduce using rule 70 (expression -> expression MINUS expression .)
    FN              reduce using rule 70 (expression -> expression MINUS expression .)
    CLASS           reduce using rule 70 (expression -> expression MINUS expression .)
    ENUM            reduce using rule 70 (expression -> expression MINUS expression .)
    NAMESPACE       reduce using rule 70 (expression -> expression MINUS expression .)
    INTERFACE       reduce using rule 70 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 70 (expression -> expression MINUS expression .)
    USE             reduce using rule 70 (expression -> expression MINUS expression .)
    FOR             reduce using rule 70 (expression -> expression MINUS expression .)
    IF              reduce using rule 70 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 70 (expression -> expression MINUS expression .)
    TRUE            reduce using rule 70 (expression -> expression MINUS expression .)
    FALSE           reduce using rule 70 (expression -> expression MINUS expression .)
    NOT             reduce using rule 70 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 70 (expression -> expression MINUS expression .)
    AWAIT           reduce using rule 70 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 70 (expression -> expression MINUS expression .)
    REF             reduce using rule 70 (expression -> expression MINUS expression .)
    POINTER         reduce using rule 70 (expression -> expression MINUS expression .)
    error           reduce using rule 70 (expression -> expression MINUS expression .)
    I8              reduce using rule 70 (expression -> expression MINUS expression .)
    I16             reduce using rule 70 (expression -> expression MINUS expression .)
    I32             reduce using rule 70 (expression -> expression MINUS expression .)
    I64             reduce using rule 70 (expression -> expression MINUS expression .)
    U8              reduce using rule 70 (expression -> expression MINUS expression .)
    U16             reduce using rule 70 (expression -> expression MINUS expression .)
    U32             reduce using rule 70 (expression -> expression MINUS expression .)
    U64             reduce using rule 70 (expression -> expression MINUS expression .)
    F32             reduce using rule 70 (expression -> expression MINUS expression .)
    F64             reduce using rule 70 (expression -> expression MINUS expression .)
    BOOL            reduce using rule 70 (expression -> expression MINUS expression .)
    STRING          reduce using rule 70 (expression -> expression MINUS expression .)
    $end            reduce using rule 70 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 70 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 70 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 70 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 70 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 70 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81

  ! TIMES           [ reduce using rule 70 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 70 (expression -> expression MINUS expression .) ]
  ! INCREMENT       [ shift and go to state 68 ]
  ! DECREMENT       [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NEQ             [ shift and go to state 73 ]
  ! LTHEN           [ shift and go to state 74 ]
  ! RTHEN           [ shift and go to state 75 ]
  ! LEQ             [ shift and go to state 76 ]
  ! GEQ             [ shift and go to state 77 ]
  ! PLUS            [ shift and go to state 78 ]
  ! MINUS           [ shift and go to state 79 ]
  ! MOD             [ shift and go to state 82 ]


state 131

    (71) expression -> expression TIMES expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    INCREMENT       reduce using rule 71 (expression -> expression TIMES expression .)
    DECREMENT       reduce using rule 71 (expression -> expression TIMES expression .)
    AND             reduce using rule 71 (expression -> expression TIMES expression .)
    OR              reduce using rule 71 (expression -> expression TIMES expression .)
    EQ              reduce using rule 71 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 71 (expression -> expression TIMES expression .)
    LTHEN           reduce using rule 71 (expression -> expression TIMES expression .)
    RTHEN           reduce using rule 71 (expression -> expression TIMES expression .)
    LEQ             reduce using rule 71 (expression -> expression TIMES expression .)
    GEQ             reduce using rule 71 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 71 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 71 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 71 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 71 (expression -> expression TIMES expression .)
    MOD             reduce using rule 71 (expression -> expression TIMES expression .)
    MATCH           reduce using rule 71 (expression -> expression TIMES expression .)
    ID              reduce using rule 71 (expression -> expression TIMES expression .)
    ASYNC           reduce using rule 71 (expression -> expression TIMES expression .)
    FN              reduce using rule 71 (expression -> expression TIMES expression .)
    CLASS           reduce using rule 71 (expression -> expression TIMES expression .)
    ENUM            reduce using rule 71 (expression -> expression TIMES expression .)
    NAMESPACE       reduce using rule 71 (expression -> expression TIMES expression .)
    INTERFACE       reduce using rule 71 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 71 (expression -> expression TIMES expression .)
    USE             reduce using rule 71 (expression -> expression TIMES expression .)
    FOR             reduce using rule 71 (expression -> expression TIMES expression .)
    IF              reduce using rule 71 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 71 (expression -> expression TIMES expression .)
    TRUE            reduce using rule 71 (expression -> expression TIMES expression .)
    FALSE           reduce using rule 71 (expression -> expression TIMES expression .)
    NOT             reduce using rule 71 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 71 (expression -> expression TIMES expression .)
    AWAIT           reduce using rule 71 (expression -> expression TIMES expression .)
    NUMBER          reduce using rule 71 (expression -> expression TIMES expression .)
    REF             reduce using rule 71 (expression -> expression TIMES expression .)
    POINTER         reduce using rule 71 (expression -> expression TIMES expression .)
    error           reduce using rule 71 (expression -> expression TIMES expression .)
    I8              reduce using rule 71 (expression -> expression TIMES expression .)
    I16             reduce using rule 71 (expression -> expression TIMES expression .)
    I32             reduce using rule 71 (expression -> expression TIMES expression .)
    I64             reduce using rule 71 (expression -> expression TIMES expression .)
    U8              reduce using rule 71 (expression -> expression TIMES expression .)
    U16             reduce using rule 71 (expression -> expression TIMES expression .)
    U32             reduce using rule 71 (expression -> expression TIMES expression .)
    U64             reduce using rule 71 (expression -> expression TIMES expression .)
    F32             reduce using rule 71 (expression -> expression TIMES expression .)
    F64             reduce using rule 71 (expression -> expression TIMES expression .)
    BOOL            reduce using rule 71 (expression -> expression TIMES expression .)
    STRING          reduce using rule 71 (expression -> expression TIMES expression .)
    $end            reduce using rule 71 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 71 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 71 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 71 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 71 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 71 (expression -> expression TIMES expression .)

  ! INCREMENT       [ shift and go to state 68 ]
  ! DECREMENT       [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NEQ             [ shift and go to state 73 ]
  ! LTHEN           [ shift and go to state 74 ]
  ! RTHEN           [ shift and go to state 75 ]
  ! LEQ             [ shift and go to state 76 ]
  ! GEQ             [ shift and go to state 77 ]
  ! PLUS            [ shift and go to state 78 ]
  ! MINUS           [ shift and go to state 79 ]
  ! TIMES           [ shift and go to state 80 ]
  ! DIVIDE          [ shift and go to state 81 ]
  ! MOD             [ shift and go to state 82 ]


state 132

    (72) expression -> expression DIVIDE expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    INCREMENT       reduce using rule 72 (expression -> expression DIVIDE expression .)
    DECREMENT       reduce using rule 72 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 72 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 72 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 72 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 72 (expression -> expression DIVIDE expression .)
    LTHEN           reduce using rule 72 (expression -> expression DIVIDE expression .)
    RTHEN           reduce using rule 72 (expression -> expression DIVIDE expression .)
    LEQ             reduce using rule 72 (expression -> expression DIVIDE expression .)
    GEQ             reduce using rule 72 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 72 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 72 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 72 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 72 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 72 (expression -> expression DIVIDE expression .)
    MATCH           reduce using rule 72 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 72 (expression -> expression DIVIDE expression .)
    ASYNC           reduce using rule 72 (expression -> expression DIVIDE expression .)
    FN              reduce using rule 72 (expression -> expression DIVIDE expression .)
    CLASS           reduce using rule 72 (expression -> expression DIVIDE expression .)
    ENUM            reduce using rule 72 (expression -> expression DIVIDE expression .)
    NAMESPACE       reduce using rule 72 (expression -> expression DIVIDE expression .)
    INTERFACE       reduce using rule 72 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 72 (expression -> expression DIVIDE expression .)
    USE             reduce using rule 72 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 72 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 72 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 72 (expression -> expression DIVIDE expression .)
    TRUE            reduce using rule 72 (expression -> expression DIVIDE expression .)
    FALSE           reduce using rule 72 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 72 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 72 (expression -> expression DIVIDE expression .)
    AWAIT           reduce using rule 72 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 72 (expression -> expression DIVIDE expression .)
    REF             reduce using rule 72 (expression -> expression DIVIDE expression .)
    POINTER         reduce using rule 72 (expression -> expression DIVIDE expression .)
    error           reduce using rule 72 (expression -> expression DIVIDE expression .)
    I8              reduce using rule 72 (expression -> expression DIVIDE expression .)
    I16             reduce using rule 72 (expression -> expression DIVIDE expression .)
    I32             reduce using rule 72 (expression -> expression DIVIDE expression .)
    I64             reduce using rule 72 (expression -> expression DIVIDE expression .)
    U8              reduce using rule 72 (expression -> expression DIVIDE expression .)
    U16             reduce using rule 72 (expression -> expression DIVIDE expression .)
    U32             reduce using rule 72 (expression -> expression DIVIDE expression .)
    U64             reduce using rule 72 (expression -> expression DIVIDE expression .)
    F32             reduce using rule 72 (expression -> expression DIVIDE expression .)
    F64             reduce using rule 72 (expression -> expression DIVIDE expression .)
    BOOL            reduce using rule 72 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 72 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 72 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 72 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 72 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 72 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 72 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 72 (expression -> expression DIVIDE expression .)

  ! INCREMENT       [ shift and go to state 68 ]
  ! DECREMENT       [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NEQ             [ shift and go to state 73 ]
  ! LTHEN           [ shift and go to state 74 ]
  ! RTHEN           [ shift and go to state 75 ]
  ! LEQ             [ shift and go to state 76 ]
  ! GEQ             [ shift and go to state 77 ]
  ! PLUS            [ shift and go to state 78 ]
  ! MINUS           [ shift and go to state 79 ]
  ! TIMES           [ shift and go to state 80 ]
  ! DIVIDE          [ shift and go to state 81 ]
  ! MOD             [ shift and go to state 82 ]


state 133

    (73) expression -> expression MOD expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LTHEN resolved as shift
  ! shift/reduce conflict for RTHEN resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    MATCH           reduce using rule 73 (expression -> expression MOD expression .)
    ID              reduce using rule 73 (expression -> expression MOD expression .)
    ASYNC           reduce using rule 73 (expression -> expression MOD expression .)
    FN              reduce using rule 73 (expression -> expression MOD expression .)
    CLASS           reduce using rule 73 (expression -> expression MOD expression .)
    ENUM            reduce using rule 73 (expression -> expression MOD expression .)
    NAMESPACE       reduce using rule 73 (expression -> expression MOD expression .)
    INTERFACE       reduce using rule 73 (expression -> expression MOD expression .)
    RETURN          reduce using rule 73 (expression -> expression MOD expression .)
    USE             reduce using rule 73 (expression -> expression MOD expression .)
    FOR             reduce using rule 73 (expression -> expression MOD expression .)
    IF              reduce using rule 73 (expression -> expression MOD expression .)
    WHILE           reduce using rule 73 (expression -> expression MOD expression .)
    TRUE            reduce using rule 73 (expression -> expression MOD expression .)
    FALSE           reduce using rule 73 (expression -> expression MOD expression .)
    NOT             reduce using rule 73 (expression -> expression MOD expression .)
    LPAREN          reduce using rule 73 (expression -> expression MOD expression .)
    AWAIT           reduce using rule 73 (expression -> expression MOD expression .)
    NUMBER          reduce using rule 73 (expression -> expression MOD expression .)
    REF             reduce using rule 73 (expression -> expression MOD expression .)
    POINTER         reduce using rule 73 (expression -> expression MOD expression .)
    error           reduce using rule 73 (expression -> expression MOD expression .)
    I8              reduce using rule 73 (expression -> expression MOD expression .)
    I16             reduce using rule 73 (expression -> expression MOD expression .)
    I32             reduce using rule 73 (expression -> expression MOD expression .)
    I64             reduce using rule 73 (expression -> expression MOD expression .)
    U8              reduce using rule 73 (expression -> expression MOD expression .)
    U16             reduce using rule 73 (expression -> expression MOD expression .)
    U32             reduce using rule 73 (expression -> expression MOD expression .)
    U64             reduce using rule 73 (expression -> expression MOD expression .)
    F32             reduce using rule 73 (expression -> expression MOD expression .)
    F64             reduce using rule 73 (expression -> expression MOD expression .)
    BOOL            reduce using rule 73 (expression -> expression MOD expression .)
    STRING          reduce using rule 73 (expression -> expression MOD expression .)
    $end            reduce using rule 73 (expression -> expression MOD expression .)
    LBRACE          reduce using rule 73 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 73 (expression -> expression MOD expression .)
    SEMI            reduce using rule 73 (expression -> expression MOD expression .)
    RBRACE          reduce using rule 73 (expression -> expression MOD expression .)
    COMMA           reduce using rule 73 (expression -> expression MOD expression .)
    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82

  ! INCREMENT       [ reduce using rule 73 (expression -> expression MOD expression .) ]
  ! DECREMENT       [ reduce using rule 73 (expression -> expression MOD expression .) ]
  ! AND             [ reduce using rule 73 (expression -> expression MOD expression .) ]
  ! OR              [ reduce using rule 73 (expression -> expression MOD expression .) ]
  ! EQ              [ reduce using rule 73 (expression -> expression MOD expression .) ]
  ! NEQ             [ reduce using rule 73 (expression -> expression MOD expression .) ]
  ! LTHEN           [ reduce using rule 73 (expression -> expression MOD expression .) ]
  ! RTHEN           [ reduce using rule 73 (expression -> expression MOD expression .) ]
  ! LEQ             [ reduce using rule 73 (expression -> expression MOD expression .) ]
  ! GEQ             [ reduce using rule 73 (expression -> expression MOD expression .) ]
  ! PLUS            [ reduce using rule 73 (expression -> expression MOD expression .) ]
  ! MINUS           [ reduce using rule 73 (expression -> expression MOD expression .) ]
  ! TIMES           [ reduce using rule 73 (expression -> expression MOD expression .) ]
  ! DIVIDE          [ reduce using rule 73 (expression -> expression MOD expression .) ]
  ! MOD             [ reduce using rule 73 (expression -> expression MOD expression .) ]


state 134

    (126) statement -> ID ASSIGN expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    MATCH           reduce using rule 126 (statement -> ID ASSIGN expression .)
    ID              reduce using rule 126 (statement -> ID ASSIGN expression .)
    ASYNC           reduce using rule 126 (statement -> ID ASSIGN expression .)
    FN              reduce using rule 126 (statement -> ID ASSIGN expression .)
    CLASS           reduce using rule 126 (statement -> ID ASSIGN expression .)
    ENUM            reduce using rule 126 (statement -> ID ASSIGN expression .)
    NAMESPACE       reduce using rule 126 (statement -> ID ASSIGN expression .)
    INTERFACE       reduce using rule 126 (statement -> ID ASSIGN expression .)
    RETURN          reduce using rule 126 (statement -> ID ASSIGN expression .)
    USE             reduce using rule 126 (statement -> ID ASSIGN expression .)
    FOR             reduce using rule 126 (statement -> ID ASSIGN expression .)
    IF              reduce using rule 126 (statement -> ID ASSIGN expression .)
    WHILE           reduce using rule 126 (statement -> ID ASSIGN expression .)
    TRUE            reduce using rule 126 (statement -> ID ASSIGN expression .)
    FALSE           reduce using rule 126 (statement -> ID ASSIGN expression .)
    NOT             reduce using rule 126 (statement -> ID ASSIGN expression .)
    LPAREN          reduce using rule 126 (statement -> ID ASSIGN expression .)
    AWAIT           reduce using rule 126 (statement -> ID ASSIGN expression .)
    NUMBER          reduce using rule 126 (statement -> ID ASSIGN expression .)
    REF             reduce using rule 126 (statement -> ID ASSIGN expression .)
    POINTER         reduce using rule 126 (statement -> ID ASSIGN expression .)
    error           reduce using rule 126 (statement -> ID ASSIGN expression .)
    I8              reduce using rule 126 (statement -> ID ASSIGN expression .)
    I16             reduce using rule 126 (statement -> ID ASSIGN expression .)
    I32             reduce using rule 126 (statement -> ID ASSIGN expression .)
    I64             reduce using rule 126 (statement -> ID ASSIGN expression .)
    U8              reduce using rule 126 (statement -> ID ASSIGN expression .)
    U16             reduce using rule 126 (statement -> ID ASSIGN expression .)
    U32             reduce using rule 126 (statement -> ID ASSIGN expression .)
    U64             reduce using rule 126 (statement -> ID ASSIGN expression .)
    F32             reduce using rule 126 (statement -> ID ASSIGN expression .)
    F64             reduce using rule 126 (statement -> ID ASSIGN expression .)
    BOOL            reduce using rule 126 (statement -> ID ASSIGN expression .)
    STRING          reduce using rule 126 (statement -> ID ASSIGN expression .)
    $end            reduce using rule 126 (statement -> ID ASSIGN expression .)
    RBRACE          reduce using rule 126 (statement -> ID ASSIGN expression .)
    SEMI            reduce using rule 126 (statement -> ID ASSIGN expression .)
    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82

  ! INCREMENT       [ reduce using rule 126 (statement -> ID ASSIGN expression .) ]
  ! DECREMENT       [ reduce using rule 126 (statement -> ID ASSIGN expression .) ]


state 135

    (75) expression -> ID LPAREN arg_list_opt . RPAREN

    RPAREN          shift and go to state 171


state 136

    (76) arg_list_opt -> arg_list .
    (78) arg_list -> arg_list . COMMA expression

    RPAREN          reduce using rule 76 (arg_list_opt -> arg_list .)
    RBRACE          reduce using rule 76 (arg_list_opt -> arg_list .)
    COMMA           shift and go to state 172


state 137

    (77) arg_list_opt -> empty .
    (80) arg_list -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 77 (arg_list_opt -> empty .)
  ! reduce/reduce conflict for RBRACE resolved using rule 77 (arg_list_opt -> empty .)
    RPAREN          reduce using rule 77 (arg_list_opt -> empty .)
    RBRACE          reduce using rule 77 (arg_list_opt -> empty .)
    COMMA           reduce using rule 80 (arg_list -> empty .)

  ! RPAREN          [ reduce using rule 80 (arg_list -> empty .) ]
  ! RBRACE          [ reduce using rule 80 (arg_list -> empty .) ]


state 138

    (79) arg_list -> expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    COMMA           reduce using rule 79 (arg_list -> expression .)
    RPAREN          reduce using rule 79 (arg_list -> expression .)
    RBRACE          reduce using rule 79 (arg_list -> expression .)
    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82


state 139

    (40) type_specifier -> ID .
    (18) type_with_generics -> ID . LANGLE type_list RANGLE
    (19) type_with_generics -> ID . empty
    (111) empty -> .

  ! reduce/reduce conflict for RANGLE resolved using rule 40 (type_specifier -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 40 (type_specifier -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 40 (type_specifier -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 40 (type_specifier -> ID .)
  ! reduce/reduce conflict for LBRACE resolved using rule 40 (type_specifier -> ID .)
    RANGLE          reduce using rule 40 (type_specifier -> ID .)
    COMMA           reduce using rule 40 (type_specifier -> ID .)
    ID              reduce using rule 40 (type_specifier -> ID .)
    LPAREN          reduce using rule 40 (type_specifier -> ID .)
    LBRACE          reduce using rule 40 (type_specifier -> ID .)
    LANGLE          shift and go to state 86

  ! RANGLE          [ reduce using rule 111 (empty -> .) ]
  ! COMMA           [ reduce using rule 111 (empty -> .) ]
  ! ID              [ reduce using rule 111 (empty -> .) ]
  ! LPAREN          [ reduce using rule 111 (empty -> .) ]
  ! LBRACE          [ reduce using rule 111 (empty -> .) ]

    empty                          shift and go to state 87

state 140

    (18) type_with_generics -> ID LANGLE type_list . RANGLE
    (20) type_list -> type_list . COMMA type_specifier

    RANGLE          shift and go to state 173
    COMMA           shift and go to state 174


state 141

    (21) type_list -> type_specifier .

    RANGLE          reduce using rule 21 (type_list -> type_specifier .)
    COMMA           reduce using rule 21 (type_list -> type_specifier .)


state 142

    (106) function_definition -> ASYNC FN ID . LPAREN parameters_opt RPAREN return_type_opt block

    LPAREN          shift and go to state 175


state 143

    (123) function_definition -> FN type_with_generics LPAREN . parameters_opt RPAREN return_type_opt block
    (116) parameters_opt -> . parameters_list
    (117) parameters_opt -> . empty
    (118) parameters_list -> . parameters_list COMMA parameter
    (119) parameters_list -> . parameter
    (111) empty -> .
    (120) parameter -> . type_specifier ID
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    RPAREN          reduce using rule 111 (empty -> .)
    ID              shift and go to state 139
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54
    POINTER         shift and go to state 110
    REF             shift and go to state 107

    type_with_generics             shift and go to state 22
    parameters_opt                 shift and go to state 176
    parameters_list                shift and go to state 177
    empty                          shift and go to state 178
    parameter                      shift and go to state 179
    type_specifier                 shift and go to state 180

state 144

    (74) expression -> LPAREN expression RPAREN .

    INCREMENT       reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    DECREMENT       reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    LTHEN           reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    RTHEN           reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    MATCH           reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    ASYNC           reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    FN              reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    CLASS           reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    ENUM            reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    NAMESPACE       reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    INTERFACE       reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    USE             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    AWAIT           reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    REF             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    POINTER         reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    error           reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    I8              reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    I16             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    I32             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    I64             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    U8              reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    U16             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    U32             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    U64             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    F32             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    F64             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    BOOL            reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 74 (expression -> LPAREN expression RPAREN .)


state 145

    (124) class_definition -> CLASS type_with_generics extends_opt . LBRACE class_body RBRACE
    (138) struct_definition -> CLASS type_with_generics extends_opt . LBRACE struct_body RBRACE

    LBRACE          shift and go to state 181


state 146

    (38) extends_opt -> EXTENDS . type_with_generics
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    ID              shift and go to state 90

    type_with_generics             shift and go to state 182

state 147

    (39) extends_opt -> empty .

    LBRACE          reduce using rule 39 (extends_opt -> empty .)


state 148

    (139) enum_definition -> ENUM type_with_generics LBRACE . enum_body RBRACE
    (34) enum_body -> . enum_body enum_member
    (35) enum_body -> . enum_member
    (36) enum_member -> . ID
    (37) enum_member -> . ID ASSIGN NUMBER

    ID              shift and go to state 185

    enum_body                      shift and go to state 183
    enum_member                    shift and go to state 184

state 149

    (15) namespace_definition -> NAMESPACE ID block .

    MATCH           reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    ID              reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    ASYNC           reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    FN              reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    CLASS           reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    ENUM            reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    NAMESPACE       reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    INTERFACE       reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    RETURN          reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    USE             reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    FOR             reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    IF              reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    WHILE           reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    TRUE            reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    FALSE           reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    INCREMENT       reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    DECREMENT       reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    NOT             reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    LPAREN          reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    AWAIT           reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    NUMBER          reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    REF             reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    POINTER         reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    error           reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    I8              reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    I16             reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    I32             reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    I64             reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    U8              reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    U16             reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    U32             reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    U64             reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    F32             reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    F64             reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    BOOL            reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    STRING          reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    $end            reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    RBRACE          reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)
    SEMI            reduce using rule 15 (namespace_definition -> NAMESPACE ID block .)


state 150

    (130) variable -> type_specifier ID ASSIGN . expression
    (133) variable -> type_specifier ID ASSIGN . NEW type_specifier LPAREN arg_list_opt RPAREN
    (134) variable -> type_specifier ID ASSIGN . expression LPAREN arg_list_opt RPAREN
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    NEW             shift and go to state 187
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 186

state 151

    (131) variable -> type_specifier ID LPAREN . arg_list_opt RPAREN
    (76) arg_list_opt -> . arg_list
    (77) arg_list_opt -> . empty
    (78) arg_list -> . arg_list COMMA expression
    (79) arg_list -> . expression
    (80) arg_list -> . empty
    (111) empty -> .
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    RPAREN          reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    arg_list_opt                   shift and go to state 188
    arg_list                       shift and go to state 136
    empty                          shift and go to state 137
    expression                     shift and go to state 138

state 152

    (132) variable -> type_specifier ID LBRACE . arg_list_opt RBRACE
    (76) arg_list_opt -> . arg_list
    (77) arg_list_opt -> . empty
    (78) arg_list -> . arg_list COMMA expression
    (79) arg_list -> . expression
    (80) arg_list -> . empty
    (111) empty -> .
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    RBRACE          reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    arg_list_opt                   shift and go to state 189
    arg_list                       shift and go to state 136
    empty                          shift and go to state 137
    expression                     shift and go to state 138

state 153

    (135) interface_definition -> INTERFACE type_with_generics LBRACE . interface_body RBRACE
    (136) interface_body -> . interface_body function_definition
    (137) interface_body -> . empty
    (111) empty -> .

    RBRACE          reduce using rule 111 (empty -> .)
    ASYNC           reduce using rule 111 (empty -> .)
    FN              reduce using rule 111 (empty -> .)

    interface_body                 shift and go to state 190
    empty                          shift and go to state 191

state 154

    (105) use_statement -> USE qualified_name SEMI .

    MATCH           reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    ID              reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    ASYNC           reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    FN              reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    CLASS           reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    ENUM            reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    NAMESPACE       reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    INTERFACE       reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    RETURN          reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    USE             reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    FOR             reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    IF              reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    WHILE           reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    TRUE            reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    FALSE           reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    INCREMENT       reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    DECREMENT       reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    NOT             reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    LPAREN          reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    AWAIT           reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    NUMBER          reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    REF             reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    POINTER         reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    error           reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    I8              reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    I16             reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    I32             reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    I64             reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    U8              reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    U16             reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    U32             reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    U64             reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    F32             reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    F64             reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    BOOL            reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    STRING          reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    $end            reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    RBRACE          reduce using rule 105 (use_statement -> USE qualified_name SEMI .)
    SEMI            reduce using rule 105 (use_statement -> USE qualified_name SEMI .)


state 155

    (103) qualified_name -> qualified_name DOUBLE_COLON . ID

    ID              shift and go to state 192


state 156

    (66) for_block -> FOR ID IN . expression block
    (67) for_block -> FOR ID IN . LPAREN expression RPAREN block
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    LPAREN          shift and go to state 194
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 193

state 157

    (85) if_block -> IF expression block .

    ELSE            reduce using rule 85 (if_block -> IF expression block .)
    MATCH           reduce using rule 85 (if_block -> IF expression block .)
    ID              reduce using rule 85 (if_block -> IF expression block .)
    ASYNC           reduce using rule 85 (if_block -> IF expression block .)
    FN              reduce using rule 85 (if_block -> IF expression block .)
    CLASS           reduce using rule 85 (if_block -> IF expression block .)
    ENUM            reduce using rule 85 (if_block -> IF expression block .)
    NAMESPACE       reduce using rule 85 (if_block -> IF expression block .)
    INTERFACE       reduce using rule 85 (if_block -> IF expression block .)
    RETURN          reduce using rule 85 (if_block -> IF expression block .)
    USE             reduce using rule 85 (if_block -> IF expression block .)
    FOR             reduce using rule 85 (if_block -> IF expression block .)
    IF              reduce using rule 85 (if_block -> IF expression block .)
    WHILE           reduce using rule 85 (if_block -> IF expression block .)
    TRUE            reduce using rule 85 (if_block -> IF expression block .)
    FALSE           reduce using rule 85 (if_block -> IF expression block .)
    INCREMENT       reduce using rule 85 (if_block -> IF expression block .)
    DECREMENT       reduce using rule 85 (if_block -> IF expression block .)
    NOT             reduce using rule 85 (if_block -> IF expression block .)
    LPAREN          reduce using rule 85 (if_block -> IF expression block .)
    AWAIT           reduce using rule 85 (if_block -> IF expression block .)
    NUMBER          reduce using rule 85 (if_block -> IF expression block .)
    REF             reduce using rule 85 (if_block -> IF expression block .)
    POINTER         reduce using rule 85 (if_block -> IF expression block .)
    error           reduce using rule 85 (if_block -> IF expression block .)
    I8              reduce using rule 85 (if_block -> IF expression block .)
    I16             reduce using rule 85 (if_block -> IF expression block .)
    I32             reduce using rule 85 (if_block -> IF expression block .)
    I64             reduce using rule 85 (if_block -> IF expression block .)
    U8              reduce using rule 85 (if_block -> IF expression block .)
    U16             reduce using rule 85 (if_block -> IF expression block .)
    U32             reduce using rule 85 (if_block -> IF expression block .)
    U64             reduce using rule 85 (if_block -> IF expression block .)
    F32             reduce using rule 85 (if_block -> IF expression block .)
    F64             reduce using rule 85 (if_block -> IF expression block .)
    BOOL            reduce using rule 85 (if_block -> IF expression block .)
    STRING          reduce using rule 85 (if_block -> IF expression block .)
    $end            reduce using rule 85 (if_block -> IF expression block .)
    RBRACE          reduce using rule 85 (if_block -> IF expression block .)
    SEMI            reduce using rule 85 (if_block -> IF expression block .)


state 158

    (109) while_block -> WHILE expression block .

    ELSE            reduce using rule 109 (while_block -> WHILE expression block .)
    MATCH           reduce using rule 109 (while_block -> WHILE expression block .)
    ID              reduce using rule 109 (while_block -> WHILE expression block .)
    ASYNC           reduce using rule 109 (while_block -> WHILE expression block .)
    FN              reduce using rule 109 (while_block -> WHILE expression block .)
    CLASS           reduce using rule 109 (while_block -> WHILE expression block .)
    ENUM            reduce using rule 109 (while_block -> WHILE expression block .)
    NAMESPACE       reduce using rule 109 (while_block -> WHILE expression block .)
    INTERFACE       reduce using rule 109 (while_block -> WHILE expression block .)
    RETURN          reduce using rule 109 (while_block -> WHILE expression block .)
    USE             reduce using rule 109 (while_block -> WHILE expression block .)
    FOR             reduce using rule 109 (while_block -> WHILE expression block .)
    IF              reduce using rule 109 (while_block -> WHILE expression block .)
    WHILE           reduce using rule 109 (while_block -> WHILE expression block .)
    TRUE            reduce using rule 109 (while_block -> WHILE expression block .)
    FALSE           reduce using rule 109 (while_block -> WHILE expression block .)
    INCREMENT       reduce using rule 109 (while_block -> WHILE expression block .)
    DECREMENT       reduce using rule 109 (while_block -> WHILE expression block .)
    NOT             reduce using rule 109 (while_block -> WHILE expression block .)
    LPAREN          reduce using rule 109 (while_block -> WHILE expression block .)
    AWAIT           reduce using rule 109 (while_block -> WHILE expression block .)
    NUMBER          reduce using rule 109 (while_block -> WHILE expression block .)
    REF             reduce using rule 109 (while_block -> WHILE expression block .)
    POINTER         reduce using rule 109 (while_block -> WHILE expression block .)
    error           reduce using rule 109 (while_block -> WHILE expression block .)
    I8              reduce using rule 109 (while_block -> WHILE expression block .)
    I16             reduce using rule 109 (while_block -> WHILE expression block .)
    I32             reduce using rule 109 (while_block -> WHILE expression block .)
    I64             reduce using rule 109 (while_block -> WHILE expression block .)
    U8              reduce using rule 109 (while_block -> WHILE expression block .)
    U16             reduce using rule 109 (while_block -> WHILE expression block .)
    U32             reduce using rule 109 (while_block -> WHILE expression block .)
    U64             reduce using rule 109 (while_block -> WHILE expression block .)
    F32             reduce using rule 109 (while_block -> WHILE expression block .)
    F64             reduce using rule 109 (while_block -> WHILE expression block .)
    BOOL            reduce using rule 109 (while_block -> WHILE expression block .)
    STRING          reduce using rule 109 (while_block -> WHILE expression block .)
    $end            reduce using rule 109 (while_block -> WHILE expression block .)
    RBRACE          reduce using rule 109 (while_block -> WHILE expression block .)
    SEMI            reduce using rule 109 (while_block -> WHILE expression block .)


state 159

    (17) block -> LBRACE program . RBRACE
    (1) program -> program . statement
    (4) statement -> . function_definition
    (5) statement -> . class_definition
    (6) statement -> . struct_definition
    (7) statement -> . enum_definition
    (8) statement -> . namespace_definition
    (9) statement -> . variable SEMI
    (10) statement -> . interface_definition
    (11) statement -> . return_statement SEMI
    (12) statement -> . use_statement
    (65) statement -> . for_block
    (68) statement -> . for_block else_block
    (81) statement -> . if_block else_if_blocks else_block
    (82) statement -> . if_block else_if_blocks
    (83) statement -> . if_block else_block
    (84) statement -> . if_block
    (90) statement -> . MATCH expression LBRACE match_cases RBRACE
    (108) statement -> . while_block
    (110) statement -> . while_block else_block
    (125) statement -> . variable
    (126) statement -> . ID ASSIGN expression
    (127) statement -> . expression
    (106) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block
    (123) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block
    (124) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (138) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (139) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (15) namespace_definition -> . NAMESPACE ID block
    (129) variable -> . type_specifier ID
    (130) variable -> . type_specifier ID ASSIGN expression
    (131) variable -> . type_specifier ID LPAREN arg_list_opt RPAREN
    (132) variable -> . type_specifier ID LBRACE arg_list_opt RBRACE
    (133) variable -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN
    (134) variable -> . type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN
    (135) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (16) return_statement -> . RETURN expression
    (105) use_statement -> . USE qualified_name SEMI
    (66) for_block -> . FOR ID IN expression block
    (67) for_block -> . FOR ID IN LPAREN expression RPAREN block
    (85) if_block -> . IF expression block
    (109) while_block -> . WHILE expression block
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    RBRACE          shift and go to state 195
    MATCH           shift and go to state 15
    ID              shift and go to state 18
    ASYNC           shift and go to state 19
    FN              shift and go to state 20
    CLASS           shift and go to state 23
    ENUM            shift and go to state 24
    NAMESPACE       shift and go to state 25
    INTERFACE       shift and go to state 27
    RETURN          shift and go to state 28
    USE             shift and go to state 29
    FOR             shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 40
    POINTER         shift and go to state 41
    error           shift and go to state 42
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54

    statement                      shift and go to state 55
    function_definition            shift and go to state 4
    class_definition               shift and go to state 5
    struct_definition              shift and go to state 6
    enum_definition                shift and go to state 7
    namespace_definition           shift and go to state 8
    variable                       shift and go to state 9
    interface_definition           shift and go to state 10
    return_statement               shift and go to state 11
    use_statement                  shift and go to state 12
    for_block                      shift and go to state 13
    if_block                       shift and go to state 14
    expression                     shift and go to state 16
    while_block                    shift and go to state 17
    type_with_generics             shift and go to state 22
    type_specifier                 shift and go to state 26

state 160

    (88) else_if_block -> ELSE IF expression . block
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression
    (17) block -> . LBRACE program RBRACE

    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82
    LBRACE          shift and go to state 115

    block                          shift and go to state 196

state 161

    (90) statement -> MATCH expression LBRACE match_cases . RBRACE
    (91) match_cases -> match_cases . match_case
    (93) match_case -> . pattern ARM program SEMI
    (94) pattern -> . simple_pattern
    (95) pattern -> . tuple_pattern
    (96) simple_pattern -> . ID
    (97) simple_pattern -> . NUMBER
    (98) simple_pattern -> . STRING
    (99) simple_pattern -> . UNDERSCORE
    (100) tuple_pattern -> . LPAREN pattern_list RPAREN

    RBRACE          shift and go to state 197
    ID              shift and go to state 166
    NUMBER          shift and go to state 167
    STRING          shift and go to state 168
    UNDERSCORE      shift and go to state 169
    LPAREN          shift and go to state 170

    match_case                     shift and go to state 198
    pattern                        shift and go to state 163
    simple_pattern                 shift and go to state 164
    tuple_pattern                  shift and go to state 165

state 162

    (92) match_cases -> match_case .

    RBRACE          reduce using rule 92 (match_cases -> match_case .)
    ID              reduce using rule 92 (match_cases -> match_case .)
    NUMBER          reduce using rule 92 (match_cases -> match_case .)
    STRING          reduce using rule 92 (match_cases -> match_case .)
    UNDERSCORE      reduce using rule 92 (match_cases -> match_case .)
    LPAREN          reduce using rule 92 (match_cases -> match_case .)


state 163

    (93) match_case -> pattern . ARM program SEMI

    ARM             shift and go to state 199


state 164

    (94) pattern -> simple_pattern .

    ARM             reduce using rule 94 (pattern -> simple_pattern .)
    RPAREN          reduce using rule 94 (pattern -> simple_pattern .)
    COMMA           reduce using rule 94 (pattern -> simple_pattern .)


state 165

    (95) pattern -> tuple_pattern .

    ARM             reduce using rule 95 (pattern -> tuple_pattern .)
    RPAREN          reduce using rule 95 (pattern -> tuple_pattern .)
    COMMA           reduce using rule 95 (pattern -> tuple_pattern .)


state 166

    (96) simple_pattern -> ID .

    ARM             reduce using rule 96 (simple_pattern -> ID .)
    RPAREN          reduce using rule 96 (simple_pattern -> ID .)
    COMMA           reduce using rule 96 (simple_pattern -> ID .)


state 167

    (97) simple_pattern -> NUMBER .

    ARM             reduce using rule 97 (simple_pattern -> NUMBER .)
    RPAREN          reduce using rule 97 (simple_pattern -> NUMBER .)
    COMMA           reduce using rule 97 (simple_pattern -> NUMBER .)


state 168

    (98) simple_pattern -> STRING .

    ARM             reduce using rule 98 (simple_pattern -> STRING .)
    RPAREN          reduce using rule 98 (simple_pattern -> STRING .)
    COMMA           reduce using rule 98 (simple_pattern -> STRING .)


state 169

    (99) simple_pattern -> UNDERSCORE .

    ARM             reduce using rule 99 (simple_pattern -> UNDERSCORE .)
    RPAREN          reduce using rule 99 (simple_pattern -> UNDERSCORE .)
    COMMA           reduce using rule 99 (simple_pattern -> UNDERSCORE .)


state 170

    (100) tuple_pattern -> LPAREN . pattern_list RPAREN
    (101) pattern_list -> . pattern_list COMMA pattern
    (102) pattern_list -> . pattern
    (94) pattern -> . simple_pattern
    (95) pattern -> . tuple_pattern
    (96) simple_pattern -> . ID
    (97) simple_pattern -> . NUMBER
    (98) simple_pattern -> . STRING
    (99) simple_pattern -> . UNDERSCORE
    (100) tuple_pattern -> . LPAREN pattern_list RPAREN

    ID              shift and go to state 166
    NUMBER          shift and go to state 167
    STRING          shift and go to state 168
    UNDERSCORE      shift and go to state 169
    LPAREN          shift and go to state 170

    pattern_list                   shift and go to state 200
    pattern                        shift and go to state 201
    simple_pattern                 shift and go to state 164
    tuple_pattern                  shift and go to state 165

state 171

    (75) expression -> ID LPAREN arg_list_opt RPAREN .

    INCREMENT       reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    DECREMENT       reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    AND             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    OR              reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    EQ              reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    NEQ             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    LTHEN           reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    RTHEN           reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    LEQ             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    GEQ             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    PLUS            reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    MINUS           reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    TIMES           reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    DIVIDE          reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    MOD             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    MATCH           reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    ID              reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    ASYNC           reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    FN              reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    CLASS           reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    ENUM            reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    NAMESPACE       reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    INTERFACE       reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    RETURN          reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    USE             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    FOR             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    IF              reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    WHILE           reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    TRUE            reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    FALSE           reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    NOT             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    LPAREN          reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    AWAIT           reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    NUMBER          reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    REF             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    POINTER         reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    error           reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    I8              reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    I16             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    I32             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    I64             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    U8              reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    U16             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    U32             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    U64             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    F32             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    F64             reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    BOOL            reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    STRING          reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    $end            reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    LBRACE          reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    RPAREN          reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    SEMI            reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    RBRACE          reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)
    COMMA           reduce using rule 75 (expression -> ID LPAREN arg_list_opt RPAREN .)


state 172

    (78) arg_list -> arg_list COMMA . expression
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 202

state 173

    (18) type_with_generics -> ID LANGLE type_list RANGLE .

    ID              reduce using rule 18 (type_with_generics -> ID LANGLE type_list RANGLE .)
    LPAREN          reduce using rule 18 (type_with_generics -> ID LANGLE type_list RANGLE .)
    EXTENDS         reduce using rule 18 (type_with_generics -> ID LANGLE type_list RANGLE .)
    LBRACE          reduce using rule 18 (type_with_generics -> ID LANGLE type_list RANGLE .)
    RANGLE          reduce using rule 18 (type_with_generics -> ID LANGLE type_list RANGLE .)
    COMMA           reduce using rule 18 (type_with_generics -> ID LANGLE type_list RANGLE .)


state 174

    (20) type_list -> type_list COMMA . type_specifier
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    ID              shift and go to state 139
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54
    POINTER         shift and go to state 110
    REF             shift and go to state 107

    type_specifier                 shift and go to state 203
    type_with_generics             shift and go to state 22

state 175

    (106) function_definition -> ASYNC FN ID LPAREN . parameters_opt RPAREN return_type_opt block
    (116) parameters_opt -> . parameters_list
    (117) parameters_opt -> . empty
    (118) parameters_list -> . parameters_list COMMA parameter
    (119) parameters_list -> . parameter
    (111) empty -> .
    (120) parameter -> . type_specifier ID
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    RPAREN          reduce using rule 111 (empty -> .)
    ID              shift and go to state 139
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54
    POINTER         shift and go to state 110
    REF             shift and go to state 107

    parameters_opt                 shift and go to state 204
    parameters_list                shift and go to state 177
    empty                          shift and go to state 178
    parameter                      shift and go to state 179
    type_specifier                 shift and go to state 180
    type_with_generics             shift and go to state 22

state 176

    (123) function_definition -> FN type_with_generics LPAREN parameters_opt . RPAREN return_type_opt block

    RPAREN          shift and go to state 205


state 177

    (116) parameters_opt -> parameters_list .
    (118) parameters_list -> parameters_list . COMMA parameter

    RPAREN          reduce using rule 116 (parameters_opt -> parameters_list .)
    COMMA           shift and go to state 206


state 178

    (117) parameters_opt -> empty .

    RPAREN          reduce using rule 117 (parameters_opt -> empty .)


state 179

    (119) parameters_list -> parameter .

    COMMA           reduce using rule 119 (parameters_list -> parameter .)
    RPAREN          reduce using rule 119 (parameters_list -> parameter .)


state 180

    (120) parameter -> type_specifier . ID

    ID              shift and go to state 207


state 181

    (124) class_definition -> CLASS type_with_generics extends_opt LBRACE . class_body RBRACE
    (138) struct_definition -> CLASS type_with_generics extends_opt LBRACE . struct_body RBRACE
    (22) class_body -> . class_body class_member
    (23) class_body -> . empty
    (26) struct_body -> . struct_body struct_member
    (27) struct_body -> . empty
    (111) empty -> .

    RBRACE          reduce using rule 111 (empty -> .)
    ASYNC           reduce using rule 111 (empty -> .)
    FN              reduce using rule 111 (empty -> .)
    ID              reduce using rule 111 (empty -> .)
    I8              reduce using rule 111 (empty -> .)
    I16             reduce using rule 111 (empty -> .)
    I32             reduce using rule 111 (empty -> .)
    I64             reduce using rule 111 (empty -> .)
    U8              reduce using rule 111 (empty -> .)
    U16             reduce using rule 111 (empty -> .)
    U32             reduce using rule 111 (empty -> .)
    U64             reduce using rule 111 (empty -> .)
    F32             reduce using rule 111 (empty -> .)
    F64             reduce using rule 111 (empty -> .)
    BOOL            reduce using rule 111 (empty -> .)
    STRING          reduce using rule 111 (empty -> .)
    POINTER         reduce using rule 111 (empty -> .)
    REF             reduce using rule 111 (empty -> .)

    class_body                     shift and go to state 208
    struct_body                    shift and go to state 209
    empty                          shift and go to state 210

state 182

    (38) extends_opt -> EXTENDS type_with_generics .

    LBRACE          reduce using rule 38 (extends_opt -> EXTENDS type_with_generics .)


state 183

    (139) enum_definition -> ENUM type_with_generics LBRACE enum_body . RBRACE
    (34) enum_body -> enum_body . enum_member
    (36) enum_member -> . ID
    (37) enum_member -> . ID ASSIGN NUMBER

    RBRACE          shift and go to state 211
    ID              shift and go to state 185

    enum_member                    shift and go to state 212

state 184

    (35) enum_body -> enum_member .

    RBRACE          reduce using rule 35 (enum_body -> enum_member .)
    ID              reduce using rule 35 (enum_body -> enum_member .)


state 185

    (36) enum_member -> ID .
    (37) enum_member -> ID . ASSIGN NUMBER

    RBRACE          reduce using rule 36 (enum_member -> ID .)
    ID              reduce using rule 36 (enum_member -> ID .)
    ASSIGN          shift and go to state 213


state 186

    (130) variable -> type_specifier ID ASSIGN expression .
    (134) variable -> type_specifier ID ASSIGN expression . LPAREN arg_list_opt RPAREN
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    SEMI            reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    MATCH           reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    ID              reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    ASYNC           reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    FN              reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    CLASS           reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    ENUM            reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    NAMESPACE       reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    INTERFACE       reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    RETURN          reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    USE             reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    FOR             reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    IF              reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    WHILE           reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    TRUE            reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    FALSE           reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    NOT             reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    AWAIT           reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    NUMBER          reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    REF             reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    POINTER         reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    error           reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    I8              reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    I16             reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    I32             reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    I64             reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    U8              reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    U16             reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    U32             reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    U64             reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    F32             reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    F64             reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    BOOL            reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    STRING          reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    $end            reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    RBRACE          reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .)
    LPAREN          shift and go to state 214
    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82

  ! INCREMENT       [ reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .) ]
  ! DECREMENT       [ reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .) ]
  ! LPAREN          [ reduce using rule 130 (variable -> type_specifier ID ASSIGN expression .) ]


state 187

    (133) variable -> type_specifier ID ASSIGN NEW . type_specifier LPAREN arg_list_opt RPAREN
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    ID              shift and go to state 139
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54
    POINTER         shift and go to state 110
    REF             shift and go to state 107

    type_specifier                 shift and go to state 215
    type_with_generics             shift and go to state 22

state 188

    (131) variable -> type_specifier ID LPAREN arg_list_opt . RPAREN

    RPAREN          shift and go to state 216


state 189

    (132) variable -> type_specifier ID LBRACE arg_list_opt . RBRACE

    RBRACE          shift and go to state 217


state 190

    (135) interface_definition -> INTERFACE type_with_generics LBRACE interface_body . RBRACE
    (136) interface_body -> interface_body . function_definition
    (106) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block
    (123) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block

    RBRACE          shift and go to state 218
    ASYNC           shift and go to state 19
    FN              shift and go to state 20

    function_definition            shift and go to state 219

state 191

    (137) interface_body -> empty .

    RBRACE          reduce using rule 137 (interface_body -> empty .)
    ASYNC           reduce using rule 137 (interface_body -> empty .)
    FN              reduce using rule 137 (interface_body -> empty .)


state 192

    (103) qualified_name -> qualified_name DOUBLE_COLON ID .

    SEMI            reduce using rule 103 (qualified_name -> qualified_name DOUBLE_COLON ID .)
    DOUBLE_COLON    reduce using rule 103 (qualified_name -> qualified_name DOUBLE_COLON ID .)


state 193

    (66) for_block -> FOR ID IN expression . block
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression
    (17) block -> . LBRACE program RBRACE

    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82
    LBRACE          shift and go to state 115

    block                          shift and go to state 220

state 194

    (67) for_block -> FOR ID IN LPAREN . expression RPAREN block
    (74) expression -> LPAREN . expression RPAREN
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 221

state 195

    (17) block -> LBRACE program RBRACE .

    MATCH           reduce using rule 17 (block -> LBRACE program RBRACE .)
    ID              reduce using rule 17 (block -> LBRACE program RBRACE .)
    ASYNC           reduce using rule 17 (block -> LBRACE program RBRACE .)
    FN              reduce using rule 17 (block -> LBRACE program RBRACE .)
    CLASS           reduce using rule 17 (block -> LBRACE program RBRACE .)
    ENUM            reduce using rule 17 (block -> LBRACE program RBRACE .)
    NAMESPACE       reduce using rule 17 (block -> LBRACE program RBRACE .)
    INTERFACE       reduce using rule 17 (block -> LBRACE program RBRACE .)
    RETURN          reduce using rule 17 (block -> LBRACE program RBRACE .)
    USE             reduce using rule 17 (block -> LBRACE program RBRACE .)
    FOR             reduce using rule 17 (block -> LBRACE program RBRACE .)
    IF              reduce using rule 17 (block -> LBRACE program RBRACE .)
    WHILE           reduce using rule 17 (block -> LBRACE program RBRACE .)
    TRUE            reduce using rule 17 (block -> LBRACE program RBRACE .)
    FALSE           reduce using rule 17 (block -> LBRACE program RBRACE .)
    INCREMENT       reduce using rule 17 (block -> LBRACE program RBRACE .)
    DECREMENT       reduce using rule 17 (block -> LBRACE program RBRACE .)
    NOT             reduce using rule 17 (block -> LBRACE program RBRACE .)
    LPAREN          reduce using rule 17 (block -> LBRACE program RBRACE .)
    AWAIT           reduce using rule 17 (block -> LBRACE program RBRACE .)
    NUMBER          reduce using rule 17 (block -> LBRACE program RBRACE .)
    REF             reduce using rule 17 (block -> LBRACE program RBRACE .)
    POINTER         reduce using rule 17 (block -> LBRACE program RBRACE .)
    error           reduce using rule 17 (block -> LBRACE program RBRACE .)
    I8              reduce using rule 17 (block -> LBRACE program RBRACE .)
    I16             reduce using rule 17 (block -> LBRACE program RBRACE .)
    I32             reduce using rule 17 (block -> LBRACE program RBRACE .)
    I64             reduce using rule 17 (block -> LBRACE program RBRACE .)
    U8              reduce using rule 17 (block -> LBRACE program RBRACE .)
    U16             reduce using rule 17 (block -> LBRACE program RBRACE .)
    U32             reduce using rule 17 (block -> LBRACE program RBRACE .)
    U64             reduce using rule 17 (block -> LBRACE program RBRACE .)
    F32             reduce using rule 17 (block -> LBRACE program RBRACE .)
    F64             reduce using rule 17 (block -> LBRACE program RBRACE .)
    BOOL            reduce using rule 17 (block -> LBRACE program RBRACE .)
    STRING          reduce using rule 17 (block -> LBRACE program RBRACE .)
    $end            reduce using rule 17 (block -> LBRACE program RBRACE .)
    RBRACE          reduce using rule 17 (block -> LBRACE program RBRACE .)
    SEMI            reduce using rule 17 (block -> LBRACE program RBRACE .)
    ELSE            reduce using rule 17 (block -> LBRACE program RBRACE .)


state 196

    (88) else_if_block -> ELSE IF expression block .

    ELSE            reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    MATCH           reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    ID              reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    ASYNC           reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    FN              reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    CLASS           reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    ENUM            reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    NAMESPACE       reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    INTERFACE       reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    RETURN          reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    USE             reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    FOR             reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    IF              reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    WHILE           reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    TRUE            reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    FALSE           reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    INCREMENT       reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    DECREMENT       reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    NOT             reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    LPAREN          reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    AWAIT           reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    NUMBER          reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    REF             reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    POINTER         reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    error           reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    I8              reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    I16             reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    I32             reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    I64             reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    U8              reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    U16             reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    U32             reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    U64             reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    F32             reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    F64             reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    BOOL            reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    STRING          reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    $end            reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    RBRACE          reduce using rule 88 (else_if_block -> ELSE IF expression block .)
    SEMI            reduce using rule 88 (else_if_block -> ELSE IF expression block .)


state 197

    (90) statement -> MATCH expression LBRACE match_cases RBRACE .

    MATCH           reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    ID              reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    ASYNC           reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    FN              reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    CLASS           reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    ENUM            reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    NAMESPACE       reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    INTERFACE       reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    RETURN          reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    USE             reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    FOR             reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    IF              reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    WHILE           reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    TRUE            reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    FALSE           reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    INCREMENT       reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    DECREMENT       reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    NOT             reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    LPAREN          reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    AWAIT           reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    NUMBER          reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    REF             reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    POINTER         reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    error           reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    I8              reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    I16             reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    I32             reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    I64             reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    U8              reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    U16             reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    U32             reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    U64             reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    F32             reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    F64             reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    BOOL            reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    STRING          reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    $end            reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    RBRACE          reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)
    SEMI            reduce using rule 90 (statement -> MATCH expression LBRACE match_cases RBRACE .)


state 198

    (91) match_cases -> match_cases match_case .

    RBRACE          reduce using rule 91 (match_cases -> match_cases match_case .)
    ID              reduce using rule 91 (match_cases -> match_cases match_case .)
    NUMBER          reduce using rule 91 (match_cases -> match_cases match_case .)
    STRING          reduce using rule 91 (match_cases -> match_cases match_case .)
    UNDERSCORE      reduce using rule 91 (match_cases -> match_cases match_case .)
    LPAREN          reduce using rule 91 (match_cases -> match_cases match_case .)


state 199

    (93) match_case -> pattern ARM . program SEMI
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . empty
    (4) statement -> . function_definition
    (5) statement -> . class_definition
    (6) statement -> . struct_definition
    (7) statement -> . enum_definition
    (8) statement -> . namespace_definition
    (9) statement -> . variable SEMI
    (10) statement -> . interface_definition
    (11) statement -> . return_statement SEMI
    (12) statement -> . use_statement
    (65) statement -> . for_block
    (68) statement -> . for_block else_block
    (81) statement -> . if_block else_if_blocks else_block
    (82) statement -> . if_block else_if_blocks
    (83) statement -> . if_block else_block
    (84) statement -> . if_block
    (90) statement -> . MATCH expression LBRACE match_cases RBRACE
    (108) statement -> . while_block
    (110) statement -> . while_block else_block
    (125) statement -> . variable
    (126) statement -> . ID ASSIGN expression
    (127) statement -> . expression
    (111) empty -> .
    (106) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block
    (123) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block
    (124) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (138) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (139) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (15) namespace_definition -> . NAMESPACE ID block
    (129) variable -> . type_specifier ID
    (130) variable -> . type_specifier ID ASSIGN expression
    (131) variable -> . type_specifier ID LPAREN arg_list_opt RPAREN
    (132) variable -> . type_specifier ID LBRACE arg_list_opt RBRACE
    (133) variable -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN
    (134) variable -> . type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN
    (135) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (16) return_statement -> . RETURN expression
    (105) use_statement -> . USE qualified_name SEMI
    (66) for_block -> . FOR ID IN expression block
    (67) for_block -> . FOR ID IN LPAREN expression RPAREN block
    (85) if_block -> . IF expression block
    (109) while_block -> . WHILE expression block
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ASYNC resolved as shift
  ! shift/reduce conflict for FN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for NAMESPACE resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for USE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for AWAIT resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for REF resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for I8 resolved as shift
  ! shift/reduce conflict for I16 resolved as shift
  ! shift/reduce conflict for I32 resolved as shift
  ! shift/reduce conflict for I64 resolved as shift
  ! shift/reduce conflict for U8 resolved as shift
  ! shift/reduce conflict for U16 resolved as shift
  ! shift/reduce conflict for U32 resolved as shift
  ! shift/reduce conflict for U64 resolved as shift
  ! shift/reduce conflict for F32 resolved as shift
  ! shift/reduce conflict for F64 resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    MATCH           shift and go to state 15
    ID              shift and go to state 18
    SEMI            reduce using rule 111 (empty -> .)
    ASYNC           shift and go to state 19
    FN              shift and go to state 20
    CLASS           shift and go to state 23
    ENUM            shift and go to state 24
    NAMESPACE       shift and go to state 25
    INTERFACE       shift and go to state 27
    RETURN          shift and go to state 28
    USE             shift and go to state 29
    FOR             shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 40
    POINTER         shift and go to state 41
    error           shift and go to state 42
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54

  ! MATCH           [ reduce using rule 111 (empty -> .) ]
  ! ID              [ reduce using rule 111 (empty -> .) ]
  ! ASYNC           [ reduce using rule 111 (empty -> .) ]
  ! FN              [ reduce using rule 111 (empty -> .) ]
  ! CLASS           [ reduce using rule 111 (empty -> .) ]
  ! ENUM            [ reduce using rule 111 (empty -> .) ]
  ! NAMESPACE       [ reduce using rule 111 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 111 (empty -> .) ]
  ! RETURN          [ reduce using rule 111 (empty -> .) ]
  ! USE             [ reduce using rule 111 (empty -> .) ]
  ! FOR             [ reduce using rule 111 (empty -> .) ]
  ! IF              [ reduce using rule 111 (empty -> .) ]
  ! WHILE           [ reduce using rule 111 (empty -> .) ]
  ! TRUE            [ reduce using rule 111 (empty -> .) ]
  ! FALSE           [ reduce using rule 111 (empty -> .) ]
  ! INCREMENT       [ reduce using rule 111 (empty -> .) ]
  ! DECREMENT       [ reduce using rule 111 (empty -> .) ]
  ! NOT             [ reduce using rule 111 (empty -> .) ]
  ! LPAREN          [ reduce using rule 111 (empty -> .) ]
  ! AWAIT           [ reduce using rule 111 (empty -> .) ]
  ! NUMBER          [ reduce using rule 111 (empty -> .) ]
  ! REF             [ reduce using rule 111 (empty -> .) ]
  ! POINTER         [ reduce using rule 111 (empty -> .) ]
  ! error           [ reduce using rule 111 (empty -> .) ]
  ! I8              [ reduce using rule 111 (empty -> .) ]
  ! I16             [ reduce using rule 111 (empty -> .) ]
  ! I32             [ reduce using rule 111 (empty -> .) ]
  ! I64             [ reduce using rule 111 (empty -> .) ]
  ! U8              [ reduce using rule 111 (empty -> .) ]
  ! U16             [ reduce using rule 111 (empty -> .) ]
  ! U32             [ reduce using rule 111 (empty -> .) ]
  ! U64             [ reduce using rule 111 (empty -> .) ]
  ! F32             [ reduce using rule 111 (empty -> .) ]
  ! F64             [ reduce using rule 111 (empty -> .) ]
  ! BOOL            [ reduce using rule 111 (empty -> .) ]
  ! STRING          [ reduce using rule 111 (empty -> .) ]

    program                        shift and go to state 222
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    function_definition            shift and go to state 4
    class_definition               shift and go to state 5
    struct_definition              shift and go to state 6
    enum_definition                shift and go to state 7
    namespace_definition           shift and go to state 8
    variable                       shift and go to state 9
    interface_definition           shift and go to state 10
    return_statement               shift and go to state 11
    use_statement                  shift and go to state 12
    for_block                      shift and go to state 13
    if_block                       shift and go to state 14
    expression                     shift and go to state 16
    while_block                    shift and go to state 17
    type_with_generics             shift and go to state 22
    type_specifier                 shift and go to state 26

state 200

    (100) tuple_pattern -> LPAREN pattern_list . RPAREN
    (101) pattern_list -> pattern_list . COMMA pattern

    RPAREN          shift and go to state 223
    COMMA           shift and go to state 224


state 201

    (102) pattern_list -> pattern .

    RPAREN          reduce using rule 102 (pattern_list -> pattern .)
    COMMA           reduce using rule 102 (pattern_list -> pattern .)


state 202

    (78) arg_list -> arg_list COMMA expression .
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    COMMA           reduce using rule 78 (arg_list -> arg_list COMMA expression .)
    RPAREN          reduce using rule 78 (arg_list -> arg_list COMMA expression .)
    RBRACE          reduce using rule 78 (arg_list -> arg_list COMMA expression .)
    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82


state 203

    (20) type_list -> type_list COMMA type_specifier .

    RANGLE          reduce using rule 20 (type_list -> type_list COMMA type_specifier .)
    COMMA           reduce using rule 20 (type_list -> type_list COMMA type_specifier .)


state 204

    (106) function_definition -> ASYNC FN ID LPAREN parameters_opt . RPAREN return_type_opt block

    RPAREN          shift and go to state 225


state 205

    (123) function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN . return_type_opt block
    (121) return_type_opt -> . ARROW type_specifier
    (122) return_type_opt -> . empty
    (111) empty -> .

    ARROW           shift and go to state 227
    LBRACE          reduce using rule 111 (empty -> .)

    return_type_opt                shift and go to state 226
    empty                          shift and go to state 228

state 206

    (118) parameters_list -> parameters_list COMMA . parameter
    (120) parameter -> . type_specifier ID
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    ID              shift and go to state 139
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54
    POINTER         shift and go to state 110
    REF             shift and go to state 107

    parameter                      shift and go to state 229
    type_specifier                 shift and go to state 180
    type_with_generics             shift and go to state 22

state 207

    (120) parameter -> type_specifier ID .

    COMMA           reduce using rule 120 (parameter -> type_specifier ID .)
    RPAREN          reduce using rule 120 (parameter -> type_specifier ID .)


state 208

    (124) class_definition -> CLASS type_with_generics extends_opt LBRACE class_body . RBRACE
    (22) class_body -> class_body . class_member
    (24) class_member -> . variable SEMI
    (25) class_member -> . function_definition
    (129) variable -> . type_specifier ID
    (130) variable -> . type_specifier ID ASSIGN expression
    (131) variable -> . type_specifier ID LPAREN arg_list_opt RPAREN
    (132) variable -> . type_specifier ID LBRACE arg_list_opt RBRACE
    (133) variable -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN
    (134) variable -> . type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN
    (106) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block
    (123) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    RBRACE          shift and go to state 230
    ASYNC           shift and go to state 19
    FN              shift and go to state 20
    ID              shift and go to state 139
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54
    POINTER         shift and go to state 110
    REF             shift and go to state 107

    type_with_generics             shift and go to state 22
    class_member                   shift and go to state 231
    variable                       shift and go to state 232
    function_definition            shift and go to state 233
    type_specifier                 shift and go to state 26

state 209

    (138) struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body . RBRACE
    (26) struct_body -> struct_body . struct_member
    (32) struct_member -> . variable SEMI
    (33) struct_member -> . function_definition
    (129) variable -> . type_specifier ID
    (130) variable -> . type_specifier ID ASSIGN expression
    (131) variable -> . type_specifier ID LPAREN arg_list_opt RPAREN
    (132) variable -> . type_specifier ID LBRACE arg_list_opt RBRACE
    (133) variable -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN
    (134) variable -> . type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN
    (106) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block
    (123) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    RBRACE          shift and go to state 234
    ASYNC           shift and go to state 19
    FN              shift and go to state 20
    ID              shift and go to state 139
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54
    POINTER         shift and go to state 110
    REF             shift and go to state 107

    type_with_generics             shift and go to state 22
    struct_member                  shift and go to state 235
    variable                       shift and go to state 236
    function_definition            shift and go to state 237
    type_specifier                 shift and go to state 26

state 210

    (23) class_body -> empty .
    (27) struct_body -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for ASYNC resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for FN resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for I8 resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for I16 resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for I32 resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for I64 resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for U8 resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for U16 resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for U32 resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for U64 resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for F32 resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for F64 resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for BOOL resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for STRING resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for POINTER resolved using rule 23 (class_body -> empty .)
  ! reduce/reduce conflict for REF resolved using rule 23 (class_body -> empty .)
    RBRACE          reduce using rule 23 (class_body -> empty .)
    ASYNC           reduce using rule 23 (class_body -> empty .)
    FN              reduce using rule 23 (class_body -> empty .)
    ID              reduce using rule 23 (class_body -> empty .)
    I8              reduce using rule 23 (class_body -> empty .)
    I16             reduce using rule 23 (class_body -> empty .)
    I32             reduce using rule 23 (class_body -> empty .)
    I64             reduce using rule 23 (class_body -> empty .)
    U8              reduce using rule 23 (class_body -> empty .)
    U16             reduce using rule 23 (class_body -> empty .)
    U32             reduce using rule 23 (class_body -> empty .)
    U64             reduce using rule 23 (class_body -> empty .)
    F32             reduce using rule 23 (class_body -> empty .)
    F64             reduce using rule 23 (class_body -> empty .)
    BOOL            reduce using rule 23 (class_body -> empty .)
    STRING          reduce using rule 23 (class_body -> empty .)
    POINTER         reduce using rule 23 (class_body -> empty .)
    REF             reduce using rule 23 (class_body -> empty .)

  ! RBRACE          [ reduce using rule 27 (struct_body -> empty .) ]
  ! ASYNC           [ reduce using rule 27 (struct_body -> empty .) ]
  ! FN              [ reduce using rule 27 (struct_body -> empty .) ]
  ! ID              [ reduce using rule 27 (struct_body -> empty .) ]
  ! I8              [ reduce using rule 27 (struct_body -> empty .) ]
  ! I16             [ reduce using rule 27 (struct_body -> empty .) ]
  ! I32             [ reduce using rule 27 (struct_body -> empty .) ]
  ! I64             [ reduce using rule 27 (struct_body -> empty .) ]
  ! U8              [ reduce using rule 27 (struct_body -> empty .) ]
  ! U16             [ reduce using rule 27 (struct_body -> empty .) ]
  ! U32             [ reduce using rule 27 (struct_body -> empty .) ]
  ! U64             [ reduce using rule 27 (struct_body -> empty .) ]
  ! F32             [ reduce using rule 27 (struct_body -> empty .) ]
  ! F64             [ reduce using rule 27 (struct_body -> empty .) ]
  ! BOOL            [ reduce using rule 27 (struct_body -> empty .) ]
  ! STRING          [ reduce using rule 27 (struct_body -> empty .) ]
  ! POINTER         [ reduce using rule 27 (struct_body -> empty .) ]
  ! REF             [ reduce using rule 27 (struct_body -> empty .) ]


state 211

    (139) enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .

    MATCH           reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    ID              reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    ASYNC           reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    FN              reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    CLASS           reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    ENUM            reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    NAMESPACE       reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    INTERFACE       reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    RETURN          reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    USE             reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    FOR             reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    IF              reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    WHILE           reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    TRUE            reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    FALSE           reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    INCREMENT       reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    DECREMENT       reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    NOT             reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    LPAREN          reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    AWAIT           reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    NUMBER          reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    REF             reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    POINTER         reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    error           reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    I8              reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    I16             reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    I32             reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    I64             reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    U8              reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    U16             reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    U32             reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    U64             reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    F32             reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    F64             reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    BOOL            reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    STRING          reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    $end            reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    RBRACE          reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)
    SEMI            reduce using rule 139 (enum_definition -> ENUM type_with_generics LBRACE enum_body RBRACE .)


state 212

    (34) enum_body -> enum_body enum_member .

    RBRACE          reduce using rule 34 (enum_body -> enum_body enum_member .)
    ID              reduce using rule 34 (enum_body -> enum_body enum_member .)


state 213

    (37) enum_member -> ID ASSIGN . NUMBER

    NUMBER          shift and go to state 238


state 214

    (134) variable -> type_specifier ID ASSIGN expression LPAREN . arg_list_opt RPAREN
    (76) arg_list_opt -> . arg_list
    (77) arg_list_opt -> . empty
    (78) arg_list -> . arg_list COMMA expression
    (79) arg_list -> . expression
    (80) arg_list -> . empty
    (111) empty -> .
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    RPAREN          reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    expression                     shift and go to state 138
    arg_list_opt                   shift and go to state 239
    arg_list                       shift and go to state 136
    empty                          shift and go to state 137

state 215

    (133) variable -> type_specifier ID ASSIGN NEW type_specifier . LPAREN arg_list_opt RPAREN

    LPAREN          shift and go to state 240


state 216

    (131) variable -> type_specifier ID LPAREN arg_list_opt RPAREN .

    SEMI            reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    MATCH           reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    ID              reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    ASYNC           reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    FN              reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    CLASS           reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    ENUM            reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    NAMESPACE       reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    INTERFACE       reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    RETURN          reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    USE             reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    FOR             reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    IF              reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    WHILE           reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    TRUE            reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    FALSE           reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    INCREMENT       reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    DECREMENT       reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    NOT             reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    LPAREN          reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    AWAIT           reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    NUMBER          reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    REF             reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    POINTER         reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    error           reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    I8              reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    I16             reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    I32             reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    I64             reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    U8              reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    U16             reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    U32             reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    U64             reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    F32             reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    F64             reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    BOOL            reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    STRING          reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    $end            reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)
    RBRACE          reduce using rule 131 (variable -> type_specifier ID LPAREN arg_list_opt RPAREN .)


state 217

    (132) variable -> type_specifier ID LBRACE arg_list_opt RBRACE .

    SEMI            reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    MATCH           reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    ID              reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    ASYNC           reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    FN              reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    CLASS           reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    ENUM            reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    NAMESPACE       reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    INTERFACE       reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    RETURN          reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    USE             reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    FOR             reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    IF              reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    WHILE           reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    TRUE            reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    FALSE           reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    INCREMENT       reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    DECREMENT       reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    NOT             reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    LPAREN          reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    AWAIT           reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    NUMBER          reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    REF             reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    POINTER         reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    error           reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    I8              reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    I16             reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    I32             reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    I64             reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    U8              reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    U16             reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    U32             reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    U64             reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    F32             reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    F64             reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    BOOL            reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    STRING          reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    $end            reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)
    RBRACE          reduce using rule 132 (variable -> type_specifier ID LBRACE arg_list_opt RBRACE .)


state 218

    (135) interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .

    MATCH           reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    ID              reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    ASYNC           reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    FN              reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    CLASS           reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    ENUM            reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    NAMESPACE       reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    INTERFACE       reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    RETURN          reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    USE             reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    FOR             reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    IF              reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    WHILE           reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    TRUE            reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    FALSE           reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    INCREMENT       reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    DECREMENT       reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    NOT             reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    LPAREN          reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    AWAIT           reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    NUMBER          reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    REF             reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    POINTER         reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    error           reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    I8              reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    I16             reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    I32             reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    I64             reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    U8              reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    U16             reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    U32             reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    U64             reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    F32             reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    F64             reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    BOOL            reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    STRING          reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    $end            reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    RBRACE          reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)
    SEMI            reduce using rule 135 (interface_definition -> INTERFACE type_with_generics LBRACE interface_body RBRACE .)


state 219

    (136) interface_body -> interface_body function_definition .

    RBRACE          reduce using rule 136 (interface_body -> interface_body function_definition .)
    ASYNC           reduce using rule 136 (interface_body -> interface_body function_definition .)
    FN              reduce using rule 136 (interface_body -> interface_body function_definition .)


state 220

    (66) for_block -> FOR ID IN expression block .

    ELSE            reduce using rule 66 (for_block -> FOR ID IN expression block .)
    MATCH           reduce using rule 66 (for_block -> FOR ID IN expression block .)
    ID              reduce using rule 66 (for_block -> FOR ID IN expression block .)
    ASYNC           reduce using rule 66 (for_block -> FOR ID IN expression block .)
    FN              reduce using rule 66 (for_block -> FOR ID IN expression block .)
    CLASS           reduce using rule 66 (for_block -> FOR ID IN expression block .)
    ENUM            reduce using rule 66 (for_block -> FOR ID IN expression block .)
    NAMESPACE       reduce using rule 66 (for_block -> FOR ID IN expression block .)
    INTERFACE       reduce using rule 66 (for_block -> FOR ID IN expression block .)
    RETURN          reduce using rule 66 (for_block -> FOR ID IN expression block .)
    USE             reduce using rule 66 (for_block -> FOR ID IN expression block .)
    FOR             reduce using rule 66 (for_block -> FOR ID IN expression block .)
    IF              reduce using rule 66 (for_block -> FOR ID IN expression block .)
    WHILE           reduce using rule 66 (for_block -> FOR ID IN expression block .)
    TRUE            reduce using rule 66 (for_block -> FOR ID IN expression block .)
    FALSE           reduce using rule 66 (for_block -> FOR ID IN expression block .)
    INCREMENT       reduce using rule 66 (for_block -> FOR ID IN expression block .)
    DECREMENT       reduce using rule 66 (for_block -> FOR ID IN expression block .)
    NOT             reduce using rule 66 (for_block -> FOR ID IN expression block .)
    LPAREN          reduce using rule 66 (for_block -> FOR ID IN expression block .)
    AWAIT           reduce using rule 66 (for_block -> FOR ID IN expression block .)
    NUMBER          reduce using rule 66 (for_block -> FOR ID IN expression block .)
    REF             reduce using rule 66 (for_block -> FOR ID IN expression block .)
    POINTER         reduce using rule 66 (for_block -> FOR ID IN expression block .)
    error           reduce using rule 66 (for_block -> FOR ID IN expression block .)
    I8              reduce using rule 66 (for_block -> FOR ID IN expression block .)
    I16             reduce using rule 66 (for_block -> FOR ID IN expression block .)
    I32             reduce using rule 66 (for_block -> FOR ID IN expression block .)
    I64             reduce using rule 66 (for_block -> FOR ID IN expression block .)
    U8              reduce using rule 66 (for_block -> FOR ID IN expression block .)
    U16             reduce using rule 66 (for_block -> FOR ID IN expression block .)
    U32             reduce using rule 66 (for_block -> FOR ID IN expression block .)
    U64             reduce using rule 66 (for_block -> FOR ID IN expression block .)
    F32             reduce using rule 66 (for_block -> FOR ID IN expression block .)
    F64             reduce using rule 66 (for_block -> FOR ID IN expression block .)
    BOOL            reduce using rule 66 (for_block -> FOR ID IN expression block .)
    STRING          reduce using rule 66 (for_block -> FOR ID IN expression block .)
    $end            reduce using rule 66 (for_block -> FOR ID IN expression block .)
    RBRACE          reduce using rule 66 (for_block -> FOR ID IN expression block .)
    SEMI            reduce using rule 66 (for_block -> FOR ID IN expression block .)


state 221

    (67) for_block -> FOR ID IN LPAREN expression . RPAREN block
    (74) expression -> LPAREN expression . RPAREN
    (28) expression -> expression . INCREMENT
    (29) expression -> expression . DECREMENT
    (56) expression -> expression . AND expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NEQ expression
    (60) expression -> expression . LTHEN expression
    (61) expression -> expression . RTHEN expression
    (62) expression -> expression . LEQ expression
    (63) expression -> expression . GEQ expression
    (69) expression -> expression . PLUS expression
    (70) expression -> expression . MINUS expression
    (71) expression -> expression . TIMES expression
    (72) expression -> expression . DIVIDE expression
    (73) expression -> expression . MOD expression

    RPAREN          shift and go to state 241
    INCREMENT       shift and go to state 68
    DECREMENT       shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    EQ              shift and go to state 72
    NEQ             shift and go to state 73
    LTHEN           shift and go to state 74
    RTHEN           shift and go to state 75
    LEQ             shift and go to state 76
    GEQ             shift and go to state 77
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 81
    MOD             shift and go to state 82


state 222

    (93) match_case -> pattern ARM program . SEMI
    (1) program -> program . statement
    (4) statement -> . function_definition
    (5) statement -> . class_definition
    (6) statement -> . struct_definition
    (7) statement -> . enum_definition
    (8) statement -> . namespace_definition
    (9) statement -> . variable SEMI
    (10) statement -> . interface_definition
    (11) statement -> . return_statement SEMI
    (12) statement -> . use_statement
    (65) statement -> . for_block
    (68) statement -> . for_block else_block
    (81) statement -> . if_block else_if_blocks else_block
    (82) statement -> . if_block else_if_blocks
    (83) statement -> . if_block else_block
    (84) statement -> . if_block
    (90) statement -> . MATCH expression LBRACE match_cases RBRACE
    (108) statement -> . while_block
    (110) statement -> . while_block else_block
    (125) statement -> . variable
    (126) statement -> . ID ASSIGN expression
    (127) statement -> . expression
    (106) function_definition -> . ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block
    (123) function_definition -> . FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block
    (124) class_definition -> . CLASS type_with_generics extends_opt LBRACE class_body RBRACE
    (138) struct_definition -> . CLASS type_with_generics extends_opt LBRACE struct_body RBRACE
    (139) enum_definition -> . ENUM type_with_generics LBRACE enum_body RBRACE
    (15) namespace_definition -> . NAMESPACE ID block
    (129) variable -> . type_specifier ID
    (130) variable -> . type_specifier ID ASSIGN expression
    (131) variable -> . type_specifier ID LPAREN arg_list_opt RPAREN
    (132) variable -> . type_specifier ID LBRACE arg_list_opt RBRACE
    (133) variable -> . type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN
    (134) variable -> . type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN
    (135) interface_definition -> . INTERFACE type_with_generics LBRACE interface_body RBRACE
    (16) return_statement -> . RETURN expression
    (105) use_statement -> . USE qualified_name SEMI
    (66) for_block -> . FOR ID IN expression block
    (67) for_block -> . FOR ID IN LPAREN expression RPAREN block
    (85) if_block -> . IF expression block
    (109) while_block -> . WHILE expression block
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    SEMI            shift and go to state 242
    MATCH           shift and go to state 15
    ID              shift and go to state 18
    ASYNC           shift and go to state 19
    FN              shift and go to state 20
    CLASS           shift and go to state 23
    ENUM            shift and go to state 24
    NAMESPACE       shift and go to state 25
    INTERFACE       shift and go to state 27
    RETURN          shift and go to state 28
    USE             shift and go to state 29
    FOR             shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 40
    POINTER         shift and go to state 41
    error           shift and go to state 42
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54

    statement                      shift and go to state 55
    function_definition            shift and go to state 4
    class_definition               shift and go to state 5
    struct_definition              shift and go to state 6
    enum_definition                shift and go to state 7
    namespace_definition           shift and go to state 8
    variable                       shift and go to state 9
    interface_definition           shift and go to state 10
    return_statement               shift and go to state 11
    use_statement                  shift and go to state 12
    for_block                      shift and go to state 13
    if_block                       shift and go to state 14
    expression                     shift and go to state 16
    while_block                    shift and go to state 17
    type_with_generics             shift and go to state 22
    type_specifier                 shift and go to state 26

state 223

    (100) tuple_pattern -> LPAREN pattern_list RPAREN .

    ARM             reduce using rule 100 (tuple_pattern -> LPAREN pattern_list RPAREN .)
    RPAREN          reduce using rule 100 (tuple_pattern -> LPAREN pattern_list RPAREN .)
    COMMA           reduce using rule 100 (tuple_pattern -> LPAREN pattern_list RPAREN .)


state 224

    (101) pattern_list -> pattern_list COMMA . pattern
    (94) pattern -> . simple_pattern
    (95) pattern -> . tuple_pattern
    (96) simple_pattern -> . ID
    (97) simple_pattern -> . NUMBER
    (98) simple_pattern -> . STRING
    (99) simple_pattern -> . UNDERSCORE
    (100) tuple_pattern -> . LPAREN pattern_list RPAREN

    ID              shift and go to state 166
    NUMBER          shift and go to state 167
    STRING          shift and go to state 168
    UNDERSCORE      shift and go to state 169
    LPAREN          shift and go to state 170

    pattern                        shift and go to state 243
    simple_pattern                 shift and go to state 164
    tuple_pattern                  shift and go to state 165

state 225

    (106) function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN . return_type_opt block
    (121) return_type_opt -> . ARROW type_specifier
    (122) return_type_opt -> . empty
    (111) empty -> .

    ARROW           shift and go to state 227
    LBRACE          reduce using rule 111 (empty -> .)

    return_type_opt                shift and go to state 244
    empty                          shift and go to state 228

state 226

    (123) function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt . block
    (17) block -> . LBRACE program RBRACE

    LBRACE          shift and go to state 115

    block                          shift and go to state 245

state 227

    (121) return_type_opt -> ARROW . type_specifier
    (40) type_specifier -> . ID
    (41) type_specifier -> . I8
    (42) type_specifier -> . I16
    (43) type_specifier -> . I32
    (44) type_specifier -> . I64
    (45) type_specifier -> . U8
    (46) type_specifier -> . U16
    (47) type_specifier -> . U32
    (48) type_specifier -> . U64
    (49) type_specifier -> . F32
    (50) type_specifier -> . F64
    (51) type_specifier -> . BOOL
    (52) type_specifier -> . STRING
    (53) type_specifier -> . type_with_generics
    (54) type_specifier -> . POINTER type_specifier
    (55) type_specifier -> . REF type_specifier
    (18) type_with_generics -> . ID LANGLE type_list RANGLE
    (19) type_with_generics -> . ID empty

    ID              shift and go to state 139
    I8              shift and go to state 43
    I16             shift and go to state 44
    I32             shift and go to state 45
    I64             shift and go to state 46
    U8              shift and go to state 47
    U16             shift and go to state 48
    U32             shift and go to state 49
    U64             shift and go to state 50
    F32             shift and go to state 51
    F64             shift and go to state 52
    BOOL            shift and go to state 53
    STRING          shift and go to state 54
    POINTER         shift and go to state 110
    REF             shift and go to state 107

    type_specifier                 shift and go to state 246
    type_with_generics             shift and go to state 22

state 228

    (122) return_type_opt -> empty .

    LBRACE          reduce using rule 122 (return_type_opt -> empty .)


state 229

    (118) parameters_list -> parameters_list COMMA parameter .

    COMMA           reduce using rule 118 (parameters_list -> parameters_list COMMA parameter .)
    RPAREN          reduce using rule 118 (parameters_list -> parameters_list COMMA parameter .)


state 230

    (124) class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .

    MATCH           reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    ID              reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    ASYNC           reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    FN              reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    CLASS           reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    ENUM            reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    NAMESPACE       reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    INTERFACE       reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    RETURN          reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    USE             reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    FOR             reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    IF              reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    WHILE           reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    TRUE            reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    FALSE           reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    INCREMENT       reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    DECREMENT       reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    NOT             reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    LPAREN          reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    AWAIT           reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    NUMBER          reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    REF             reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    POINTER         reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    error           reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    I8              reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    I16             reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    I32             reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    I64             reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    U8              reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    U16             reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    U32             reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    U64             reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    F32             reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    F64             reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    BOOL            reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    STRING          reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    $end            reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    RBRACE          reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)
    SEMI            reduce using rule 124 (class_definition -> CLASS type_with_generics extends_opt LBRACE class_body RBRACE .)


state 231

    (22) class_body -> class_body class_member .

    RBRACE          reduce using rule 22 (class_body -> class_body class_member .)
    ASYNC           reduce using rule 22 (class_body -> class_body class_member .)
    FN              reduce using rule 22 (class_body -> class_body class_member .)
    ID              reduce using rule 22 (class_body -> class_body class_member .)
    I8              reduce using rule 22 (class_body -> class_body class_member .)
    I16             reduce using rule 22 (class_body -> class_body class_member .)
    I32             reduce using rule 22 (class_body -> class_body class_member .)
    I64             reduce using rule 22 (class_body -> class_body class_member .)
    U8              reduce using rule 22 (class_body -> class_body class_member .)
    U16             reduce using rule 22 (class_body -> class_body class_member .)
    U32             reduce using rule 22 (class_body -> class_body class_member .)
    U64             reduce using rule 22 (class_body -> class_body class_member .)
    F32             reduce using rule 22 (class_body -> class_body class_member .)
    F64             reduce using rule 22 (class_body -> class_body class_member .)
    BOOL            reduce using rule 22 (class_body -> class_body class_member .)
    STRING          reduce using rule 22 (class_body -> class_body class_member .)
    POINTER         reduce using rule 22 (class_body -> class_body class_member .)
    REF             reduce using rule 22 (class_body -> class_body class_member .)


state 232

    (24) class_member -> variable . SEMI

    SEMI            shift and go to state 247


state 233

    (25) class_member -> function_definition .

    RBRACE          reduce using rule 25 (class_member -> function_definition .)
    ASYNC           reduce using rule 25 (class_member -> function_definition .)
    FN              reduce using rule 25 (class_member -> function_definition .)
    ID              reduce using rule 25 (class_member -> function_definition .)
    I8              reduce using rule 25 (class_member -> function_definition .)
    I16             reduce using rule 25 (class_member -> function_definition .)
    I32             reduce using rule 25 (class_member -> function_definition .)
    I64             reduce using rule 25 (class_member -> function_definition .)
    U8              reduce using rule 25 (class_member -> function_definition .)
    U16             reduce using rule 25 (class_member -> function_definition .)
    U32             reduce using rule 25 (class_member -> function_definition .)
    U64             reduce using rule 25 (class_member -> function_definition .)
    F32             reduce using rule 25 (class_member -> function_definition .)
    F64             reduce using rule 25 (class_member -> function_definition .)
    BOOL            reduce using rule 25 (class_member -> function_definition .)
    STRING          reduce using rule 25 (class_member -> function_definition .)
    POINTER         reduce using rule 25 (class_member -> function_definition .)
    REF             reduce using rule 25 (class_member -> function_definition .)


state 234

    (138) struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .

    MATCH           reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    ID              reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    ASYNC           reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    FN              reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    CLASS           reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    ENUM            reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    NAMESPACE       reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    INTERFACE       reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    RETURN          reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    USE             reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    FOR             reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    IF              reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    WHILE           reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    TRUE            reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    FALSE           reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    INCREMENT       reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    DECREMENT       reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    NOT             reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    LPAREN          reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    AWAIT           reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    NUMBER          reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    REF             reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    POINTER         reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    error           reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    I8              reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    I16             reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    I32             reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    I64             reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    U8              reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    U16             reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    U32             reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    U64             reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    F32             reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    F64             reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    BOOL            reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    STRING          reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    $end            reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    RBRACE          reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)
    SEMI            reduce using rule 138 (struct_definition -> CLASS type_with_generics extends_opt LBRACE struct_body RBRACE .)


state 235

    (26) struct_body -> struct_body struct_member .

    RBRACE          reduce using rule 26 (struct_body -> struct_body struct_member .)
    ASYNC           reduce using rule 26 (struct_body -> struct_body struct_member .)
    FN              reduce using rule 26 (struct_body -> struct_body struct_member .)
    ID              reduce using rule 26 (struct_body -> struct_body struct_member .)
    I8              reduce using rule 26 (struct_body -> struct_body struct_member .)
    I16             reduce using rule 26 (struct_body -> struct_body struct_member .)
    I32             reduce using rule 26 (struct_body -> struct_body struct_member .)
    I64             reduce using rule 26 (struct_body -> struct_body struct_member .)
    U8              reduce using rule 26 (struct_body -> struct_body struct_member .)
    U16             reduce using rule 26 (struct_body -> struct_body struct_member .)
    U32             reduce using rule 26 (struct_body -> struct_body struct_member .)
    U64             reduce using rule 26 (struct_body -> struct_body struct_member .)
    F32             reduce using rule 26 (struct_body -> struct_body struct_member .)
    F64             reduce using rule 26 (struct_body -> struct_body struct_member .)
    BOOL            reduce using rule 26 (struct_body -> struct_body struct_member .)
    STRING          reduce using rule 26 (struct_body -> struct_body struct_member .)
    POINTER         reduce using rule 26 (struct_body -> struct_body struct_member .)
    REF             reduce using rule 26 (struct_body -> struct_body struct_member .)


state 236

    (32) struct_member -> variable . SEMI

    SEMI            shift and go to state 248


state 237

    (33) struct_member -> function_definition .

    RBRACE          reduce using rule 33 (struct_member -> function_definition .)
    ASYNC           reduce using rule 33 (struct_member -> function_definition .)
    FN              reduce using rule 33 (struct_member -> function_definition .)
    ID              reduce using rule 33 (struct_member -> function_definition .)
    I8              reduce using rule 33 (struct_member -> function_definition .)
    I16             reduce using rule 33 (struct_member -> function_definition .)
    I32             reduce using rule 33 (struct_member -> function_definition .)
    I64             reduce using rule 33 (struct_member -> function_definition .)
    U8              reduce using rule 33 (struct_member -> function_definition .)
    U16             reduce using rule 33 (struct_member -> function_definition .)
    U32             reduce using rule 33 (struct_member -> function_definition .)
    U64             reduce using rule 33 (struct_member -> function_definition .)
    F32             reduce using rule 33 (struct_member -> function_definition .)
    F64             reduce using rule 33 (struct_member -> function_definition .)
    BOOL            reduce using rule 33 (struct_member -> function_definition .)
    STRING          reduce using rule 33 (struct_member -> function_definition .)
    POINTER         reduce using rule 33 (struct_member -> function_definition .)
    REF             reduce using rule 33 (struct_member -> function_definition .)


state 238

    (37) enum_member -> ID ASSIGN NUMBER .

    RBRACE          reduce using rule 37 (enum_member -> ID ASSIGN NUMBER .)
    ID              reduce using rule 37 (enum_member -> ID ASSIGN NUMBER .)


state 239

    (134) variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt . RPAREN

    RPAREN          shift and go to state 249


state 240

    (133) variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN . arg_list_opt RPAREN
    (76) arg_list_opt -> . arg_list
    (77) arg_list_opt -> . empty
    (78) arg_list -> . arg_list COMMA expression
    (79) arg_list -> . expression
    (80) arg_list -> . empty
    (111) empty -> .
    (13) expression -> . TRUE
    (14) expression -> . FALSE
    (28) expression -> . expression INCREMENT
    (29) expression -> . expression DECREMENT
    (30) expression -> . INCREMENT expression
    (31) expression -> . DECREMENT expression
    (56) expression -> . expression AND expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NEQ expression
    (60) expression -> . expression LTHEN expression
    (61) expression -> . expression RTHEN expression
    (62) expression -> . expression LEQ expression
    (63) expression -> . expression GEQ expression
    (64) expression -> . NOT expression
    (69) expression -> . expression PLUS expression
    (70) expression -> . expression MINUS expression
    (71) expression -> . expression TIMES expression
    (72) expression -> . expression DIVIDE expression
    (73) expression -> . expression MOD expression
    (74) expression -> . LPAREN expression RPAREN
    (75) expression -> . ID LPAREN arg_list_opt RPAREN
    (107) expression -> . AWAIT expression
    (112) expression -> . NUMBER
    (113) expression -> . ID
    (114) expression -> . REF ID
    (115) expression -> . POINTER expression
    (128) expression -> . error

    RPAREN          reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 21
    ID              shift and go to state 65
    AWAIT           shift and go to state 38
    NUMBER          shift and go to state 39
    REF             shift and go to state 66
    POINTER         shift and go to state 67
    error           shift and go to state 42

    arg_list_opt                   shift and go to state 250
    arg_list                       shift and go to state 136
    empty                          shift and go to state 137
    expression                     shift and go to state 138

state 241

    (67) for_block -> FOR ID IN LPAREN expression RPAREN . block
    (74) expression -> LPAREN expression RPAREN .
    (17) block -> . LBRACE program RBRACE

  ! shift/reduce conflict for LBRACE resolved as shift
    INCREMENT       reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    DECREMENT       reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    LTHEN           reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    RTHEN           reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 74 (expression -> LPAREN expression RPAREN .)
    LBRACE          shift and go to state 115

  ! LBRACE          [ reduce using rule 74 (expression -> LPAREN expression RPAREN .) ]

    block                          shift and go to state 251

state 242

    (93) match_case -> pattern ARM program SEMI .

    RBRACE          reduce using rule 93 (match_case -> pattern ARM program SEMI .)
    ID              reduce using rule 93 (match_case -> pattern ARM program SEMI .)
    NUMBER          reduce using rule 93 (match_case -> pattern ARM program SEMI .)
    STRING          reduce using rule 93 (match_case -> pattern ARM program SEMI .)
    UNDERSCORE      reduce using rule 93 (match_case -> pattern ARM program SEMI .)
    LPAREN          reduce using rule 93 (match_case -> pattern ARM program SEMI .)


state 243

    (101) pattern_list -> pattern_list COMMA pattern .

    RPAREN          reduce using rule 101 (pattern_list -> pattern_list COMMA pattern .)
    COMMA           reduce using rule 101 (pattern_list -> pattern_list COMMA pattern .)


state 244

    (106) function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt . block
    (17) block -> . LBRACE program RBRACE

    LBRACE          shift and go to state 115

    block                          shift and go to state 252

state 245

    (123) function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .

    MATCH           reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    ID              reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    ASYNC           reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    FN              reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    CLASS           reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    ENUM            reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    NAMESPACE       reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    INTERFACE       reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    RETURN          reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    USE             reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    FOR             reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    IF              reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    WHILE           reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    TRUE            reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    FALSE           reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    INCREMENT       reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    DECREMENT       reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    NOT             reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    LPAREN          reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    AWAIT           reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    NUMBER          reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    REF             reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    POINTER         reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    error           reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    I8              reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    I16             reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    I32             reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    I64             reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    U8              reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    U16             reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    U32             reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    U64             reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    F32             reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    F64             reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    BOOL            reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    STRING          reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    $end            reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    RBRACE          reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)
    SEMI            reduce using rule 123 (function_definition -> FN type_with_generics LPAREN parameters_opt RPAREN return_type_opt block .)


state 246

    (121) return_type_opt -> ARROW type_specifier .

    LBRACE          reduce using rule 121 (return_type_opt -> ARROW type_specifier .)


state 247

    (24) class_member -> variable SEMI .

    RBRACE          reduce using rule 24 (class_member -> variable SEMI .)
    ASYNC           reduce using rule 24 (class_member -> variable SEMI .)
    FN              reduce using rule 24 (class_member -> variable SEMI .)
    ID              reduce using rule 24 (class_member -> variable SEMI .)
    I8              reduce using rule 24 (class_member -> variable SEMI .)
    I16             reduce using rule 24 (class_member -> variable SEMI .)
    I32             reduce using rule 24 (class_member -> variable SEMI .)
    I64             reduce using rule 24 (class_member -> variable SEMI .)
    U8              reduce using rule 24 (class_member -> variable SEMI .)
    U16             reduce using rule 24 (class_member -> variable SEMI .)
    U32             reduce using rule 24 (class_member -> variable SEMI .)
    U64             reduce using rule 24 (class_member -> variable SEMI .)
    F32             reduce using rule 24 (class_member -> variable SEMI .)
    F64             reduce using rule 24 (class_member -> variable SEMI .)
    BOOL            reduce using rule 24 (class_member -> variable SEMI .)
    STRING          reduce using rule 24 (class_member -> variable SEMI .)
    POINTER         reduce using rule 24 (class_member -> variable SEMI .)
    REF             reduce using rule 24 (class_member -> variable SEMI .)


state 248

    (32) struct_member -> variable SEMI .

    RBRACE          reduce using rule 32 (struct_member -> variable SEMI .)
    ASYNC           reduce using rule 32 (struct_member -> variable SEMI .)
    FN              reduce using rule 32 (struct_member -> variable SEMI .)
    ID              reduce using rule 32 (struct_member -> variable SEMI .)
    I8              reduce using rule 32 (struct_member -> variable SEMI .)
    I16             reduce using rule 32 (struct_member -> variable SEMI .)
    I32             reduce using rule 32 (struct_member -> variable SEMI .)
    I64             reduce using rule 32 (struct_member -> variable SEMI .)
    U8              reduce using rule 32 (struct_member -> variable SEMI .)
    U16             reduce using rule 32 (struct_member -> variable SEMI .)
    U32             reduce using rule 32 (struct_member -> variable SEMI .)
    U64             reduce using rule 32 (struct_member -> variable SEMI .)
    F32             reduce using rule 32 (struct_member -> variable SEMI .)
    F64             reduce using rule 32 (struct_member -> variable SEMI .)
    BOOL            reduce using rule 32 (struct_member -> variable SEMI .)
    STRING          reduce using rule 32 (struct_member -> variable SEMI .)
    POINTER         reduce using rule 32 (struct_member -> variable SEMI .)
    REF             reduce using rule 32 (struct_member -> variable SEMI .)


state 249

    (134) variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .

    SEMI            reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    MATCH           reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    ID              reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    ASYNC           reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    FN              reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    CLASS           reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    ENUM            reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    NAMESPACE       reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    INTERFACE       reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    RETURN          reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    USE             reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    FOR             reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    IF              reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    WHILE           reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    TRUE            reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    FALSE           reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    INCREMENT       reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    DECREMENT       reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    NOT             reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    LPAREN          reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    AWAIT           reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    NUMBER          reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    REF             reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    POINTER         reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    error           reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    I8              reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    I16             reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    I32             reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    I64             reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    U8              reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    U16             reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    U32             reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    U64             reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    F32             reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    F64             reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    BOOL            reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    STRING          reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    $end            reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)
    RBRACE          reduce using rule 134 (variable -> type_specifier ID ASSIGN expression LPAREN arg_list_opt RPAREN .)


state 250

    (133) variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt . RPAREN

    RPAREN          shift and go to state 253


state 251

    (67) for_block -> FOR ID IN LPAREN expression RPAREN block .

    ELSE            reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    MATCH           reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    ID              reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    ASYNC           reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    FN              reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    CLASS           reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    ENUM            reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    NAMESPACE       reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    INTERFACE       reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    RETURN          reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    USE             reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    FOR             reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    IF              reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    WHILE           reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    TRUE            reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    FALSE           reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    INCREMENT       reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    DECREMENT       reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    NOT             reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    AWAIT           reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    REF             reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    POINTER         reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    error           reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    I8              reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    I16             reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    I32             reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    I64             reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    U8              reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    U16             reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    U32             reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    U64             reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    F32             reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    F64             reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    BOOL            reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    STRING          reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    $end            reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)
    SEMI            reduce using rule 67 (for_block -> FOR ID IN LPAREN expression RPAREN block .)


state 252

    (106) function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .

    MATCH           reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    ID              reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    ASYNC           reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    FN              reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    CLASS           reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    ENUM            reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    NAMESPACE       reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    INTERFACE       reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    RETURN          reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    USE             reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    FOR             reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    IF              reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    WHILE           reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    TRUE            reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    FALSE           reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    INCREMENT       reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    DECREMENT       reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    NOT             reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    LPAREN          reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    AWAIT           reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    NUMBER          reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    REF             reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    POINTER         reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    error           reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    I8              reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    I16             reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    I32             reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    I64             reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    U8              reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    U16             reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    U32             reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    U64             reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    F32             reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    F64             reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    BOOL            reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    STRING          reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    $end            reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    RBRACE          reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)
    SEMI            reduce using rule 106 (function_definition -> ASYNC FN ID LPAREN parameters_opt RPAREN return_type_opt block .)


state 253

    (133) variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .

    SEMI            reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    MATCH           reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    ID              reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    ASYNC           reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    FN              reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    CLASS           reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    ENUM            reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    NAMESPACE       reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    INTERFACE       reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    RETURN          reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    USE             reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    FOR             reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    IF              reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    WHILE           reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    TRUE            reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    FALSE           reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    INCREMENT       reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    DECREMENT       reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    NOT             reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    LPAREN          reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    AWAIT           reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    NUMBER          reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    REF             reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    POINTER         reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    error           reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    I8              reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    I16             reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    I32             reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    I64             reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    U8              reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    U16             reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    U32             reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    U64             reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    F32             reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    F64             reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    BOOL            reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    STRING          reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    $end            reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)
    RBRACE          reduce using rule 133 (variable -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MATCH in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for ASYNC in state 0 resolved as shift
WARNING: shift/reduce conflict for FN in state 0 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 0 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 0 resolved as shift
WARNING: shift/reduce conflict for NAMESPACE in state 0 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 0 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 0 resolved as shift
WARNING: shift/reduce conflict for USE in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 0 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 0 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 0 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 0 resolved as shift
WARNING: shift/reduce conflict for NOT in state 0 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 0 resolved as shift
WARNING: shift/reduce conflict for AWAIT in state 0 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 0 resolved as shift
WARNING: shift/reduce conflict for REF in state 0 resolved as shift
WARNING: shift/reduce conflict for POINTER in state 0 resolved as shift
WARNING: shift/reduce conflict for error in state 0 resolved as shift
WARNING: shift/reduce conflict for I8 in state 0 resolved as shift
WARNING: shift/reduce conflict for I16 in state 0 resolved as shift
WARNING: shift/reduce conflict for I32 in state 0 resolved as shift
WARNING: shift/reduce conflict for I64 in state 0 resolved as shift
WARNING: shift/reduce conflict for U8 in state 0 resolved as shift
WARNING: shift/reduce conflict for U16 in state 0 resolved as shift
WARNING: shift/reduce conflict for U32 in state 0 resolved as shift
WARNING: shift/reduce conflict for U64 in state 0 resolved as shift
WARNING: shift/reduce conflict for F32 in state 0 resolved as shift
WARNING: shift/reduce conflict for F64 in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 9 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 16 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 16 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 18 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 65 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 95 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 103 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 103 resolved as shift
WARNING: shift/reduce conflict for AND in state 103 resolved as shift
WARNING: shift/reduce conflict for OR in state 103 resolved as shift
WARNING: shift/reduce conflict for EQ in state 103 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 103 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 103 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 103 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 103 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 103 resolved as shift
WARNING: shift/reduce conflict for MOD in state 103 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 104 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 104 resolved as shift
WARNING: shift/reduce conflict for AND in state 104 resolved as shift
WARNING: shift/reduce conflict for OR in state 104 resolved as shift
WARNING: shift/reduce conflict for EQ in state 104 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 104 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 104 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 104 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 104 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 104 resolved as shift
WARNING: shift/reduce conflict for MOD in state 104 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 105 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 105 resolved as shift
WARNING: shift/reduce conflict for AND in state 105 resolved as shift
WARNING: shift/reduce conflict for OR in state 105 resolved as shift
WARNING: shift/reduce conflict for EQ in state 105 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 105 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 105 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 105 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 105 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 105 resolved as shift
WARNING: shift/reduce conflict for MOD in state 105 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 106 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 106 resolved as shift
WARNING: shift/reduce conflict for AND in state 106 resolved as shift
WARNING: shift/reduce conflict for OR in state 106 resolved as shift
WARNING: shift/reduce conflict for EQ in state 106 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 106 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 106 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 106 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 106 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 106 resolved as shift
WARNING: shift/reduce conflict for MOD in state 106 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 111 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 111 resolved as shift
WARNING: shift/reduce conflict for AND in state 111 resolved as shift
WARNING: shift/reduce conflict for OR in state 111 resolved as shift
WARNING: shift/reduce conflict for EQ in state 111 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 111 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 111 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 111 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 111 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 111 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 111 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 111 resolved as shift
WARNING: shift/reduce conflict for MOD in state 111 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 113 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 115 resolved as shift
WARNING: shift/reduce conflict for ID in state 115 resolved as shift
WARNING: shift/reduce conflict for ASYNC in state 115 resolved as shift
WARNING: shift/reduce conflict for FN in state 115 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 115 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 115 resolved as shift
WARNING: shift/reduce conflict for NAMESPACE in state 115 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 115 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 115 resolved as shift
WARNING: shift/reduce conflict for USE in state 115 resolved as shift
WARNING: shift/reduce conflict for FOR in state 115 resolved as shift
WARNING: shift/reduce conflict for IF in state 115 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 115 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 115 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 115 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 115 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 115 resolved as shift
WARNING: shift/reduce conflict for NOT in state 115 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 115 resolved as shift
WARNING: shift/reduce conflict for AWAIT in state 115 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 115 resolved as shift
WARNING: shift/reduce conflict for REF in state 115 resolved as shift
WARNING: shift/reduce conflict for POINTER in state 115 resolved as shift
WARNING: shift/reduce conflict for error in state 115 resolved as shift
WARNING: shift/reduce conflict for I8 in state 115 resolved as shift
WARNING: shift/reduce conflict for I16 in state 115 resolved as shift
WARNING: shift/reduce conflict for I32 in state 115 resolved as shift
WARNING: shift/reduce conflict for I64 in state 115 resolved as shift
WARNING: shift/reduce conflict for U8 in state 115 resolved as shift
WARNING: shift/reduce conflict for U16 in state 115 resolved as shift
WARNING: shift/reduce conflict for U32 in state 115 resolved as shift
WARNING: shift/reduce conflict for U64 in state 115 resolved as shift
WARNING: shift/reduce conflict for F32 in state 115 resolved as shift
WARNING: shift/reduce conflict for F64 in state 115 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 115 resolved as shift
WARNING: shift/reduce conflict for STRING in state 115 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 133 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 133 resolved as shift
WARNING: shift/reduce conflict for AND in state 133 resolved as shift
WARNING: shift/reduce conflict for OR in state 133 resolved as shift
WARNING: shift/reduce conflict for EQ in state 133 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 133 resolved as shift
WARNING: shift/reduce conflict for LTHEN in state 133 resolved as shift
WARNING: shift/reduce conflict for RTHEN in state 133 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 133 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 133 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 133 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 133 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 133 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 133 resolved as shift
WARNING: shift/reduce conflict for MOD in state 133 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 134 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 134 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 186 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 186 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 186 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 199 resolved as shift
WARNING: shift/reduce conflict for ID in state 199 resolved as shift
WARNING: shift/reduce conflict for ASYNC in state 199 resolved as shift
WARNING: shift/reduce conflict for FN in state 199 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 199 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 199 resolved as shift
WARNING: shift/reduce conflict for NAMESPACE in state 199 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 199 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 199 resolved as shift
WARNING: shift/reduce conflict for USE in state 199 resolved as shift
WARNING: shift/reduce conflict for FOR in state 199 resolved as shift
WARNING: shift/reduce conflict for IF in state 199 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 199 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 199 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 199 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 199 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 199 resolved as shift
WARNING: shift/reduce conflict for NOT in state 199 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 199 resolved as shift
WARNING: shift/reduce conflict for AWAIT in state 199 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 199 resolved as shift
WARNING: shift/reduce conflict for REF in state 199 resolved as shift
WARNING: shift/reduce conflict for POINTER in state 199 resolved as shift
WARNING: shift/reduce conflict for error in state 199 resolved as shift
WARNING: shift/reduce conflict for I8 in state 199 resolved as shift
WARNING: shift/reduce conflict for I16 in state 199 resolved as shift
WARNING: shift/reduce conflict for I32 in state 199 resolved as shift
WARNING: shift/reduce conflict for I64 in state 199 resolved as shift
WARNING: shift/reduce conflict for U8 in state 199 resolved as shift
WARNING: shift/reduce conflict for U16 in state 199 resolved as shift
WARNING: shift/reduce conflict for U32 in state 199 resolved as shift
WARNING: shift/reduce conflict for U64 in state 199 resolved as shift
WARNING: shift/reduce conflict for F32 in state 199 resolved as shift
WARNING: shift/reduce conflict for F64 in state 199 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 199 resolved as shift
WARNING: shift/reduce conflict for STRING in state 199 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 241 resolved as shift
WARNING: reduce/reduce conflict in state 18 resolved using rule (type_specifier -> ID)
WARNING: rejected rule (expression -> ID) in state 18
WARNING: reduce/reduce conflict in state 18 resolved using rule (type_specifier -> ID)
WARNING: rejected rule (empty -> <empty>) in state 18
WARNING: reduce/reduce conflict in state 108 resolved using rule (type_specifier -> ID)
WARNING: rejected rule (expression -> REF ID) in state 108
WARNING: reduce/reduce conflict in state 108 resolved using rule (type_specifier -> ID)
WARNING: rejected rule (empty -> <empty>) in state 108
WARNING: reduce/reduce conflict in state 113 resolved using rule (type_specifier -> ID)
WARNING: rejected rule (expression -> ID) in state 113
WARNING: reduce/reduce conflict in state 113 resolved using rule (type_specifier -> ID)
WARNING: rejected rule (empty -> <empty>) in state 113
WARNING: reduce/reduce conflict in state 137 resolved using rule (arg_list_opt -> empty)
WARNING: rejected rule (arg_list -> empty) in state 137
WARNING: reduce/reduce conflict in state 139 resolved using rule (type_specifier -> ID)
WARNING: rejected rule (empty -> <empty>) in state 139
WARNING: reduce/reduce conflict in state 210 resolved using rule (class_body -> empty)
WARNING: rejected rule (struct_body -> empty) in state 210
WARNING: Rule (struct_body -> empty) is never reduced
