
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ANALYZE AND ARM ARROW ASSIGN AT BREAK CATCH CLASS COMMA CONST CONTINUE COPY DEFER DELETE DIVIDE ELSE ENUM EQ EXPORT EXTENDS FALSE FINALLY FN FOR GEQ ID IF IN INTERFACE LANGLE LBRACE LBRACKET LEQ LPAREN LTHEN MACRO MATCH MINUS MOD MOVE NAMESPACE NEQ NEW NUMBER OPERATOR OR OVERRIDE PLUS POINTER PRIV PUB RANGE RANGE_INCLUSIVE RANGLE RBRACE RBRACKET REF REFERENCE RETURN RPAREN RTHEN SEMI STATIC STRING STRUCT TIMES TRUE TRY UNSAFE USE VAR WHILEprogram : program statement\n               | statementstatement : function_definition\n                 | class_definition\n                 | struct_definition\n                 | enum_definition\n                 | namespace_definition\n                 | variable_declaration SEMI\n                 | interface_definition\n                 | return_statement SEMInamespace_definition : NAMESPACE ID LBRACE program RBRACE\n                            | NAMESPACE ID LBRACE RBRACEreturn_statement : RETURN expressiongenerics_opt : LANGLE generics_list RANGLE\n                    | emptygenerics_list : generics_list COMMA ID\n                     | IDclass_body : class_body class_member\n                  | emptyclass_member : variable_declaration SEMI\n                    | function_definitionstruct_body : struct_body struct_member\n                   | emptystruct_member : variable_declaration SEMI\n                     | function_definitionenum_body : enum_body enum_member\n                 | enum_memberenum_member : ID\n                   | ID ASSIGN NUMBERextends_opt : EXTENDS ID generics_opt\n                   | emptytype_specifier : ID\n                      | POINTER type_specifier\n                      | REF type_specifierexpression : expression AND expression\n                  | expression OR expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression LTHEN expression\n                  | expression RTHEN expression\n                  | expression LEQ expression\n                  | expression GEQ expressionstatement : FOR ID IN expression RANGE expression LBRACE program RBRACEexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MOD expressionexpression : LPAREN expression RPARENexpression : ID LPAREN arg_list_opt RPARENarg_list_opt : arg_list\n                    | emptyarg_list : arg_list COMMA expression\n                | expression\n                | emptystatement : IF LPAREN expression RPAREN LBRACE program RBRACE\n                 | IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACEstatement : WHILE LPAREN expression RPAREN LBRACE program RBRACEempty :expression : NUMBER\n                  | IDexpression : REF IDexpression : POINTER expressionparameters_opt : parameters_list\n                      | emptyparameters_list : parameters_list COMMA parameter\n                       | parameterparameter : type_specifier IDreturn_type_opt : ARROW type_specifier\n                       | emptyfunction_definition : FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACEclass_definition : CLASS ID generics_opt extends_opt LBRACE class_body RBRACEstatement : variable_declaration expression : errorvariable_declaration : type_specifier ID LPAREN arg_list_opt RPAREN SEMI\n                            | type_specifier ID SEMI\n                            | type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI\n                            | type_specifier ID LBRACE arg_list_opt RBRACE SEMI\n                            | type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMIinterface_definition : INTERFACE ID generics_opt LBRACE interface_body RBRACEinterface_body : interface_body function_definition\n                      | emptystruct_definition : CLASS ID generics_opt extends_opt LBRACE struct_body RBRACEenum_definition : ENUM ID generics_opt LBRACE enum_body RBRACE'
    
_lr_action_items = {'FOR':([0,1,2,3,4,5,6,7,8,9,24,25,26,55,57,88,89,114,115,127,137,138,147,149,153,154,156,157,158,163,167,174,176,180,182,183,184,185,186,187,188,],[11,11,-2,-3,-4,-5,-6,-7,-73,-9,-1,-8,-10,11,-76,11,-12,11,11,-11,11,11,-84,-75,-78,-80,11,-56,-58,-72,-83,11,11,-77,-43,11,11,-79,11,-71,-57,]),'IF':([0,1,2,3,4,5,6,7,8,9,24,25,26,55,57,88,89,114,115,127,137,138,147,149,153,154,156,157,158,163,167,174,176,180,182,183,184,185,186,187,188,],[13,13,-2,-3,-4,-5,-6,-7,-73,-9,-1,-8,-10,13,-76,13,-12,13,13,-11,13,13,-84,-75,-78,-80,13,-56,-58,-72,-83,13,13,-77,-43,13,13,-79,13,-71,-57,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,24,25,26,55,57,88,89,114,115,127,137,138,147,149,153,154,156,157,158,163,167,174,176,180,182,183,184,185,186,187,188,],[14,14,-2,-3,-4,-5,-6,-7,-73,-9,-1,-8,-10,14,-76,14,-12,14,14,-11,14,14,-84,-75,-78,-80,14,-56,-58,-72,-83,14,14,-77,-43,14,14,-79,14,-71,-57,]),'FN':([0,1,2,3,4,5,6,7,8,9,24,25,26,55,57,88,89,97,114,115,122,127,133,134,137,138,142,143,144,147,149,153,154,155,156,157,158,163,164,166,167,168,170,174,176,178,179,180,182,183,184,185,186,187,188,],[15,15,-2,-3,-4,-5,-6,-7,-73,-9,-1,-8,-10,15,-76,15,-12,-59,15,15,-59,-11,15,-82,15,15,15,15,-19,-84,-75,-78,-80,-81,15,-56,-58,-72,-18,-21,-83,-22,-25,15,15,-20,-24,-77,-43,15,15,-79,15,-71,-57,]),'CLASS':([0,1,2,3,4,5,6,7,8,9,24,25,26,55,57,88,89,114,115,127,137,138,147,149,153,154,156,157,158,163,167,174,176,180,182,183,184,185,186,187,188,],[16,16,-2,-3,-4,-5,-6,-7,-73,-9,-1,-8,-10,16,-76,16,-12,16,16,-11,16,16,-84,-75,-78,-80,16,-56,-58,-72,-83,16,16,-77,-43,16,16,-79,16,-71,-57,]),'ENUM':([0,1,2,3,4,5,6,7,8,9,24,25,26,55,57,88,89,114,115,127,137,138,147,149,153,154,156,157,158,163,167,174,176,180,182,183,184,185,186,187,188,],[17,17,-2,-3,-4,-5,-6,-7,-73,-9,-1,-8,-10,17,-76,17,-12,17,17,-11,17,17,-84,-75,-78,-80,17,-56,-58,-72,-83,17,17,-77,-43,17,17,-79,17,-71,-57,]),'NAMESPACE':([0,1,2,3,4,5,6,7,8,9,24,25,26,55,57,88,89,114,115,127,137,138,147,149,153,154,156,157,158,163,167,174,176,180,182,183,184,185,186,187,188,],[18,18,-2,-3,-4,-5,-6,-7,-73,-9,-1,-8,-10,18,-76,18,-12,18,18,-11,18,18,-84,-75,-78,-80,18,-56,-58,-72,-83,18,18,-77,-43,18,18,-79,18,-71,-57,]),'INTERFACE':([0,1,2,3,4,5,6,7,8,9,24,25,26,55,57,88,89,114,115,127,137,138,147,149,153,154,156,157,158,163,167,174,176,180,182,183,184,185,186,187,188,],[20,20,-2,-3,-4,-5,-6,-7,-73,-9,-1,-8,-10,20,-76,20,-12,20,20,-11,20,20,-84,-75,-78,-80,20,-56,-58,-72,-83,20,20,-77,-43,20,20,-79,20,-71,-57,]),'RETURN':([0,1,2,3,4,5,6,7,8,9,24,25,26,55,57,88,89,114,115,127,137,138,147,149,153,154,156,157,158,163,167,174,176,180,182,183,184,185,186,187,188,],[21,21,-2,-3,-4,-5,-6,-7,-73,-9,-1,-8,-10,21,-76,21,-12,21,21,-11,21,21,-84,-75,-78,-80,21,-56,-58,-72,-83,21,21,-77,-43,21,21,-79,21,-71,-57,]),'ID':([0,1,2,3,4,5,6,7,8,9,11,12,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,39,42,43,45,46,47,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,81,82,83,85,87,88,89,95,113,114,115,120,122,124,125,126,127,129,130,137,138,140,142,143,144,147,148,149,152,153,154,156,157,158,160,163,164,166,167,168,170,171,174,176,178,179,180,182,183,184,185,186,187,188,],[12,12,-2,-3,-4,-5,-6,-7,-73,-9,27,-32,-59,33,34,35,36,37,40,12,12,-1,-8,-10,40,40,50,52,-15,40,76,40,-33,-34,40,12,40,-76,12,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,12,-14,121,123,124,12,-12,12,40,12,12,141,-59,-28,124,-27,-11,40,40,12,12,12,12,12,-19,-84,-26,-75,40,-78,-80,12,-56,-58,12,-72,-18,-21,-83,-22,-25,-29,12,12,-20,-24,-77,-43,12,12,-79,12,-71,-57,]),'POINTER':([0,1,2,3,4,5,6,7,8,9,21,22,23,24,25,26,28,29,39,43,47,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,81,88,89,95,113,114,115,122,127,129,130,137,138,140,142,143,144,147,149,152,153,154,156,157,158,160,163,164,166,167,168,170,174,176,178,179,180,182,183,184,185,186,187,188,],[22,22,-2,-3,-4,-5,-6,-7,-73,-9,43,22,22,-1,-8,-10,43,43,43,43,43,22,43,-76,22,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,22,22,-12,22,43,22,22,-59,-11,43,43,22,22,22,22,22,-19,-84,-75,43,-78,-80,22,-56,-58,22,-72,-18,-21,-83,-22,-25,22,22,-20,-24,-77,-43,22,22,-79,22,-71,-57,]),'REF':([0,1,2,3,4,5,6,7,8,9,21,22,23,24,25,26,28,29,39,43,47,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,81,88,89,95,113,114,115,122,127,129,130,137,138,140,142,143,144,147,149,152,153,154,156,157,158,160,163,164,166,167,168,170,174,176,178,179,180,182,183,184,185,186,187,188,],[23,23,-2,-3,-4,-5,-6,-7,-73,-9,42,23,23,-1,-8,-10,42,42,42,42,42,23,42,-76,23,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,23,23,-12,23,42,23,23,-59,-11,42,42,23,23,23,23,23,-19,-84,-75,42,-78,-80,23,-56,-58,23,-72,-18,-21,-83,-22,-25,23,23,-20,-24,-77,-43,23,23,-79,23,-71,-57,]),'$end':([1,2,3,4,5,6,7,8,9,24,25,26,57,89,127,147,149,153,154,157,158,163,167,180,182,185,187,188,],[0,-2,-3,-4,-5,-6,-7,-73,-9,-1,-8,-10,-76,-12,-11,-84,-75,-78,-80,-56,-58,-72,-83,-77,-43,-79,-71,-57,]),'RBRACE':([2,3,4,5,6,7,8,9,24,25,26,40,41,44,55,57,59,76,77,88,89,91,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,122,124,125,126,127,133,134,135,137,138,142,143,144,147,148,149,150,153,154,155,157,158,163,164,166,167,168,170,171,174,178,179,180,182,184,185,186,187,188,],[-2,-3,-4,-5,-6,-7,-73,-9,-1,-8,-10,-61,-60,-74,89,-76,-59,-62,-63,127,-12,-51,-52,-54,132,-59,-35,-36,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-59,-28,147,-27,-11,154,-82,-50,157,158,163,167,-19,-84,-26,-75,-53,-78,-80,-81,-56,-58,-72,-18,-21,-83,-22,-25,-29,182,-20,-24,-77,-43,187,-79,188,-71,-57,]),'SEMI':([8,10,36,38,40,41,44,57,76,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,132,135,149,153,165,169,172,180,181,185,],[25,26,57,-13,-61,-60,-74,-76,-62,-63,-35,-36,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,149,153,-50,-75,-78,178,179,180,-77,185,-79,]),'LPAREN':([12,13,14,21,28,29,36,39,40,43,45,46,47,50,56,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,94,113,129,130,131,152,],[-32,28,29,39,39,39,56,39,75,39,-33,-34,39,81,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,130,39,39,39,152,39,]),'LBRACE':([12,32,33,34,35,36,37,40,41,44,45,46,53,54,60,76,77,79,80,82,84,86,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,135,136,139,145,159,161,175,177,],[-32,-15,-59,-59,55,59,-59,-61,-60,-74,-33,-34,-59,87,97,-62,-63,114,115,-14,122,-31,-35,-36,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-59,-50,156,-59,-30,176,-70,183,-69,]),'LANGLE':([15,33,34,37,123,],[31,31,31,31,31,]),'NUMBER':([21,28,29,39,43,47,56,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,113,129,130,146,152,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,171,41,]),'error':([21,28,29,39,43,47,56,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,113,129,130,152,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'IN':([27,],[47,]),'EXTENDS':([32,33,53,82,],[-15,-59,85,-14,]),'ASSIGN':([36,124,],[58,146,]),'AND':([38,40,41,44,48,49,74,76,77,78,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,135,136,150,],[61,-61,-60,-74,61,61,61,-62,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-49,-50,61,61,]),'OR':([38,40,41,44,48,49,74,76,77,78,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,135,136,150,],[62,-61,-60,-74,62,62,62,-62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-49,-50,62,62,]),'EQ':([38,40,41,44,48,49,74,76,77,78,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,135,136,150,],[63,-61,-60,-74,63,63,63,-62,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-49,-50,63,63,]),'NEQ':([38,40,41,44,48,49,74,76,77,78,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,135,136,150,],[64,-61,-60,-74,64,64,64,-62,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-49,-50,64,64,]),'LTHEN':([38,40,41,44,48,49,74,76,77,78,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,135,136,150,],[65,-61,-60,-74,65,65,65,-62,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-49,-50,65,65,]),'RTHEN':([38,40,41,44,48,49,74,76,77,78,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,135,136,150,],[66,-61,-60,-74,66,66,66,-62,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-49,-50,66,66,]),'LEQ':([38,40,41,44,48,49,74,76,77,78,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,135,136,150,],[67,-61,-60,-74,67,67,67,-62,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-49,-50,67,67,]),'GEQ':([38,40,41,44,48,49,74,76,77,78,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,135,136,150,],[68,-61,-60,-74,68,68,68,-62,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-49,-50,68,68,]),'PLUS':([38,40,41,44,48,49,74,76,77,78,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,135,136,150,],[69,-61,-60,-74,69,69,69,-62,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-49,-50,69,69,]),'MINUS':([38,40,41,44,48,49,74,76,77,78,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,135,136,150,],[70,-61,-60,-74,70,70,70,-62,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-49,-50,70,70,]),'TIMES':([38,40,41,44,48,49,74,76,77,78,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,135,136,150,],[71,-61,-60,-74,71,71,71,-62,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-49,-50,71,71,]),'DIVIDE':([38,40,41,44,48,49,74,76,77,78,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,135,136,150,],[72,-61,-60,-74,72,72,72,-62,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-49,-50,72,72,]),'MOD':([38,40,41,44,48,49,74,76,77,78,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,135,136,150,],[73,-61,-60,-74,73,73,73,-62,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-49,-50,73,73,]),'RPAREN':([40,41,44,48,49,56,74,75,76,77,81,90,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,116,117,118,119,130,135,141,150,151,152,162,173,],[-61,-60,-74,79,80,-59,111,-59,-62,-63,-59,128,-51,-52,-54,-35,-36,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,135,139,-64,-65,-67,-59,-50,-68,-53,172,-59,-66,181,]),'RANGE':([40,41,44,76,77,78,98,99,100,101,102,103,104,105,106,107,108,109,110,111,135,],[-61,-60,-74,-62,-63,113,-35,-36,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,]),'COMMA':([40,41,44,51,52,56,59,75,76,77,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,117,119,121,130,135,141,150,152,162,],[-61,-60,-74,83,-17,-59,-59,-59,-62,-63,129,-55,-54,-35,-36,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,140,-67,-16,-59,-50,-68,-53,-59,-66,]),'RANGLE':([51,52,121,],[82,-17,-16,]),'NEW':([58,],[95,]),'ARROW':([139,],[160,]),'ELSE':([157,],[175,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,55,114,115,156,176,183,],[1,88,137,138,174,184,186,]),'statement':([0,1,55,88,114,115,137,138,156,174,176,183,184,186,],[2,24,2,24,2,2,24,24,2,24,2,2,24,24,]),'function_definition':([0,1,55,88,114,115,133,137,138,142,143,156,174,176,183,184,186,],[3,3,3,3,3,3,155,3,3,166,170,3,3,3,3,3,3,]),'class_definition':([0,1,55,88,114,115,137,138,156,174,176,183,184,186,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'struct_definition':([0,1,55,88,114,115,137,138,156,174,176,183,184,186,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'enum_definition':([0,1,55,88,114,115,137,138,156,174,176,183,184,186,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'namespace_definition':([0,1,55,88,114,115,137,138,156,174,176,183,184,186,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'variable_declaration':([0,1,55,88,114,115,137,138,142,143,156,174,176,183,184,186,],[8,8,8,8,8,8,8,8,165,169,8,8,8,8,8,8,]),'interface_definition':([0,1,55,88,114,115,137,138,156,174,176,183,184,186,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'return_statement':([0,1,55,88,114,115,137,138,156,174,176,183,184,186,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'type_specifier':([0,1,22,23,55,58,81,88,95,114,115,137,138,140,142,143,156,160,174,176,183,184,186,],[19,19,45,46,19,94,120,19,131,19,19,19,19,120,19,19,19,177,19,19,19,19,19,]),'generics_opt':([15,33,34,37,123,],[30,53,54,60,145,]),'empty':([15,33,34,37,53,56,59,75,81,97,122,123,130,139,152,],[32,32,32,32,86,92,92,92,118,134,144,32,92,161,92,]),'expression':([21,28,29,39,43,47,56,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,113,129,130,152,],[38,48,49,74,77,78,93,93,98,99,100,101,102,103,104,105,106,107,108,109,110,93,136,150,93,93,]),'generics_list':([31,],[51,]),'extends_opt':([53,],[84,]),'arg_list_opt':([56,59,75,130,152,],[90,96,112,151,173,]),'arg_list':([56,59,75,130,152,],[91,91,91,91,91,]),'parameters_opt':([81,],[116,]),'parameters_list':([81,],[117,]),'parameter':([81,140,],[119,162,]),'enum_body':([87,],[125,]),'enum_member':([87,125,],[126,148,]),'interface_body':([97,],[133,]),'class_body':([122,],[142,]),'struct_body':([122,],[143,]),'return_type_opt':([139,],[159,]),'class_member':([142,],[164,]),'struct_member':([143,],[168,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program statement','program',2,'p_program','main.py',101),
  ('program -> statement','program',1,'p_program','main.py',102),
  ('statement -> function_definition','statement',1,'p_statement','main.py',109),
  ('statement -> class_definition','statement',1,'p_statement','main.py',110),
  ('statement -> struct_definition','statement',1,'p_statement','main.py',111),
  ('statement -> enum_definition','statement',1,'p_statement','main.py',112),
  ('statement -> namespace_definition','statement',1,'p_statement','main.py',113),
  ('statement -> variable_declaration SEMI','statement',2,'p_statement','main.py',114),
  ('statement -> interface_definition','statement',1,'p_statement','main.py',115),
  ('statement -> return_statement SEMI','statement',2,'p_statement','main.py',116),
  ('namespace_definition -> NAMESPACE ID LBRACE program RBRACE','namespace_definition',5,'p_namespace_definition','main.py',120),
  ('namespace_definition -> NAMESPACE ID LBRACE RBRACE','namespace_definition',4,'p_namespace_definition','main.py',121),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','main.py',125),
  ('generics_opt -> LANGLE generics_list RANGLE','generics_opt',3,'p_generics_opt','main.py',130),
  ('generics_opt -> empty','generics_opt',1,'p_generics_opt','main.py',131),
  ('generics_list -> generics_list COMMA ID','generics_list',3,'p_generics_list','main.py',138),
  ('generics_list -> ID','generics_list',1,'p_generics_list','main.py',139),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','main.py',147),
  ('class_body -> empty','class_body',1,'p_class_body','main.py',148),
  ('class_member -> variable_declaration SEMI','class_member',2,'p_class_member','main.py',155),
  ('class_member -> function_definition','class_member',1,'p_class_member','main.py',156),
  ('struct_body -> struct_body struct_member','struct_body',2,'p_struct_body','main.py',162),
  ('struct_body -> empty','struct_body',1,'p_struct_body','main.py',163),
  ('struct_member -> variable_declaration SEMI','struct_member',2,'p_struct_member','main.py',170),
  ('struct_member -> function_definition','struct_member',1,'p_struct_member','main.py',171),
  ('enum_body -> enum_body enum_member','enum_body',2,'p_enum_body','main.py',175),
  ('enum_body -> enum_member','enum_body',1,'p_enum_body','main.py',176),
  ('enum_member -> ID','enum_member',1,'p_enum_member','main.py',183),
  ('enum_member -> ID ASSIGN NUMBER','enum_member',3,'p_enum_member','main.py',184),
  ('extends_opt -> EXTENDS ID generics_opt','extends_opt',3,'p_extends_opt','main.py',192),
  ('extends_opt -> empty','extends_opt',1,'p_extends_opt','main.py',193),
  ('type_specifier -> ID','type_specifier',1,'p_type_specifier','main.py',200),
  ('type_specifier -> POINTER type_specifier','type_specifier',2,'p_type_specifier','main.py',201),
  ('type_specifier -> REF type_specifier','type_specifier',2,'p_type_specifier','main.py',202),
  ('expression -> expression AND expression','expression',3,'p_expression_boolean','main.py',211),
  ('expression -> expression OR expression','expression',3,'p_expression_boolean','main.py',212),
  ('expression -> expression EQ expression','expression',3,'p_expression_boolean','main.py',213),
  ('expression -> expression NEQ expression','expression',3,'p_expression_boolean','main.py',214),
  ('expression -> expression LTHEN expression','expression',3,'p_expression_boolean','main.py',215),
  ('expression -> expression RTHEN expression','expression',3,'p_expression_boolean','main.py',216),
  ('expression -> expression LEQ expression','expression',3,'p_expression_boolean','main.py',217),
  ('expression -> expression GEQ expression','expression',3,'p_expression_boolean','main.py',218),
  ('statement -> FOR ID IN expression RANGE expression LBRACE program RBRACE','statement',9,'p_for_loop','main.py',222),
  ('expression -> expression PLUS expression','expression',3,'p_expression_arith','main.py',226),
  ('expression -> expression MINUS expression','expression',3,'p_expression_arith','main.py',227),
  ('expression -> expression TIMES expression','expression',3,'p_expression_arith','main.py',228),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_arith','main.py',229),
  ('expression -> expression MOD expression','expression',3,'p_expression_arith','main.py',230),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','main.py',234),
  ('expression -> ID LPAREN arg_list_opt RPAREN','expression',4,'p_function_call','main.py',239),
  ('arg_list_opt -> arg_list','arg_list_opt',1,'p_arg_list_opt','main.py',243),
  ('arg_list_opt -> empty','arg_list_opt',1,'p_arg_list_opt','main.py',244),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','main.py',248),
  ('arg_list -> expression','arg_list',1,'p_arg_list','main.py',249),
  ('arg_list -> empty','arg_list',1,'p_arg_list','main.py',250),
  ('statement -> IF LPAREN expression RPAREN LBRACE program RBRACE','statement',7,'p_conditional_statement','main.py',260),
  ('statement -> IF LPAREN expression RPAREN LBRACE program RBRACE ELSE LBRACE program RBRACE','statement',11,'p_conditional_statement','main.py',261),
  ('statement -> WHILE LPAREN expression RPAREN LBRACE program RBRACE','statement',7,'p_while_loop','main.py',268),
  ('empty -> <empty>','empty',0,'p_empty','main.py',273),
  ('expression -> NUMBER','expression',1,'p_expression','main.py',278),
  ('expression -> ID','expression',1,'p_expression','main.py',279),
  ('expression -> REF ID','expression',2,'p_expression_reference','main.py',283),
  ('expression -> POINTER expression','expression',2,'p_expression_dereference','main.py',287),
  ('parameters_opt -> parameters_list','parameters_opt',1,'p_parameters_opt','main.py',291),
  ('parameters_opt -> empty','parameters_opt',1,'p_parameters_opt','main.py',292),
  ('parameters_list -> parameters_list COMMA parameter','parameters_list',3,'p_parameters_list','main.py',296),
  ('parameters_list -> parameter','parameters_list',1,'p_parameters_list','main.py',297),
  ('parameter -> type_specifier ID','parameter',2,'p_parameter','main.py',304),
  ('return_type_opt -> ARROW type_specifier','return_type_opt',2,'p_return_type_opt','main.py',308),
  ('return_type_opt -> empty','return_type_opt',1,'p_return_type_opt','main.py',309),
  ('function_definition -> FN generics_opt ID LPAREN parameters_opt RPAREN return_type_opt LBRACE program RBRACE','function_definition',10,'p_function_definition','main.py',316),
  ('class_definition -> CLASS ID generics_opt extends_opt LBRACE class_body RBRACE','class_definition',7,'p_class_definition','main.py',320),
  ('statement -> variable_declaration','statement',1,'p_statement_error','main.py',330),
  ('expression -> error','expression',1,'p_expression_error','main.py',335),
  ('variable_declaration -> type_specifier ID LPAREN arg_list_opt RPAREN SEMI','variable_declaration',6,'p_variable_declaration','main.py',344),
  ('variable_declaration -> type_specifier ID SEMI','variable_declaration',3,'p_variable_declaration','main.py',345),
  ('variable_declaration -> type_specifier ID ASSIGN type_specifier LPAREN arg_list_opt RPAREN SEMI','variable_declaration',8,'p_variable_declaration','main.py',346),
  ('variable_declaration -> type_specifier ID LBRACE arg_list_opt RBRACE SEMI','variable_declaration',6,'p_variable_declaration','main.py',347),
  ('variable_declaration -> type_specifier ID ASSIGN NEW type_specifier LPAREN arg_list_opt RPAREN SEMI','variable_declaration',9,'p_variable_declaration','main.py',348),
  ('interface_definition -> INTERFACE ID generics_opt LBRACE interface_body RBRACE','interface_definition',6,'p_interface_definition','main.py',360),
  ('interface_body -> interface_body function_definition','interface_body',2,'p_interface_body','main.py',364),
  ('interface_body -> empty','interface_body',1,'p_interface_body','main.py',365),
  ('struct_definition -> CLASS ID generics_opt extends_opt LBRACE struct_body RBRACE','struct_definition',7,'p_struct_definition','main.py',372),
  ('enum_definition -> ENUM ID generics_opt LBRACE enum_body RBRACE','enum_definition',6,'p_enum_definition','main.py',382),
]
